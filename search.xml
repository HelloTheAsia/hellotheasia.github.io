<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/02/01/java/Java%E6%96%B0%E7%89%B9%E6%80%A7Reactive-Stream/"/>
      <url>/2025/02/01/java/Java%E6%96%B0%E7%89%B9%E6%80%A7Reactive-Stream/</url>
      
        <content type="html"><![CDATA[<h2 id="一-Publisher-发布者"><a href="#一-Publisher-发布者" class="headerlink" title="一.Publisher 发布者"></a>一.Publisher 发布者</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SubmissionPublisher&lt;String&gt; publisher = <span class="keyword">new</span> <span class="title class_">SubmissionPublisher</span>&lt;&gt;();  </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;  </span><br><span class="line">publisher.submit(<span class="string">&quot;p&quot;</span> + i);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二-Subscriber-订阅者"><a href="#二-Subscriber-订阅者" class="headerlink" title="二.Subscriber 订阅者"></a>二.Subscriber 订阅者</h2><p>onXXX:在xxx事件发生时,执行这个回调</p><h2 id="三-Subscription-订阅关系"><a href="#三-Subscription-订阅关系" class="headerlink" title="三.Subscription 订阅关系"></a>三.Subscription 订阅关系</h2><h2 id="四-Processor-处理器"><a href="#四-Processor-处理器" class="headerlink" title="四.Processor 处理器"></a>四.Processor 处理器</h2><p>Mono: 0|1个元素流</p><p>Flux: N个元素的流</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AP-AMS3.0接入HA美化教程</title>
      <link href="/2024/07/09/%E6%8A%98%E8%85%BE/AP-AMS3.0%E6%8E%A5%E5%85%A5HA%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/"/>
      <url>/2024/07/09/%E6%8A%98%E8%85%BE/AP-AMS3.0%E6%8E%A5%E5%85%A5HA%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="零-前期准备"><a href="#零-前期准备" class="headerlink" title="零.前期准备"></a>零.前期准备</h1><ul><li>Homeassistant的服务器版本推荐2024.03+,必须安装HACS</li><li>安装拓竹的HACS插件,项目地址:<a href="https://github.com/greghesp/ha-bambulab">greghesp&#x2F;ha-bambulab</a></li><li>主要使用项目:<a href="https://www.wolfwithsword.com/bambulab-home-assistant-dashboard/">Bambulab Home Assistant Dashboards (wolfwithsword.com)</a></li><li>确保AP-AMS已经通过mqtt接入ha<br>实现效果:<br><img src="https://pic.hiasia.fun/image/3b4aeaf52bbbaeb1a555c666aae4b4d7.png" alt="3b4aeaf52bbbaeb1a555c666aae4b4d7.png"></li></ul><h1 id="一-HACS安装相关插件"><a href="#一-HACS安装相关插件" class="headerlink" title="一.HACS安装相关插件"></a>一.HACS安装相关插件</h1><p><img src="https://pic.hiasia.fun/image/20240709092533.png" alt="image.png"></p><ul><li>card-mod</li><li>lovelace-layout-card</li><li>hui-element</li><li>button-card</li><li>mushroom</li><li>config-template-card</li><li>FontAwesome (in HACS integrations, not frontend) (在HACS安装完以后, 你需要去<strong>把它加入集成</strong>)</li><li>custom-ui</li><li>tabbed-card (only if using my NodeRed version)</li></ul><h4 id="修改config目录下的configuration-yaml"><a href="#修改config目录下的configuration-yaml" class="headerlink" title="修改config目录下的configuration.yaml"></a>修改config目录下的configuration.yaml</h4><p>不同的部署方式参考原项目:<a href="https://github.com/thomasloven/lovelace-card-mod">thomasloven&#x2F;lovelace-card-mod</a><br>在configuration.yaml最下方添加引入card-mod.js,下面我的配置(以docker方式部署的ha)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">frontend:</span><br><span class="line">  extra_module_url:</span><br><span class="line">    - /local/community/lovelace-card-mod/card-mod.js</span><br></pre></td></tr></table></figure><h1 id="二-上传资源文件"><a href="#二-上传资源文件" class="headerlink" title="二.上传资源文件"></a>二.上传资源文件</h1><p>下载资源文件:<a href="https://pic.hiasia.fun/image/bambu-ha-media-files.zip">静态媒体文件</a><br>也可以去群文件下载<br>解压后将两个文件夹上传到config目录<br><img src="https://pic.hiasia.fun/image/20240709101710.png" alt="image.png"></p><h1 id="三-编辑仪表盘"><a href="#三-编辑仪表盘" class="headerlink" title="三.编辑仪表盘"></a>三.编辑仪表盘</h1><h4 id="1-选择管理仪表盘"><a href="#1-选择管理仪表盘" class="headerlink" title="1.选择管理仪表盘"></a>1.选择管理仪表盘</h4><p><img src="https://pic.hiasia.fun/image/20240709102810.png" alt="image.png"></p><h4 id="2-新增仪表盘"><a href="#2-新增仪表盘" class="headerlink" title="2.新增仪表盘"></a>2.新增仪表盘</h4><p><img src="https://pic.hiasia.fun/image/20240709102912.png" alt="image.png"><br><img src="https://pic.hiasia.fun/image/20240709100249.png" alt="image.png"></p><h4 id="3-编辑仪表盘"><a href="#3-编辑仪表盘" class="headerlink" title="3.编辑仪表盘"></a>3.编辑仪表盘</h4><p>点击角落的编辑,选择原始配置编辑器<br><img src="https://pic.hiasia.fun/image/20240709100412.png" alt="image.png"></p><h4 id="4-下面是我的配置文件-供大家参考"><a href="#4-下面是我的配置文件-供大家参考" class="headerlink" title="4.下面是我的配置文件,供大家参考"></a>4.下面是我的配置文件,供大家参考</h4><p>想要自定义的可以参考,此项目,或自行修改:<a href="https://www.wolfwithsword.com/bambulab-home-assistant-dashboard/">Bambulab Home Assistant Dashboards (wolfwithsword.com)</a><br>如果你是A1的机器将配置文件中,<code>a1_实体id</code>全部替换为你真实的设备id格式为<code>a1_123456789</code>.<br>其中温湿度展示这里使用的是米家的温湿度传感器,如果你也有这个传感器 可以自行修改,这里的实体id分别为:<code>sensor.miaomiaoce_t2_94b1_relative_humidity</code>,<code>sensor.miaomiaoce_t2_94b1_temperature_humidity_sensor</code><br><img src="https://pic.hiasia.fun/image/20240709101050.png"></p><h4 id="以下为我的页面配置文件"><a href="#以下为我的页面配置文件" class="headerlink" title="以下为我的页面配置文件"></a>以下为我的页面配置文件</h4><p>下载地址:<a href="https://pic.hiasia.fun/image/a1_view_control.yaml">配置文件</a></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">views:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">Home</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:printer-3d-nozzle</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">custom:layout-card</span></span><br><span class="line">    <span class="attr">layout_type:</span> <span class="string">custom:horizontal-layout</span></span><br><span class="line">    <span class="attr">layout:</span></span><br><span class="line">      <span class="attr">max_cols:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">cards:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">        <span class="attr">cards:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">picture-elements</span></span><br><span class="line">            <span class="attr">elements:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">46</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">22.4</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">69em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">var(--tray_1_color)</span></span><br><span class="line">                  <span class="attr">opacity:</span> <span class="number">90</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">3px</span> <span class="string">3px</span> <span class="string">rgba(0,155,0,0.3)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">2px</span></span><br><span class="line">                  <span class="attr">width:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">height:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">sensor.ap_ams_1tong_dao_zhuang_tai</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">sensor.ap_ams_1tong_dao_zhuang_tai</span></span><br><span class="line">                  <span class="attr">icon:</span> <span class="string">mdi:numeric-1-circle</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">48</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">22.4</span><span class="string">%</span></span><br><span class="line">                  <span class="string">&#x27;--paper-item-icon-color&#x27;</span><span class="string">:</span> <span class="string">white</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.5)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">1</span> <span class="number">1</span> <span class="string">1px</span> <span class="string">1px</span> <span class="string">var(--tray_1_bg)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="string">2em</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.ap_ams_2tong_dao_zhuang_tai</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">10</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">22.5</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">6em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">2px</span> <span class="string">2px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_1tong_dao_hao_cai_lei_xing</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">80</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">22</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">1em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_1tong_dao_hao_cai_wen_du</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">86</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">22</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.1)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">46</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">40.1</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">69em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">var(--tray_2_color)</span></span><br><span class="line">                  <span class="attr">opacity:</span> <span class="number">90</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">3px</span> <span class="string">3px</span> <span class="string">rgba(0,155,0,0.3)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">2px</span></span><br><span class="line">                  <span class="attr">width:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">height:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">sensor.ap_ams_2tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">sensor.ap_ams_2tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                  <span class="attr">icon:</span> <span class="string">mdi:numeric-2-circle</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">48</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">40.1</span><span class="string">%</span></span><br><span class="line">                  <span class="string">&#x27;--paper-item-icon-color&#x27;</span><span class="string">:</span> <span class="string">white</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.5)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">1</span> <span class="number">1</span> <span class="string">1px</span> <span class="string">1px</span> <span class="string">var(--tray_1_bg)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="string">2em</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.ap_ams_2tong_dao_zhuang_tai</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">10</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">40.5</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">6em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">2px</span> <span class="string">2px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_2tong_dao_hao_cai_lei_xing</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">80</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">1em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_2tong_dao_hao_cai_wen_du</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">86</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.1)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">46</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">57.9</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">69em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">var(--tray_3_color)</span></span><br><span class="line">                  <span class="attr">opacity:</span> <span class="number">90</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">3px</span> <span class="string">3px</span> <span class="string">rgba(0,155,0,0.3)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">2px</span></span><br><span class="line">                  <span class="attr">width:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">height:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">sensor.ap_ams_3tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">sensor.ap_ams_3tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                  <span class="attr">icon:</span> <span class="string">mdi:numeric-3-circle</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">48</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">58.1</span><span class="string">%</span></span><br><span class="line">                  <span class="string">&#x27;--paper-item-icon-color&#x27;</span><span class="string">:</span> <span class="string">white</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.5)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">1</span> <span class="number">1</span> <span class="string">1px</span> <span class="string">1px</span> <span class="string">var(--tray_1_bg)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="string">2em</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.ap_ams_3tong_dao_zhuang_tai</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">10</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">58</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">6em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">2px</span> <span class="string">2px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_3tong_dao_hao_cai_lei_xing</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">80</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">58</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">1em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_3tong_dao_hao_cai_wen_du</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">86</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">58</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.1)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">light.ap_ams_4tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">light.ap_ams_4tong_dao_hao_cai_zhi_shi_deng</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">46</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">75.7</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">69em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">var(--tray_4_color)</span></span><br><span class="line">                  <span class="attr">opacity:</span> <span class="number">90</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">3px</span> <span class="string">3px</span> <span class="string">rgba(0,155,0,0.3)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">2px</span></span><br><span class="line">                  <span class="attr">width:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">height:</span> <span class="number">40</span><span class="string">%</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                <span class="attr">entities:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">sensor.ap_ams_4tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                <span class="attr">element:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                  <span class="attr">entity:</span> <span class="string">sensor.ap_ams_4tong_dao_ben_ji_tong_dao</span></span><br><span class="line">                  <span class="attr">icon:</span> <span class="string">mdi:numeric-3-circle</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">48</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">75.5</span><span class="string">%</span></span><br><span class="line">                  <span class="string">&#x27;--paper-item-icon-color&#x27;</span><span class="string">:</span> <span class="string">white</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.5)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">1</span> <span class="number">1</span> <span class="string">1px</span> <span class="string">1px</span> <span class="string">var(--tray_1_bg)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="string">2em</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.ap_ams_4tong_dao_zhuang_tai</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">10</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">75.5</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">6em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">2px</span> <span class="string">2px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_4tong_dao_hao_cai_lei_xing</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">80</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">75.5</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="string">1em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.4)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0.4</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">text.ap_ams_4tong_dao_hao_cai_wen_du</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                <span class="attr">style:</span></span><br><span class="line">                  <span class="attr">top:</span> <span class="number">86</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">left:</span> <span class="number">75.5</span><span class="string">%</span></span><br><span class="line">                  <span class="attr">text-align:</span> <span class="string">center</span></span><br><span class="line">                  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                  <span class="attr">background-color:</span> <span class="string">rgba(0,0,0,0.1)</span></span><br><span class="line">                  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">5px</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">)</span></span><br><span class="line">                  <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                  <span class="attr">pointer-events:</span> <span class="string">none</span></span><br><span class="line">                  <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">conditional</span></span><br><span class="line">                <span class="attr">conditions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.miaomiaoce_t2_94b1_temperature_humidity_sensor</span></span><br><span class="line">                    <span class="attr">state_not:</span> <span class="string">offline</span></span><br><span class="line">                <span class="attr">elements:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">conditional</span></span><br><span class="line">                    <span class="attr">conditions:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.miaomiaoce_t2_94b1_temperature_humidity_sensor</span></span><br><span class="line">                        <span class="attr">state_not:</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="string">unavailable</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="string">unknown</span></span><br><span class="line">                    <span class="attr">elements:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.miaomiaoce_t2_94b1_temperature_humidity_sensor</span></span><br><span class="line">                        <span class="attr">attribute:</span> <span class="string">temperature-2-1</span></span><br><span class="line">                        <span class="attr">type:</span> <span class="string">state-badge</span></span><br><span class="line">                        <span class="attr">style:</span></span><br><span class="line">                          <span class="attr">top:</span> <span class="number">50.75</span><span class="string">%</span></span><br><span class="line">                          <span class="attr">left:</span> <span class="number">8</span><span class="string">%</span></span><br><span class="line">                          <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">75em</span></span><br><span class="line">                          <span class="attr">color:</span> <span class="string">rgba(0,0,0,0)</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:config-template-card</span></span><br><span class="line">                    <span class="attr">entities:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">sensor.miaomiaoce_t2_94b1_relative_humidity</span></span><br><span class="line">                    <span class="attr">element:</span></span><br><span class="line">                      <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                      <span class="attr">entity:</span> <span class="string">sensor.miaomiaoce_t2_94b1_relative_humidity</span></span><br><span class="line">                      <span class="attr">icon:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">                        $&#123;&#x27;fapro:humidity-level-dark-&#x27; + (function() &#123;</span></span><br><span class="line"><span class="string">                          var humidity = states[&#x27;sensor.miaomiaoce_t2_94b1_relative_humidity&#x27;].attributes[&#x27;relative_humidity-2-2&#x27;];</span></span><br><span class="line"><span class="string">                          if (humidity &gt;= 10 &amp;&amp; humidity &lt; 20) &#123;</span></span><br><span class="line"><span class="string">                            return 1;</span></span><br><span class="line"><span class="string">                          &#125; else if (humidity &gt;= 20 &amp;&amp; humidity &lt; 30) &#123;</span></span><br><span class="line"><span class="string">                            return 2;</span></span><br><span class="line"><span class="string">                          &#125; else if (humidity &gt;= 30 &amp;&amp; humidity &lt; 40) &#123;</span></span><br><span class="line"><span class="string">                            return 3;</span></span><br><span class="line"><span class="string">                          &#125; else if (humidity &gt;= 40 &amp;&amp; humidity &lt; 50) &#123;</span></span><br><span class="line"><span class="string">                            return 4;</span></span><br><span class="line"><span class="string">                          &#125; else &#123;</span></span><br><span class="line"><span class="string">                            return 5;</span></span><br><span class="line"><span class="string">                          &#125;</span></span><br><span class="line"><span class="string">                        &#125;)() + &#x27;#fullcolor&#x27;&#125;</span></span><br><span class="line"><span class="string"></span>                    <span class="attr">style:</span></span><br><span class="line">                      <span class="attr">top:</span> <span class="number">38.5</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">left:</span> <span class="number">92.5</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">background-color:</span> <span class="string">&#x27;#1c1c1c&#x27;</span></span><br><span class="line">                      <span class="attr">border-radius:</span> <span class="string">50px</span></span><br><span class="line">                      <span class="attr">border:</span> <span class="number">0.</span><span class="string">12em</span> <span class="string">solid</span> <span class="string">var(--humidity-border-color)</span></span><br><span class="line">                      <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="number">2.</span><span class="string">05em</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">/local/media/bambuprinter/AP_AMS.png</span></span><br><span class="line">            <span class="attr">card_mod:</span></span><br><span class="line">              <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                ha-card &#123;</span></span><br><span class="line"><span class="string">                  background: none !important;</span></span><br><span class="line"><span class="string">                  border: none !important;</span></span><br><span class="line"><span class="string">                  box-shadow: none !important;sensor.miaomiaoce_t2_94b1_relative_humidity;</span></span><br><span class="line"><span class="string">                  --tray_1_color: &#123;% if is_state_attr(&#x27;light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;, [0, 0, 0]) %&#125; rgb(255, 255, 255); &#123;% else %&#125; rgb(&#123;&#123; state_attr(&#x27;light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[0] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[1] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_1tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[2] &#125;&#125;);&#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                  --tray_2_color: &#123;% if is_state_attr(&#x27;light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;, [0, 0, 0]) %&#125; rgb(255, 255, 255); &#123;% else %&#125; rgb(&#123;&#123; state_attr(&#x27;light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[0] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[1] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_2tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[2] &#125;&#125;);&#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                  --tray_3_color: &#123;% if is_state_attr(&#x27;light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;, [0, 0, 0]) %&#125; rgb(255, 255, 255); &#123;% else %&#125; rgb(&#123;&#123; state_attr(&#x27;light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[0] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[1] &#125;&#125;, &#123;&#123; state_attr(&#x27;light.ap_ams_3tong_dao_hao_cai_zhi_shi_deng&#x27;, &#x27;rgb_color&#x27;)[2] &#125;&#125;);&#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                  --tray_4_color: </span></span><br><span class="line"><span class="string">                  --tray_1_bg: rgba(255,255,0,0.5);</span></span><br><span class="line"><span class="string">                  --tray_2_bg: &#123;% if is_state_attr(&#x27;sensor.ap_ams_tray_2&#x27;, &#x27;active&#x27;, true) %&#125; rgba(255, 255, 126, 0.5); &#123;% else %&#125; rgba(0,0,0,0.5); &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                  --tray_3_bg: &#123;% if is_state_attr(&#x27;sensor.ap_ams_tray_3&#x27;, &#x27;active&#x27;, true) %&#125; rgba(255, 255, 126, 0.5); &#123;% else %&#125; rgba(0,0,0,0.5); &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                  --tray_4_bg: &#123;% if is_state_attr(&#x27;sensor.ap_ams_tray_4&#x27;, &#x27;active&#x27;, true) %&#125; rgba(255, 255, 126, 0.5); &#123;% else %&#125; rgba(0,0,0,0.5); &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">picture-elements</span></span><br><span class="line">            <span class="attr">elements:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">conditional</span></span><br><span class="line">                <span class="attr">conditions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_status</span></span><br><span class="line">                    <span class="attr">state_not:</span> <span class="string">offline</span></span><br><span class="line">                <span class="attr">elements:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">light.a1_实体id_chamber_light</span></span><br><span class="line">                    <span class="attr">type:</span> <span class="string">state-icon</span></span><br><span class="line">                    <span class="attr">style:</span></span><br><span class="line">                      <span class="attr">top:</span> <span class="number">45</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">left:</span> <span class="number">89</span><span class="string">%</span></span><br><span class="line">                      <span class="string">&#x27;--mdc-icon-size&#x27;</span><span class="string">:</span> <span class="number">2.</span><span class="string">6em</span></span><br><span class="line">                    <span class="attr">tap_action:</span></span><br><span class="line">                      <span class="attr">action:</span> <span class="string">toggle</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_status</span></span><br><span class="line">                    <span class="attr">type:</span> <span class="string">state-label</span></span><br><span class="line">                    <span class="attr">style:</span></span><br><span class="line">                      <span class="attr">top:</span> <span class="number">82.5</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">left:</span> <span class="number">78.8</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">75em</span></span><br><span class="line">                      <span class="attr">color:</span> <span class="string">&#x27;#FFFFFF&#x27;</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">conditional</span></span><br><span class="line">                    <span class="attr">conditions:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_status</span></span><br><span class="line">                        <span class="attr">state:</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="string">running</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="string">pause</span></span><br><span class="line">                    <span class="attr">elements:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">conditional</span></span><br><span class="line">                        <span class="attr">conditions:</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">image.a1_实体id_cover_image</span></span><br><span class="line">                            <span class="attr">state_not:</span> <span class="string">unavailable</span></span><br><span class="line">                        <span class="attr">elements:</span></span><br><span class="line">                          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">                            <span class="attr">card_type:</span> <span class="string">picture-entity</span></span><br><span class="line">                            <span class="attr">show_name:</span> <span class="literal">false</span></span><br><span class="line">                            <span class="attr">show_state:</span> <span class="literal">false</span></span><br><span class="line">                            <span class="attr">entity:</span> <span class="string">image.a1_实体id_cover_image</span></span><br><span class="line">                            <span class="attr">style:</span></span><br><span class="line">                              <span class="attr">top:</span> <span class="number">61.5</span><span class="string">%</span></span><br><span class="line">                              <span class="attr">left:</span> <span class="number">47</span><span class="string">%</span></span><br><span class="line">                              <span class="attr">transform:</span> <span class="string">translate(-45%,</span> <span class="number">-40</span><span class="string">%)</span> <span class="string">scale(75%,</span> <span class="number">75</span><span class="string">%)</span></span><br><span class="line">                              <span class="string">&#x27;--ha-card-border-width&#x27;</span><span class="string">:</span> <span class="string">0px</span></span><br><span class="line">                              <span class="string">&#x27;--ha-card-background&#x27;</span><span class="string">:</span> <span class="string">none</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_progress</span></span><br><span class="line">                        <span class="attr">type:</span> <span class="string">state-badge</span></span><br><span class="line">                        <span class="attr">tap_action:</span></span><br><span class="line">                          <span class="attr">action:</span> <span class="string">none</span></span><br><span class="line">                        <span class="attr">style:</span></span><br><span class="line">                          <span class="attr">top:</span> <span class="number">18.5</span><span class="string">%</span></span><br><span class="line">                          <span class="attr">left:</span> <span class="number">74</span><span class="string">%</span></span><br><span class="line">                          <span class="attr">font-size:</span> <span class="string">1em</span></span><br><span class="line">                          <span class="attr">color:</span> <span class="string">rgba(0,0,0,0)</span></span><br><span class="line">                          <span class="string">&#x27;--label-badge-red&#x27;</span><span class="string">:</span> <span class="string">&#x27;#11739D&#x27;</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_nozzle_temperature</span></span><br><span class="line">                    <span class="attr">type:</span> <span class="string">state-badge</span></span><br><span class="line">                    <span class="attr">style:</span></span><br><span class="line">                      <span class="attr">top:</span> <span class="number">35</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">left:</span> <span class="number">46.5</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                      <span class="attr">color:</span> <span class="string">rgba(0,0,0,0)</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_bed_temperature</span></span><br><span class="line">                    <span class="attr">type:</span> <span class="string">state-badge</span></span><br><span class="line">                    <span class="attr">style:</span></span><br><span class="line">                      <span class="attr">top:</span> <span class="number">95</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">left:</span> <span class="number">46.5</span><span class="string">%</span></span><br><span class="line">                      <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">8em</span></span><br><span class="line">                      <span class="attr">color:</span> <span class="string">rgba(0,0,0,0)</span></span><br><span class="line">            <span class="attr">card_mod:</span></span><br><span class="line">              <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                ha-card &#123;</span></span><br><span class="line"><span class="string">                  background: none !important;</span></span><br><span class="line"><span class="string">                  border: none !important; </span></span><br><span class="line"><span class="string">                  box-shadow: none !important;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span>            <span class="attr">image:</span> <span class="string">/local/media/bambuprinter/a1_lightoff.png</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">light.a1_实体id_chamber_light</span></span><br><span class="line">            <span class="attr">state_image:</span></span><br><span class="line">              <span class="attr">unavailable:</span> <span class="string">/local/media/bambuprinter/a1_lightoff.png</span></span><br><span class="line">              <span class="attr">&#x27;on&#x27;:</span> <span class="string">/local/media/bambuprinter/a1_lighton.png</span></span><br><span class="line">              <span class="attr">&#x27;off&#x27;:</span> <span class="string">/local/media/bambuprinter/a1_lightoff.png</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">        <span class="attr">cards:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:button-card</span></span><br><span class="line">            <span class="attr">entity:</span> <span class="string">switch.detail</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">Detail</span></span><br><span class="line">            <span class="attr">icon:</span> <span class="string">mdi:printer-3d</span></span><br><span class="line">            <span class="attr">show_icon:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">show_state:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">layout:</span> <span class="string">icon_name</span></span><br><span class="line">            <span class="attr">tap_action:</span></span><br><span class="line">              <span class="attr">action:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                [[[</span></span><br><span class="line"><span class="string">                  if (entity) return &#x27;toggle&#x27;;</span></span><br><span class="line"><span class="string">                  else return &#x27;none&#x27;;</span></span><br><span class="line"><span class="string">                ]]]</span></span><br><span class="line"><span class="string"></span>            <span class="attr">confirmation:</span></span><br><span class="line">              <span class="attr">text:</span> <span class="string">Toggle</span> <span class="string">Printer</span> <span class="string">Power?</span></span><br><span class="line">            <span class="attr">state:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">&#x27;on&#x27;</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:power</span></span><br><span class="line">                <span class="attr">color:</span> <span class="string">green</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">&#x27;off&#x27;</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:power</span></span><br><span class="line">                <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">            <span class="attr">styles:</span></span><br><span class="line">              <span class="attr">grid:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">grid-template-columns:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    [[[</span></span><br><span class="line"><span class="string">                      if (entity) return &#x27;20% 1fr 20%&#x27;;</span></span><br><span class="line"><span class="string">                      else return &#x27;20% 1fr 20%&#x27;;</span></span><br><span class="line"><span class="string">                    ]]]</span></span><br><span class="line"><span class="string"></span>              <span class="attr">icon:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">width:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    [[[</span></span><br><span class="line"><span class="string">                      if (entity) return &#x27;65px&#x27;;</span></span><br><span class="line"><span class="string">                      else return &#x27;0px&#x27;;</span></span><br><span class="line"><span class="string">                    ]]]</span></span><br><span class="line"><span class="string"></span>                <span class="bullet">-</span> <span class="attr">padding-left:</span> <span class="string">20px</span></span><br><span class="line">              <span class="attr">name:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">text-wrap:</span> <span class="string">balance</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">font-size:</span> <span class="number">1.</span><span class="string">4em</span></span><br><span class="line">            <span class="attr">card_mod:</span></span><br><span class="line">              <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                ha-card &#123;</span></span><br><span class="line"><span class="string">                  background: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                  border: none;</span></span><br><span class="line"><span class="string">                  box-shadow: none !important;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:gap-card</span></span><br><span class="line">            <span class="attr">height:</span> <span class="number">5</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">            <span class="attr">card_type:</span> <span class="string">horizontal-stack</span></span><br><span class="line">            <span class="attr">cards:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">                <span class="attr">card_type:</span> <span class="string">button</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">安静</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:speedometer-slow</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">call-service</span></span><br><span class="line">                  <span class="attr">service:</span> <span class="string">select.select_option</span></span><br><span class="line">                  <span class="attr">data:</span></span><br><span class="line">                    <span class="attr">option:</span> <span class="string">silent</span></span><br><span class="line">                  <span class="attr">target:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --pbs-button-color: &#123;% if is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;Silent&#x27;) or is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;silent&#x27;) %&#125; yellow; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;Silent&#x27;) or is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;silent&#x27;) %&#125; yellow; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"></span>              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">                <span class="attr">card_type:</span> <span class="string">button</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">标准</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:speedometer-medium</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">call-service</span></span><br><span class="line">                  <span class="attr">service:</span> <span class="string">select.select_option</span></span><br><span class="line">                  <span class="attr">data:</span></span><br><span class="line">                    <span class="attr">option:</span> <span class="string">standard</span></span><br><span class="line">                  <span class="attr">target:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;Standard&#x27;) or is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;standard&#x27;) %&#125; yellow; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"></span>              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">                <span class="attr">card_type:</span> <span class="string">button</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">运动</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:speedometer</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">call-service</span></span><br><span class="line">                  <span class="attr">service:</span> <span class="string">select.select_option</span></span><br><span class="line">                  <span class="attr">data:</span></span><br><span class="line">                    <span class="attr">option:</span> <span class="string">sport</span></span><br><span class="line">                  <span class="attr">target:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;Sport&#x27;) or is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;sport&#x27;) %&#125; yellow; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"></span>              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">                <span class="attr">card_type:</span> <span class="string">button</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">狂暴</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:speedometer</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">call-service</span></span><br><span class="line">                  <span class="attr">service:</span> <span class="string">select.select_option</span></span><br><span class="line">                  <span class="attr">data:</span></span><br><span class="line">                    <span class="attr">option:</span> <span class="string">ludicrous</span></span><br><span class="line">                  <span class="attr">target:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">select.a1_实体id_printing_speed</span></span><br><span class="line">                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;Ludicrous&#x27;) or is_state(&#x27;select.a1_实体id_printing_speed&#x27;, &#x27;ludicrous&#x27;) %&#125; yellow; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"></span>          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">            <span class="attr">cards:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:mushroom-title-card</span></span><br><span class="line">                <span class="attr">title:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="attr">subtitle:</span> <span class="string">Print</span> <span class="string">Details</span></span><br><span class="line">                <span class="attr">alignment:</span> <span class="string">center</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:mushroom-entity-card</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_task_name</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">Task</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">mdi:clipboard-text</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">horizontal-stack</span></span><br><span class="line">                <span class="attr">cards:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:mushroom-entity-card</span></span><br><span class="line">                    <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_progress</span></span><br><span class="line">                    <span class="attr">name:</span> <span class="string">Progress</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:progress-helper</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:mushroom-template-card</span></span><br><span class="line">                    <span class="attr">primary:</span> <span class="string">Layer</span></span><br><span class="line">                    <span class="attr">icon_color:</span> <span class="string">var(--rgb-state-entity)</span></span><br><span class="line">                    <span class="attr">secondary:</span> <span class="string">&gt;-</span></span><br><span class="line"><span class="string">                      &#123;&#123;states(&#x27;sensor.a1_实体id_current_layer&#x27;)&#125;&#125; /</span></span><br><span class="line"><span class="string">                      &#123;&#123;states(&#x27;sensor.a1_实体id_total_layer_count&#x27;)&#125;&#125;</span></span><br><span class="line"><span class="string"></span>                    <span class="attr">icon:</span> <span class="string">mdi:layers</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:tabbed-card</span></span><br><span class="line">            <span class="attr">options:</span> &#123;&#125;</span><br><span class="line">            <span class="attr">tabs:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">card:</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">vertical-stack</span></span><br><span class="line">                  <span class="attr">cards:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">entities</span></span><br><span class="line">                      <span class="attr">entities:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_current_stage</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">Stage</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">binary_sensor.a1_实体id_hms_errors</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">HMS</span> <span class="string">Notifications</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_start_time</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">Start</span> <span class="string">Time</span></span><br><span class="line">                          <span class="attr">secondary_info:</span> <span class="string">last-changed</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_end_time</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">End</span> <span class="string">Time</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_remaining_time</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">Remaining</span> <span class="string">Time</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="attr">entity:</span> <span class="string">binary_sensor.a1_实体id_firmware_update</span></span><br><span class="line">                          <span class="attr">name:</span> <span class="string">Firmware</span></span><br><span class="line">                <span class="attr">attributes:</span></span><br><span class="line">                  <span class="attr">label:</span> <span class="string">Details</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:gap-card</span></span><br><span class="line">            <span class="attr">height:</span> <span class="number">5</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:hui-element</span></span><br><span class="line">            <span class="attr">card_type:</span> <span class="string">vertical-stack</span></span><br><span class="line">            <span class="attr">cards:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:button-card</span></span><br><span class="line">                <span class="attr">variables:</span></span><br><span class="line">                  <span class="attr">pause_entity:</span> <span class="string">button.a1_实体id_pause_printing</span></span><br><span class="line">                  <span class="attr">start_entity:</span> <span class="string">button.a1_实体id_resume_printing</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_status</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                  [[[  if (entity.state.toUpperCase() == &#x27;RUNNING&#x27;) return</span></span><br><span class="line"><span class="string">                  &quot;Pause&quot;;</span></span><br><span class="line"><span class="string">                   else if (entity.state.toUpperCase() == &#x27;PAUSE&#x27;) return &quot;Resume&quot;;</span></span><br><span class="line"><span class="string">                  else return &#x27;&#x27;;  ]]]</span></span><br><span class="line"><span class="string"></span>                <span class="attr">state:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">RUNNING</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:pause</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">orange</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">running</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:pause</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">orange</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">PAUSE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:play</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">orange</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">pause</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:play</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">orange</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">OFFLINE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">offline</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">IDLE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">idle</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">FAILED</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">failed</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">FINISH</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">finish</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">PREPARE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">prepare</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                    [[[ if (entity.state.toUpperCase() == &#x27;RUNNING&#x27; ||</span></span><br><span class="line"><span class="string">                    entity.state.toUpperCase() == &#x27;PAUSE&#x27;) return</span></span><br><span class="line"><span class="string">                    &quot;call-service&quot;; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line">                    <span class="string">else</span> <span class="string">return</span> <span class="string">&quot;none&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">                    <span class="string">]]]</span></span><br><span class="line">                  <span class="attr">service:</span> <span class="string">button.press</span></span><br><span class="line">                  <span class="attr">service_data:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                      [[[ if</span></span><br><span class="line"><span class="string">                      (states[&#x27;sensor.a1_实体id_print_status&#x27;].state.toUpperCase()</span></span><br><span class="line"><span class="string">                      == &#x27;RUNNING&#x27;) </span></span><br><span class="line"><span class="string">                          return variables.pause_entity; </span></span><br><span class="line"><span class="string">                          if (states[&#x27;sensor.a1_实体id_print_status&#x27;].state.toUpperCase() == &#x27;PAUSE&#x27;) </span></span><br><span class="line"><span class="string">                          return variables.start_entity; </span></span><br><span class="line"><span class="string">                        else return &quot;&quot;;</span></span><br><span class="line"><span class="string">                        ]]]</span></span><br><span class="line"><span class="string"></span>                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;RUNNING&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;PAUSE&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;running&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;pause&#x27;) %&#125; orange; &#123;% else %&#125; grey; &#123;% endif %&#125;    </span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string"></span>              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:gap-card</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">custom:button-card</span></span><br><span class="line">                <span class="attr">entity:</span> <span class="string">sensor.a1_实体id_print_status</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                  [[[  if (entity.state.toUpperCase() == &#x27;RUNNING&#x27;) return</span></span><br><span class="line"><span class="string">                  &quot;Cancel&quot;;</span></span><br><span class="line"><span class="string">                   else if (entity.state.toUpperCase() ==&#x27;PAUSE&#x27;) return &quot;Cancel&quot;;</span></span><br><span class="line"><span class="string">                  else return &#x27;&#x27;;  ]]]</span></span><br><span class="line"><span class="string"></span>                <span class="attr">confirmation:</span></span><br><span class="line">                  <span class="attr">text:</span> <span class="string">Cancel</span> <span class="string">Print?</span></span><br><span class="line">                <span class="attr">state:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">RUNNING</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:cancel</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">red</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">running</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:cancel</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">red</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">PAUSE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:cancel</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">red</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">pause</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:cancel</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">red</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">OFFLINE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">offline</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">IDLE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">idle</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">FAILED</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">failed</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">FINISH</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">finish</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">PREPARE</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">value:</span> <span class="string">prepare</span></span><br><span class="line">                    <span class="attr">icon:</span> <span class="string">mdi:void</span></span><br><span class="line">                    <span class="attr">color:</span> <span class="string">grey</span></span><br><span class="line">                <span class="attr">tap_action:</span></span><br><span class="line">                  <span class="attr">action:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">                    [[[ if (entity.state.toUpperCase() == &#x27;RUNNING&#x27; ||</span></span><br><span class="line"><span class="string">                    entity.state.toUpperCase() == &#x27;PAUSE&#x27;) return</span></span><br><span class="line"><span class="string">                    &quot;call-service&quot;;  else return &quot;none&quot;; ]]]</span></span><br><span class="line"><span class="string"></span>                  <span class="attr">service:</span> <span class="string">button.press</span></span><br><span class="line">                  <span class="attr">service_data:</span></span><br><span class="line">                    <span class="attr">entity_id:</span> <span class="string">button.a1_实体id_stop_printing</span></span><br><span class="line">                <span class="attr">card_mod:</span></span><br><span class="line">                  <span class="attr">style:</span> <span class="string">|</span></span><br><span class="line"><span class="string">                    ha-card &#123;</span></span><br><span class="line"><span class="string">                      box-shadow: none !important;</span></span><br><span class="line"><span class="string">                      background-color: rgba(0,0,0,0);</span></span><br><span class="line"><span class="string">                      border: none;</span></span><br><span class="line"><span class="string">                      --paper-item-icon-color: &#123;% if is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;RUNNING&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;PAUSE&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;running&#x27;) or is_state(&#x27;sensor.a1_实体id_print_status&#x27;, &#x27;pause&#x27;) %&#125; red; &#123;% else %&#125; grey; &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三.AP-AMS-3.0组装流程</title>
      <link href="/2024/07/08/%E6%8A%98%E8%85%BE/%E4%B8%89.AP-AMS-3.0%E7%BB%84%E8%A3%85%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/07/08/%E6%8A%98%E8%85%BE/%E4%B8%89.AP-AMS-3.0%E7%BB%84%E8%A3%85%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="零-前期准备"><a href="#零-前期准备" class="headerlink" title="零.前期准备"></a>零.前期准备</h1><ol><li>3d打印AP-AMS挤出机一套<a href="https://makerworld.com/zh/models/463829?from=search#profileId-372457">AP-AMS 来自 苹果香蕉泥 - MakerWorld</a></li><li>配件若干</li><li>AP-AMS焊接并刷写好的电路板一套<br>项目地址:<a href="https://makerworld.com/zh/models/463829?from=search#profileId-372457">AP-AMS 来自 苹果香蕉泥 - MakerWorld</a><br><strong>建议</strong>:挤出机中的传动齿轮,下图零件(受力较大),推荐单独打印,PETG 0.12层高 比平时打印稍高一些温度以提高零件强度<br>其它配件没有什么特别注意的.使用作者提供的模型即可<br><img src="https://pic.hiasia.fun/image/20240705010033.png" alt="image.png"></li></ol><h1 id="一-下单材料"><a href="#一-下单材料" class="headerlink" title="一.下单材料"></a>一.下单材料</h1><h3 id="方式一-根据关键词自己搜索下单"><a href="#方式一-根据关键词自己搜索下单" class="headerlink" title="方式一:根据关键词自己搜索下单"></a>方式一:根据关键词自己搜索下单</h3><p>作者项目地址,页面下方有列出需要用到的材料<br><a href="https://makerworld.com/zh/models/463829?from=search#profileId-372457">AP-AMS 来自 苹果香蕉泥 - MakerWorld</a><br>自己下单一定要注意配件不要买错规格</p><ul><li>9g舵机必须是<strong>180度</strong></li><li>TT电机齿轮比.1:xx,其中xx越大转速越慢,比值多少没关系</li><li>圆柱销非常推荐购买,在舵机运转时,受力较大.塑料轴会发生少量变形导致打齿</li></ul><h3 id="方式二-淘宝购物车抄作业下单"><a href="#方式二-淘宝购物车抄作业下单" class="headerlink" title="方式二:淘宝购物车抄作业下单"></a>方式二:淘宝购物车抄作业下单</h3><p>在<strong>群公告</strong>中查找群主分享的抄作业购物车.挑选下单即可<br><img src="https://pic.hiasia.fun/image/20240704194843.png" alt="image.png"></p><h1 id="二-组装配件"><a href="#二-组装配件" class="headerlink" title="二.组装配件"></a>二.组装配件</h1><h3 id="1-安装挤出机"><a href="#1-安装挤出机" class="headerlink" title="1.安装挤出机"></a>1.安装挤出机</h3><ul><li><p>建议大家按照作者的视频进行安装挤出机<br><a href="https://www.bilibili.com/video/BV1pU411Z7rR/?share_source=copy_web&vd_source=8aeb61b70d38619069c0c334d52aca84">AP-AMS简单组装视频</a></p></li><li><p>组装完后,按照图中所示连接电机与舵机<br><img src="https://pic.hiasia.fun/image/20240705002333.png" alt="image.png"></p></li><li><p>测试:在ha中选择电机状态前进,查看耗材向蓝色剪头方向运动,则安装正确<br><img src="https://pic.hiasia.fun/image/af48dbecc6e1416133118ba683c1e399.png" alt="af48dbecc6e1416133118ba683c1e399.png"></p></li></ul><h1 id="三-准备开始打印"><a href="#三-准备开始打印" class="headerlink" title="三.准备开始打印"></a>三.准备开始打印</h1><p>建议制作AP-AMS至少两块.如果只制作一块.另一半耗材的需要人为换色.那就不叫AMS(Automated Material System)了.变成了”MMS”(Manual Material System).</p><h3 id="1-通过软排线连接两块AP-AMS"><a href="#1-通过软排线连接两块AP-AMS" class="headerlink" title="1.通过软排线连接两块AP-AMS"></a>1.通过软排线连接两块AP-AMS</h3><p>连接<strong>OUT-&gt;IN</strong><br><img src="https://pic.hiasia.fun/image/20240705004844.png" alt="image.png"></p><h3 id="2-连接打印机"><a href="#2-连接打印机" class="headerlink" title="2.连接打印机"></a>2.连接打印机</h3><p>挤出机的气动接头连接打印机的五通口中的任意两个孔<br>拓竹五通的结构<br><a href="https://wiki.bambulab.com/zh/a1/maintenance/filament_hub_cleaning">A1 系列五通组件拆解与清理 | Bambu Lab Wiki</a></p><h3 id="2-打开BamBuStudio"><a href="#2-打开BamBuStudio" class="headerlink" title="2.打开BamBuStudio"></a>2.打开BamBuStudio</h3><ul><li>确定两种耗材的<strong>编号</strong>与板子上之前配置的<strong>本机通道号</strong>相同</li></ul><p><img src="https://pic.hiasia.fun/image/20240705012222.png" alt="image.png"></p><ul><li>修改G-Code</li></ul><p><img src="https://pic.hiasia.fun/image/20240705004134.png"><br>没错就是只有这两行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">M73 P&#123;110+next_extruder&#125; R[next_extruder]</span><br><span class="line">M400 U1</span><br></pre></td></tr></table></figure><p>接着就可以开始发起打印了,<strong>第一次打印需要手动给第一通道上料</strong><br>开始享受AP-AMS带来的自动换料过程吧</p>]]></content>
      
      
      <categories>
          
          <category> 未分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二.AP-AMS-3.0焊接刷机流程</title>
      <link href="/2024/07/07/%E6%8A%98%E8%85%BE/%E4%BA%8C.AP-AMS-3.0%E7%84%8A%E6%8E%A5%E5%88%B7%E6%9C%BA%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/07/07/%E6%8A%98%E8%85%BE/%E4%BA%8C.AP-AMS-3.0%E7%84%8A%E6%8E%A5%E5%88%B7%E6%9C%BA%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="零-前期准备"><a href="#零-前期准备" class="headerlink" title="零.前期准备"></a>零.前期准备</h1><ul><li>BOM元器件</li><li>PCB板</li><li>焊接工具(热风枪,铁板烧),推荐铁板烧</li><li>焊锡膏</li><li>USB转串口模块(这里使用的是CH340G)</li><li>刷机软件(ESP8266固件烧录软件)<ul><li>参考下面教程:<a href="https://blog.csdn.net/qq_42455308/article/details/104555160">ESP8266固件烧录软件</a></li></ul></li><li>下载固件<ul><li><a href="https://github.com/applenana/AP-AMS/releases">AP-AMS (github.com)</a></li></ul></li></ul><h1 id="一-焊接电路板"><a href="#一-焊接电路板" class="headerlink" title="一.焊接电路板"></a>一.焊接电路板</h1><p>焊接遵循<code>由小到大,插件最后</code>的规则</p><h3 id="1-找出BOM表单"><a href="#1-找出BOM表单" class="headerlink" title="1.找出BOM表单"></a>1.找出BOM表单</h3><p>其中BOM表中这一列与PCB板子上的丝印相对应<br><img src="https://pic.hiasia.fun/image/20240704202522.png" alt="image.png"></p><p>比如<strong>第一个10uF的电容为C3,对应板子上的C3位置,依此类推</strong></p><p>焊接好的成品如下:<br><img src="https://pic.hiasia.fun/image/20240704204432.png" alt="image.png"></p><h1 id="一-开始刷机"><a href="#一-开始刷机" class="headerlink" title="一.开始刷机"></a>一.开始刷机</h1><h5 id="参考视频-【-YBA-AMS-拓竹DIY多色打印-软件部分说明】-https-www-bilibili-com-video-BV1NC411b76J-share-source-copy-web-vd-source-8aeb61b70d38619069c0c334d52aca84"><a href="#参考视频-【-YBA-AMS-拓竹DIY多色打印-软件部分说明】-https-www-bilibili-com-video-BV1NC411b76J-share-source-copy-web-vd-source-8aeb61b70d38619069c0c334d52aca84" class="headerlink" title="参考视频:【[YBA-AMS] 拓竹DIY多色打印-软件部分说明】 https://www.bilibili.com/video/BV1NC411b76J/?share_source=copy_web&amp;vd_source=8aeb61b70d38619069c0c334d52aca84"></a>参考视频:【[YBA-AMS] 拓竹DIY多色打印-软件部分说明】 <a href="https://www.bilibili.com/video/BV1NC411b76J/?share_source=copy_web&vd_source=8aeb61b70d38619069c0c334d52aca84">https://www.bilibili.com/video/BV1NC411b76J/?share_source=copy_web&amp;vd_source=8aeb61b70d38619069c0c334d52aca84</a></h5><h3 id="1-使用USB转串口模块连接电路板"><a href="#1-使用USB转串口模块连接电路板" class="headerlink" title="1.使用USB转串口模块连接电路板"></a>1.使用USB转串口模块连接电路板</h3><ul><li>电路板按照下图连接好usb转串口模块.</li></ul><p><img src="https://pic.hiasia.fun/image/20240626110507.png" alt="image.png"></p><h3 id="2-使用flash-download-tools刷机"><a href="#2-使用flash-download-tools刷机" class="headerlink" title="2.使用flash_download_tools刷机"></a>2.使用flash_download_tools刷机</h3><ul><li>按图中内容填写</li></ul><p><img src="https://pic.hiasia.fun/image/20240626111138.png" alt="image.png"></p><ul><li>按住板子上的flash(烧录按键),点击开始后,插入电脑,在按RST按键.等待下面有刷写进度条出现.即可松开按钮<ul><li>这一步如果没有任何反应.确保接线没有问题后.将tx与rx线调换后再尝试刷机</li></ul></li><li>显示FINISH就刷写完成了<br><img src="https://pic.hiasia.fun/image/20240626111920.png" alt="image.png"></li></ul><h1 id="二-填写AP-AMS配置"><a href="#二-填写AP-AMS配置" class="headerlink" title="二.填写AP-AMS配置"></a>二.填写AP-AMS配置</h1><p>参考源项目文档<br><a href="https://github.com/applenana/AP-AMS/blob/main/doc/%E9%85%8D%E7%BD%AE.md">AP-AMS&#x2F;doc&#x2F;配置.md at main · applenana&#x2F;AP-AMS (github.com)</a></p><h3 id="1-准备ha的mqtt服务端"><a href="#1-准备ha的mqtt服务端" class="headerlink" title="1.准备ha的mqtt服务端"></a>1.准备ha的mqtt服务端</h3><ol><li>如果自己没有接触过ha可以使用群主的windows安装教程<br><a href="https://www.bilibili.com/read/cv35116581/?spm_id_from=333.999.0.0&jump_opus=1">https://www.bilibili.com/read/cv35116581/?spm_id_from=333.999.0.0&amp;jump_opus=1</a> </li><li>已经有安装ha的服务器,可以自己搭建,这里推荐emqx使用docker安装<br>项目地址:<a href="https://www.emqx.com/zh">EMQX：用于物联网、车联网和工业物联网的企业级 MQTT 平台</a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建mqtt配置目录</span></span><br><span class="line">mkdir mqtt</span><br><span class="line">cd mqtt</span><br><span class="line">mkdir data</span><br><span class="line">mkdir log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给emqx的data目录需要有权限才能修改</span></span><br><span class="line">chmod -R 777 data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动emqx,此步要确保网络可以拉取docker镜像.否则一定失败</span></span><br><span class="line">docker run -d --name emqx \</span><br><span class="line">  --privileged=true \</span><br><span class="line">  -p 1883:1883 -p 8083:8083 \</span><br><span class="line">  -p 8084:8084 -p 8883:8883 \</span><br><span class="line">  -p 18083:18083 \</span><br><span class="line">  -v $PWD/data:/opt/emqx/data \</span><br><span class="line">  -v $PWD/log:/opt/emqx/log \</span><br><span class="line">  emqx/emqx</span><br></pre></td></tr></table></figure></li><li>如果没有报错.可以访问 <a href="http://ip地址:18083/">http://ip地址:18083</a>.</li><li>刚开始会让你设置一个新密码.记住这个密码,和用户名下面需要使用</li><li>按照上面作者的教程将mqtt服务器添加到ha中</li></ol><h3 id="2-准备基本信息"><a href="#2-准备基本信息" class="headerlink" title="2.准备基本信息"></a>2.准备基本信息</h3><p>因为需要串口输入,建议提前准备数据,使用复制粘贴的方法输入</p><ol><li><p>wifi名称(必须2.4g 建议全英文,未尝试中文是否能够配置成功)</p></li><li><p>wifi密码</p></li><li><p>拓竹打印机ip地址(<a href="https://wiki.bambulab.com/zh/knowledge-sharing/enable-lan-mode">如何在Bambu Lab打印机上使用局域网模式 | Bambu Lab Wiki</a>)</p></li><li><p>拓竹的访问码(<a href="https://wiki.bambulab.com/zh/knowledge-sharing/enable-lan-mode">如何在Bambu Lab打印机上使用局域网模式 | Bambu Lab Wiki</a>)</p></li><li><p>拓竹打印机序列号(参考下图)</p></li><li><p><img src="https://pic.hiasia.fun/image/20240626120138.png" alt="image.png"></p></li><li><p>本机通道编号(自定义)</p><ul><li>注意，通道编号请从1开始</li></ul></li><li><p>ha服务器地址(mqtt的服务地址,不需要端口号默认为1883,例如:192.168.10.2)</p></li><li><p>ha账号(mqtt服务端账号)</p></li><li><p>ha密码(mqtt服务端密码)</p></li><li><p>回抽延时(这里我给了100,后续也可在mqtt修改)</p></li></ol><p>如果你使用的是putty,连接上后,<strong>可以显示但无法输入任何字符</strong><br>修改下面选项为None,重新连接<br><img src="https://pic.hiasia.fun/image/2a0bd6279f155f3d5cc2e19b1b1c722f.png" alt="2a0bd6279f155f3d5cc2e19b1b1c722f.png"></p><p>显示下图配置就已经全部完成<br><img src="https://pic.hiasia.fun/image/20240626120306.png" alt="image.png"></p><p>到此恭喜你,配置过程已经全部完成了!<br>在ha中的mqtt服务.就能看到此设备了,可以尝试控制一下灯光亮度,查看通讯是否正常</p>]]></content>
      
      
      <categories>
          
          <category> 3D打印 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一.AP-AMS-3.0下单PCB全流程</title>
      <link href="/2024/07/06/%E6%8A%98%E8%85%BE/%E4%B8%80.AP-AMS-3.0%E4%B8%8B%E5%8D%95PCB%E5%85%A8%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/07/06/%E6%8A%98%E8%85%BE/%E4%B8%80.AP-AMS-3.0%E4%B8%8B%E5%8D%95PCB%E5%85%A8%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="零-下载立创下单助手"><a href="#零-下载立创下单助手" class="headerlink" title="零.下载立创下单助手"></a>零.下载立创下单助手</h1><p>需要白嫖必须要安装下单助手下单才行<br><a href="https://www.jlc.com/portal/appDownloadsWithConfig.html">下载嘉立创PCB下单客户端</a></p><h1 id="一-下单助手下单PCB"><a href="#一-下单助手下单PCB" class="headerlink" title="一.下单助手下单PCB"></a>一.下单助手下单PCB</h1><h2 id="1-打开立创下单助手-在左边侧边栏选择优惠中心-免费券领取"><a href="#1-打开立创下单助手-在左边侧边栏选择优惠中心-免费券领取" class="headerlink" title="1.打开立创下单助手,在左边侧边栏选择优惠中心-&gt;免费券领取"></a>1.打开立创下单助手,在左边侧边栏选择优惠中心-&gt;免费券领取</h2><p><img src="https://pic.hiasia.fun/image/20240627175400.png" alt="image.png"></p><h2 id="2-领取-1-4层喷锡EDA专用券"><a href="#2-领取-1-4层喷锡EDA专用券" class="headerlink" title="2.领取 1-4层喷锡EDA专用券"></a>2.领取 1-4层喷锡EDA专用券</h2><p><img src="https://pic.hiasia.fun/image/20240627175506.png" alt="image.png"></p><h2 id="3-群文件下载AP-AMS-3-0-gerber文件"><a href="#3-群文件下载AP-AMS-3-0-gerber文件" class="headerlink" title="3.群文件下载AP-AMS-3.0-gerber文件"></a>3.群文件下载<code>AP-AMS-3.0-gerber</code>文件</h2><p><img src="https://pic.hiasia.fun/image/20240705011506.png" alt="image.png"></p><h2 id="4-选择刚刚下载的AP-AMS-3-0-gerber文件-不用解压缩直接上传zip"><a href="#4-选择刚刚下载的AP-AMS-3-0-gerber文件-不用解压缩直接上传zip" class="headerlink" title="4.选择刚刚下载的AP-AMS-3.0-gerber文件,不用解压缩直接上传zip"></a>4.选择刚刚下载的<code>AP-AMS-3.0-gerber</code>文件,<strong>不用解压缩</strong>直接上传zip</h2><p><img src="https://pic.hiasia.fun/image/20240627175617.png" alt="image.png"></p><h2 id="5-等待上传完成-选择板子数量为5-立即下单"><a href="#5-等待上传完成-选择板子数量为5-立即下单" class="headerlink" title="5.等待上传完成,选择板子数量为5.立即下单"></a>5.等待上传完成,选择板子数量为5.立即下单</h2><p><img src="https://pic.hiasia.fun/image/20240627180027.png" alt="image.png"></p><h2 id="6-选择FR-4"><a href="#6-选择FR-4" class="headerlink" title="6.选择FR-4"></a>6.选择FR-4</h2><p><img src="https://pic.hiasia.fun/image/20240627180054.png" alt="image.png"></p><h2 id="7-其中的信息保持默认-填写个人信息-有需要与不需要的选项全部选择不需要"><a href="#7-其中的信息保持默认-填写个人信息-有需要与不需要的选项全部选择不需要" class="headerlink" title="7.其中的信息保持默认,填写个人信息.有需要与不需要的选项全部选择不需要"></a>7.其中的信息保持默认,填写个人信息.有<code>需要</code>与<code>不需要</code>的选项全部选择不需要</h2><h2 id="8-在左下角可以选择-刚刚领取的优惠券"><a href="#8-在左下角可以选择-刚刚领取的优惠券" class="headerlink" title="8.在左下角可以选择,刚刚领取的优惠券"></a>8.在左下角可以选择,刚刚领取的优惠券</h2><p><img src="https://pic.hiasia.fun/image/20240627183206.png" alt="image.png"><br><img src="https://pic.hiasia.fun/image/20240627183227.png" alt="image.png"></p><h2 id="9-选择后价格变为免费"><a href="#9-选择后价格变为免费" class="headerlink" title="9.选择后价格变为免费"></a>9.选择后价格变为免费</h2><p><img src="https://pic.hiasia.fun/image/20240627183237.png" alt="image.png"></p><h2 id="10-确认并提交-然后根据系统的引导-支付0元费用-等待板子发货就行了"><a href="#10-确认并提交-然后根据系统的引导-支付0元费用-等待板子发货就行了" class="headerlink" title="10.确认并提交,然后根据系统的引导,支付0元费用 等待板子发货就行了"></a>10.确认并提交,然后根据系统的引导,支付0元费用 等待板子发货就行了</h2><p><img src="https://pic.hiasia.fun/image/20240627183435.png" alt="image.png"></p><h1 id="二-采购BOM元器件"><a href="#二-采购BOM元器件" class="headerlink" title="二.采购BOM元器件"></a>二.采购BOM元器件</h1><h2 id="1-嘉立创BOM配单"><a href="#1-嘉立创BOM配单" class="headerlink" title="1.嘉立创BOM配单"></a>1.嘉立创BOM配单</h2><h4 id="下单地址"><a href="#下单地址" class="headerlink" title="下单地址"></a>下单地址</h4><p><a href="https://bom.szlcsc.com/bom.html">BOM智能配单_电子元器件配单-立创商城 (szlcsc.com)</a></p><p>上传BOM表格,会自动检索元器件,直接下单即可(大佬可根据自己的喜好购买)<br><img src="https://pic.hiasia.fun/image/20240704195042.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 3D打印 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑豹 Panther X2 rk3566使用i2c驱动oled屏幕</title>
      <link href="/2024/03/18/%E6%8A%98%E8%85%BE/%E9%BB%91%E8%B1%B9%20Panther%20X2%20rk3566%E4%BD%BF%E7%94%A8i2c%E9%A9%B1%E5%8A%A8oled%E5%B1%8F%E5%B9%95,%E6%80%A7%E8%83%BD%E7%9B%91%E6%B5%8B%E5%B1%8F/"/>
      <url>/2024/03/18/%E6%8A%98%E8%85%BE/%E9%BB%91%E8%B1%B9%20Panther%20X2%20rk3566%E4%BD%BF%E7%94%A8i2c%E9%A9%B1%E5%8A%A8oled%E5%B1%8F%E5%B9%95,%E6%80%A7%E8%83%BD%E7%9B%91%E6%B5%8B%E5%B1%8F/</url>
      
        <content type="html"><![CDATA[<p>在购买配件时,无意间看到了.店家售卖的i2c的0.96的oled屏幕,只需要不到7元钱.看到我的x2上也有i2c接口.于是开启了这次的折腾之旅.有兴趣的朋友可以跟着教程一起操作</p><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="https://pic.hiasia.fun/image/202403180102766.png"><br><img src="https://pic.hiasia.fun/image/202403181725033.png"></p><h1 id="一-确认是否可用"><a href="#一-确认是否可用" class="headerlink" title="一.确认是否可用"></a>一.确认是否可用</h1><p>x2有两种板型<br>第一种没有i2c接口,如下图</p><p><img src="https://pic.hiasia.fun/image/202403181718239.png"></p><p>第二种有i2c接口引出的,如下图,如果你是,这一种的话.那么恭喜你可以跟着教程一起折腾了<br><img src="https://pic.hiasia.fun/image/202403181714018.png"></p><h1 id="二-玩机最第一步-还是固件"><a href="#二-玩机最第一步-还是固件" class="headerlink" title="二.玩机最第一步 还是固件"></a>二.玩机最第一步 还是固件</h1><p>大家目前用到的固件的设备树 是没有开启i2c1的节点的.可以自己添加.或者使用我编译的固件</p><ul><li>固件下载地址:<a href="https://github.com/HelloTheAsia/amlogic-s9xxx-armbian/releases">Releases · HelloTheAsia&#x2F;amlogic-s9xxx-armbian (github.com)</a></li><li>刷机教程可以参考:<a href="https://rupu.net/archives/pantherx2">PantherX2(黑豹X2)刷机-如普·Blog (rupu.net)</a></li></ul><h1 id="三-检查设备是否打开-I2C-1"><a href="#三-检查设备是否打开-I2C-1" class="headerlink" title="三.检查设备是否打开 I2C.1"></a>三.检查设备是否打开 I2C.1</h1><p>输入下面的命令,如果有显示i2c-1,则已打开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@armbian:~#ls /dev/i2c*</span><br><span class="line">/dev/i2c-0  /dev/i2c-1</span><br></pre></td></tr></table></figure><h1 id="四-连接屏幕"><a href="#四-连接屏幕" class="headerlink" title="四.连接屏幕"></a>四.连接屏幕</h1><p><strong>连接屏幕切勿带电操作</strong><br>按照下图连接屏幕与i2c1接口<br><img src="https://pic.hiasia.fun/image/202403181743899.png"></p><ul><li>检查屏幕是否连接正常<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件源</span></span><br><span class="line">apt-get update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装i2c-tools工具</span></span><br><span class="line">apt-get install -y i2c-tools</span><br><span class="line"></span><br><span class="line">i2cdetect -y 1</span><br><span class="line">     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f</span><br><span class="line">00:                         -- -- -- -- -- -- -- --</span><br><span class="line">10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span><br><span class="line">20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span><br><span class="line">30: -- -- -- -- -- -- -- -- -- -- -- -- 3c -- -- --</span><br><span class="line">40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span><br><span class="line">50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span><br><span class="line">60: 60 -- -- -- -- -- -- -- -- -- -- -- -- -- -- --</span><br><span class="line">70: -- -- -- -- -- -- -- --</span><br><span class="line"></span><br></pre></td></tr></table></figure>出现 3c 说明连接正常</li></ul><h1 id="五-安装wiring驱动库"><a href="#五-安装wiring驱动库" class="headerlink" title="五.安装wiring驱动库"></a>五.安装wiring驱动库</h1><p>这里使用orangepi的wiring库,测试下来是可以直接使用的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件源</span></span><br><span class="line">apt update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装编译所需工具</span></span><br><span class="line">apt install git-core build-essential</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">克隆 WiringOP 的源代码</span></span><br><span class="line">git clone https://github.com/orangepi-xunlong/WiringOP</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译</span></span><br><span class="line">cd WiringOP</span><br><span class="line">./build</span><br></pre></td></tr></table></figure><h1 id="六-克隆仓库"><a href="#六-克隆仓库" class="headerlink" title="六.克隆仓库"></a>六.<strong>克隆仓库</strong></h1><p>这里博主根据下面的仓库做了少量的修改<br><a href="https://github.com/Temperature6/OPi4_RTDevInfo">Temperature6&#x2F;OPi4_RTDevInfo: 适用于OrangePi4LTS的CPU信息显示小屏扩展板和代码 (github.com)</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">克隆源代码</span></span><br><span class="line">git clone https://github.com/HelloTheAsia/PantherX2_SSD1315.git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入编译目录</span></span><br><span class="line">cd PantherX2_SSD1315/Software/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译</span></span><br><span class="line">make -j4</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果上一步没有报错,即可执行文件,此时屏幕就会有相应的信息显示</span></span><br><span class="line">./RTDevInfo</span><br></pre></td></tr></table></figure><p><img src="https://pic.hiasia.fun/image/202403181725033.png"></p><h1 id="七-设置开机自启"><a href="#七-设置开机自启" class="headerlink" title="七.设置开机自启"></a>七.设置开机自启</h1><p>博主这里使用的是systemd的方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建systemd文件</span></span><br><span class="line">nano /etc/systemd/system/SSD1315.service</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将以下内容粘贴,需要自己修改,执行文件路径</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=SSD1315 Service</span><br><span class="line">StandardOutput=null</span><br><span class="line">StandardError=null</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/自己的路径/RTDevInfo</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ctrl+x保存,y回车</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">接着启动服务</span></span><br><span class="line">systemctl start SSD1315</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置开机自启</span></span><br><span class="line">systemctl enable SSD1315</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>博主本来想找个做3d打印的为这个屏幕找个合适的位置安放.在海鲜市场找到了<code>casatift</code>店家,老哥也是个热爱折腾,喜欢智能家居的玩家,很爽快的答应,随即就开始了修改模型.最终效果如下<br><img src="https://pic.hiasia.fun/image/20240328201938.png" alt="image.png"></p><p><img src="https://pic.hiasia.fun/image/20240328202003.png" alt="image.png"></p><p>大家有兴趣的也可以去查看他的3d外壳,质量很好也很精致,同时<code>casatift</code>也分享了他制作的模型,有3d打印机的朋友可以自行打印:<a href="https://makerworld.com/zh/models/395574#profileId-296880">https://makerworld.com/zh/models/395574#profileId-296880</a><br><img src="https://pic.hiasia.fun/image/20240328201803.png" alt="image.png"></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://b23.tv/v49aowR">[OPi]香橙派信息小屏再更新！这次我满意了_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑豹 Panther X2 rk3566 安装homeassistant npu+vpu运行Frigate</title>
      <link href="/2024/03/14/%E6%8A%98%E8%85%BE/%E9%BB%91%E8%B1%B9%20Panther%20X2%20rk3566%20%E5%AE%89%E8%A3%85homeassistant%20npu+vpu%E8%BF%90%E8%A1%8CFrigate/"/>
      <url>/2024/03/14/%E6%8A%98%E8%85%BE/%E9%BB%91%E8%B1%B9%20Panther%20X2%20rk3566%20%E5%AE%89%E8%A3%85homeassistant%20npu+vpu%E8%BF%90%E8%A1%8CFrigate/</url>
      
        <content type="html"><![CDATA[<p>将ha迁移到x2上,记录下安装homeassistant的过程,方便以后折腾,也为后来的垃圾佬少走些弯路.</p><p><strong>目前rknpu在识别上面还有些问题Frigate在调用这颗npu时会有2s左右的延迟,原因未知,开发者也复现了这个问题.不知是rknpu驱动的原因还是13.2版本的问题.只能等上游修复.</strong><br>因为rk识别使用的YOLO模型license调整,导致frigate新版本将放弃使用YOLO(在短时间内rk芯片 不再会有任何frigate的更新).具体参考:<a href="https://github.com/blakeblackshear/frigate/pull/10717">https://github.com/blakeblackshear/frigate/pull/10717</a></p><h1 id="一-折腾第一步-刷机"><a href="#一-折腾第一步-刷机" class="headerlink" title="一.折腾第一步,刷机"></a>一.折腾第一步,刷机</h1><p>需要刷写我仓库最新的固件,才能开启npu与mpp的支持.</p><ul><li>固件下载地址:<a href="https://github.com/HelloTheAsia/amlogic-s9xxx-armbian/releases">Releases · HelloTheAsia&#x2F;amlogic-s9xxx-armbian (github.com)</a></li><li>刷机教程可以参考:<a href="https://rupu.net/archives/pantherx2">PantherX2(黑豹X2)刷机-如普·Blog (rupu.net)</a></li></ul><p>固件测试<br><img src="https://pic.hiasia.fun/image/20240313231443.png"></p><h1 id="二-安装HomeAssistant-Supervised"><a href="#二-安装HomeAssistant-Supervised" class="headerlink" title="二.安装HomeAssistant Supervised"></a>二.安装HomeAssistant Supervised</h1><h3 id="1-修改系统名称"><a href="#1-修改系统名称" class="headerlink" title="1.修改系统名称"></a>1.修改系统名称</h3><p>HomeAssistant Supervised在安装脚本中,判断了.系统的名称是否为<code>Debian GNU/Linux 11 (bullseye)&quot; &quot;Debian GNU/Linux 12 (bookworm)&quot;</code>否则直接安装失败.非常的坑<br><img src="https://pic.hiasia.fun/image/20240328194429.png" alt="image.png"><br>所以我们需要先将系统名称改为<code>Debian GNU/Linux 12 (bookworm)</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/os-release</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将第一行的Armbian...改完:Debian GNU/Linux 12 (bookworm)</span></span><br></pre></td></tr></table></figure><h3 id="2-启动apparmor与修改cgroup版本"><a href="#2-启动apparmor与修改cgroup版本" class="headerlink" title="2.启动apparmor与修改cgroup版本"></a>2.启动apparmor与修改cgroup版本</h3><p><code>Home Assistant Supervisor</code> 应用只支持 <code>docker cgroup v1</code> 版本，而目前 docker 默认安装的都是最新的 v2 版本。如需切换至 v1 版本，可以在 cmdline 中添加 <code>systemd.unified_cgroup_hierarchy=0</code> 参数设置，重启后就可以切换至 <code>docker cgroup v1</code> 版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nano /boot/armbianEnv.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到:extraargs=...,改为</span></span><br><span class="line">extraargs=apparmor=1 security=apparmor systemd.unified_cgroup_hierarchy=0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="3-安装HomeAssistant-Supervised"><a href="#3-安装HomeAssistant-Supervised" class="headerlink" title="3.安装HomeAssistant Supervised"></a>3.安装HomeAssistant Supervised</h3><p>这里直接根据官方项目文档安装即可,最好可以保证自己的<strong>网络各处可达</strong><br>官方安装项目地址:<a href="https://github.com/home-assistant/supervised-installer">home-assistant&#x2F;supervised-installer</a></p><h4 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1.安装依赖"></a>1.安装依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apt install \</span><br><span class="line">apparmor \</span><br><span class="line">cifs-utils \</span><br><span class="line">curl \</span><br><span class="line">dbus \</span><br><span class="line">jq \</span><br><span class="line">libglib2.0-bin \</span><br><span class="line">lsb-release \</span><br><span class="line">network-manager \</span><br><span class="line">nfs-common \</span><br><span class="line">systemd-journal-remote \</span><br><span class="line">systemd-resolved \</span><br><span class="line">udisks2 \</span><br><span class="line">wget -y</span><br></pre></td></tr></table></figure><h4 id="2-安装docker"><a href="#2-安装docker" class="headerlink" title="2.安装docker"></a>2.安装docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL get.docker.com | sh</span><br></pre></td></tr></table></figure><h4 id="3-安装OS-Agent"><a href="#3-安装OS-Agent" class="headerlink" title="3.安装OS-Agent"></a>3.安装OS-Agent</h4><p>OS-Agent下载地址:<a href="https://github.com/home-assistant/os-agent/releases">Releases · home-assistant&#x2F;os-agent (github.com)</a><br>博主这里使用的是最新的1.6.0的版本,是没有问题的<br><img src="https://pic.hiasia.fun/image/20240328200020.png" alt="image.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O os-agent.deb https://github.com/home-assistant/os-agent/releases/download/1.6.0/os-agent_1.6.0_linux_aarch64.deb</span><br><span class="line">dpkg -i os-agent.deb</span><br></pre></td></tr></table></figure><h4 id="4-安装HomeAssistant-Supervised"><a href="#4-安装HomeAssistant-Supervised" class="headerlink" title="4. 安装HomeAssistant Supervised"></a>4. 安装HomeAssistant Supervised</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -O homeassistant-supervised.deb https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb</span><br><span class="line">apt install ./homeassistant-supervised.deb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在弹出的选项中选择qemuarm-64</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后等待它安装完毕即可访问</span></span><br></pre></td></tr></table></figure><h4 id="5-等待安装-如果网络不是很好-建议放个一天在来查看"><a href="#5-等待安装-如果网络不是很好-建议放个一天在来查看" class="headerlink" title="5.等待安装,如果网络不是很好,建议放个一天在来查看"></a>5.等待安装,如果网络不是很好,建议放个一天在来查看</h4><p>安装完毕后访问:<a href="http://ip:8123/">http://ip:8123</a> 即可进入HomeAssistant的登录界面</p><h1 id="三-安装Frigate"><a href="#三-安装Frigate" class="headerlink" title="三.安装Frigate"></a>三.安装Frigate</h1><p>因为rk3566这颗处理器拥有vpn(编码),与npu(推理识别)让在性能较弱的盒子上运行Frigate这种AI项目成为了可能,同时也感谢各位大佬在开源社区的贡献.</p><h3 id="1-调整x2硬件频率"><a href="#1-调整x2硬件频率" class="headerlink" title="1.调整x2硬件频率"></a>1.调整x2硬件频率</h3><p>因为博主要部署Frigate,需要使用到npu,这一步主要可以大幅提高npu的推理速度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// npu最高频率</span><br><span class="line">cat /sys/class/devfreq/fde40000.npu/available_frequencies</span><br><span class="line">echo 900000000 &gt; /sys/class/devfreq/fde40000.npu/max_freq</span><br><span class="line">echo &quot;performance&quot; &gt; /sys/class/devfreq/fde40000.npu/governor</span><br><span class="line"></span><br><span class="line">// ddr最高频率</span><br><span class="line">// 查看频率</span><br><span class="line">cat /sys/class/devfreq/dmc/available_frequencies</span><br><span class="line">echo userspace &gt; /sys/class/devfreq/dmc/governor</span><br><span class="line">echo 1560000000 &gt; /sys/class/devfreq/dmc/userspace/set_freq</span><br><span class="line"></span><br><span class="line">// cpu最高频率</span><br><span class="line">cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies</span><br><span class="line">echo userspace &gt; /sys/devices/system/cpu/cpufreq/policy0/scaling_governor</span><br><span class="line">echo 1800000 &gt; /sys/devices/system/cpu/cpufreq/policy0/scaling_setspeed</span><br><span class="line">echo performance &gt; tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</span><br></pre></td></tr></table></figure><p>默认频率的速度为100ms左右.提高频率后为57ms左右<br><img src="https://pic.hiasia.fun/image/20240321103043.png" alt="image.png"></p><h3 id="二-开始安装Frigate"><a href="#二-开始安装Frigate" class="headerlink" title="二.开始安装Frigate"></a>二.开始安装Frigate</h3><p>官方地址:<a href="https://frigate.video/">Frigate NVR</a><br>这里博主使用的是这位大佬仓库的13.2分支,dev分支在我测试时运行还有些问题<br><a href="https://github.com/MarcA711/frigate-rockchip">MarcA711&#x2F;frigate-rockchip</a><br>下面开始安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 博主根据13.2分支的最新源码打包了一个docker镜像放到了阿里云</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/hiasia/frigate:rknn1.6-13.2</span><br><span class="line"># 以下是docker compose</span><br><span class="line">version: &quot;3.9&quot;</span><br><span class="line">services:</span><br><span class="line">  frigate:</span><br><span class="line">    container_name: frigate</span><br><span class="line">    privileged: true</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    stop_grace_period: 1s</span><br><span class="line">    image: registry.cn-hangzhou.aliyuncs.com/hiasia/frigate:rknn1.6-13.2</span><br><span class="line">    shm_size: &quot;256mb&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - /etc/localtime:/etc/localtime:ro</span><br><span class="line">      - /opt/frigate/config/:/config/</span><br><span class="line">      - /opt/frigate/dbs/:/frigate/dbs/</span><br><span class="line">      - /opt/frigate_media/:/media/frigate #将frigate持久化数据文件夹挂载进去</span><br><span class="line">      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear</span><br><span class="line">        target: /tmp/cache</span><br><span class="line">        tmpfs:</span><br><span class="line">          size: 1000000000</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5000:5000&quot;</span><br><span class="line">      - &quot;8554:8554&quot; # RTSP feeds</span><br><span class="line">      - &quot;8555:8555/tcp&quot; # WebRTC over tcp</span><br><span class="line">      - &quot;8555:8555/udp&quot; # WebRTC over udp</span><br><span class="line">    environment:</span><br><span class="line">      FRIGATE_RTSP_PASSWORD: &quot;passwd&quot;</span><br></pre></td></tr></table></figure><p>配置文件,需要放到frigate&#x2F;config&#x2F;config.yml:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#database:</span></span><br><span class="line">  <span class="comment">#  path: /frigate/dbs/frigate.db</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mqtt:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">go2rtc:</span></span><br><span class="line">  <span class="attr">streams:</span></span><br><span class="line">    <span class="attr">balcony:</span></span><br><span class="line">      <span class="string">rtsp://admin:x@地址/Streaming/Channels/101</span></span><br><span class="line">  <span class="attr">webrtc:</span></span><br><span class="line">    <span class="attr">candidates:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">地址:8555</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">stun:8555</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cameras:</span> <span class="comment">#必选，配置视频流</span></span><br><span class="line">  <span class="attr">frontdoor:</span> <span class="comment">#自己命名一个摄像头</span></span><br><span class="line">    <span class="attr">record:</span> <span class="comment">#开启录像功能</span></span><br><span class="line">       <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">       <span class="attr">retain:</span></span><br><span class="line">         <span class="attr">days:</span> <span class="number">9999</span></span><br><span class="line">         <span class="attr">mode:</span> <span class="string">all</span></span><br><span class="line">       <span class="attr">events:</span></span><br><span class="line">         <span class="attr">retain:</span></span><br><span class="line">           <span class="attr">default:</span> <span class="number">9999</span></span><br><span class="line">           <span class="attr">mode:</span> <span class="string">active_objects</span></span><br><span class="line">         <span class="attr">required_zones:</span></span><br><span class="line">           <span class="bullet">-</span> <span class="string">frontdoor_corridor</span></span><br><span class="line">           <span class="bullet">-</span> <span class="string">frontdoor_entire</span></span><br><span class="line">    <span class="attr">ffmpeg:</span> <span class="comment">#FFMPEG配置</span></span><br><span class="line">      <span class="attr">output_args:</span> <span class="comment">#Frigate默认不带录音，通过ffmpeg选项手动开启录音</span></span><br><span class="line">        <span class="attr">record:</span> <span class="string">preset-record-generic-audio-aac</span></span><br><span class="line">      <span class="attr">inputs:</span> <span class="comment">#输入源</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">rtsp://rtsp:x@地址:554/Streaming/Channels/102</span></span><br><span class="line">          <span class="attr">input_args:</span> <span class="string">preset-rtsp-generic</span></span><br><span class="line">          <span class="attr">hwaccel_args:</span> <span class="string">preset-rk-h264</span></span><br><span class="line">          <span class="attr">roles:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">detect</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">rtsp://rtsp:x@地址:554/Streaming/Channels/101</span></span><br><span class="line">          <span class="attr">input_args:</span> <span class="string">preset-rtsp-generic</span></span><br><span class="line">          <span class="attr">hwaccel_args:</span> <span class="string">preset-rk-h265</span></span><br><span class="line">          <span class="attr">roles:</span> <span class="comment">#选择角色</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">record</span> <span class="comment">#用于保存视频</span></span><br><span class="line"><span class="attr">detect:</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">1280</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">720</span></span><br><span class="line">  <span class="attr">fps:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="attr">objects:</span></span><br><span class="line">  <span class="attr">track:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">person</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="attr">person:</span></span><br><span class="line">      <span class="attr">min_score:</span> <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">detectors:</span></span><br><span class="line">  <span class="attr">rknn:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">rknn</span></span><br><span class="line"></span><br><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="comment">#path: /config/model_cache/rknn/yolov8n-320x320-rk3588-custom.rknn</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">default-yolov8n</span></span><br><span class="line">  <span class="attr">input_pixel_format:</span> <span class="string">bgr</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">320</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">320</span></span><br><span class="line">  <span class="attr">input_tensor:</span> <span class="string">nhwc</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logger:</span></span><br><span class="line">  <span class="comment"># Optional: default log level (default: shown below)</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">debug</span></span><br><span class="line">  <span class="comment"># Optional: module by module log level configuration</span></span><br><span class="line">  <span class="attr">logs:</span></span><br><span class="line">    <span class="comment"># frigate.mqtt: debug</span></span><br><span class="line">    <span class="attr">ffmpeg.frontdoor.detect:</span> <span class="string">debug</span></span><br><span class="line">    <span class="attr">detect:</span> <span class="string">debug</span></span><br><span class="line">    <span class="comment"># level: debug  # default level</span></span><br><span class="line">    <span class="comment"># api: debug</span></span><br><span class="line">    <span class="comment"># exec: debug</span></span><br><span class="line">    <span class="comment"># ngrok: debug</span></span><br><span class="line">    <span class="comment"># rtsp: debug</span></span><br><span class="line">    <span class="comment"># streams: debug</span></span><br><span class="line">    <span class="comment"># webrtc: debug</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://docs.frigate.video/">Introduction | Frigate</a></li><li><a href="https://github.com/MarcA711/frigate-rockchip">MarcA711&#x2F;frigate-rockchip: NVR with realtime local object detection for IP cameras (github.com)</a></li><li><a href="https://github.com/home-assistant/supervised-installer">home-assistant&#x2F;supervised-installer: Installer for a generic Linux system (github.com)</a></li><li>以及Ecore Home群友的热心解答</li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于百度人流量识别api二次开发人流量监测</title>
      <link href="/2024/02/18/java/%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E4%BA%BA%E6%B5%81%E9%87%8F%E8%AF%86%E5%88%ABapi%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%BA%BA%E6%B5%81%E9%87%8F%E7%9B%91%E6%B5%8B/"/>
      <url>/2024/02/18/java/%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E4%BA%BA%E6%B5%81%E9%87%8F%E8%AF%86%E5%88%ABapi%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E4%BA%BA%E6%B5%81%E9%87%8F%E7%9B%91%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>基于百度人流量监测接口二次开发,一直想要将店里的萤石摄像头加上人流量监测,在node-red里操作有些麻烦,百度提供了java的调用方式.干脆自己花了点时间.用java写一个,只需传递图片的url就可返回人流量数据,并用sqllite存储每次识别的数据.<br>项目开源地址:<a href="https://github.com/HelloTheAsia/PeopleFlowStatistics">HelloTheAsia&#x2F;PeopleFlowStatistics (github.com)</a></p><h1 id="一-申请百度的api接口调用权限"><a href="#一-申请百度的api接口调用权限" class="headerlink" title="一.申请百度的api接口调用权限"></a>一.申请百度的api接口调用权限</h1><p><a href="https://ai.baidu.com/tech/body/num">人流量统计_智能客流量统计分析方案-百度AI开放平台 (baidu.com)</a><br>这里博主使用的是静态人流量统计</p><h1 id="二-使用docker部署"><a href="#二-使用docker部署" class="headerlink" title="二.使用docker部署"></a>二.使用docker部署</h1><p><strong>目前支持AMD64与ARM64架构</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先创建pfs.db数据库</span></span><br><span class="line">touch pfs.db</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker启动,需要更改CLIENT_ID与CLIENT_SECRET</span></span><br><span class="line">docker run -d -p 8310:8310 \-e CLIENT_ID=百度申请的CLIENT_ID \  </span><br><span class="line">-e CLIENT_SECRET=百度申请的CLIENT_SECRET \  </span><br><span class="line">-v ./pfs.db:/app/pfs.db \  </span><br><span class="line">--name=pfs \  </span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/hiasia/people-flow-statistics  </span><br></pre></td></tr></table></figure><h2 id="三-使用方法-直接调用api使用"><a href="#三-使用方法-直接调用api使用" class="headerlink" title="三.使用方法,直接调用api使用"></a>三.使用方法,直接调用api使用</h2><p>http:&#x2F;&#x2F;部署的IP地址:8310&#x2F;people-flow?imageUrl&#x3D;图片的URL</p><ul><li>参数1:imageUrl<ul><li>可访问的图片url</li></ul></li><li>参数2:show<ul><li>参数为true或者false,默认为false,百度识别图片后会返回一个base64的标志图片.为true则会存储这张图片在数据库</li></ul></li><li>参数3:deviation<ul><li>这个为数字,校准量,默认为0.可能有些圆形的物体并非人,会被识别为人.输入此产生可以减去相对应的数值</li><li>如果你没有传递deviation,返回PersonNum为-1,LogId为fail代表调用失败.请检查部署时的参数是否有误</li></ul></li></ul><h2 id="四-数据库结构"><a href="#四-数据库结构" class="headerlink" title="四.数据库结构"></a>四.数据库结构</h2><p><img src="https://pic.hiasia.fun/image/20240220201203.png" alt="image.png"></p><h2 id="五-玩法"><a href="#五-玩法" class="headerlink" title="五.玩法"></a>五.玩法</h2><ol><li>可以统计图片中的人数.加上定时可以统计大概的人流量.</li><li>使用HomeAssistant,加上传感器.可以实现来人识别.识别人数&gt;&#x3D;1时再开灯.可大大降低误开的记录</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>幻兽帕鲁服务器搭建</title>
      <link href="/2024/01/31/%E6%8A%98%E8%85%BE/%E5%B9%BB%E5%85%BD%E5%B8%95%E9%B2%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/01/31/%E6%8A%98%E8%85%BE/%E5%B9%BB%E5%85%BD%E5%B8%95%E9%B2%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>最近游玩 幻兽帕鲁,记录一下服务器搭建过程</p><h3 id="一-拉取docker镜像"><a href="#一-拉取docker镜像" class="headerlink" title="一.拉取docker镜像"></a>一.拉取docker镜像</h3><p>仓库地址:<a href="https://github.com/jammsen/docker-palworld-dedicated-server">jammsen&#x2F;docker-palworld-dedicated-server: Docker container to easily provision and manage Palworld Dedicated Server (github.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jammsen/palworld-dedicated-server</span><br></pre></td></tr></table></figure><p>创建游戏目录给权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir game</span><br><span class="line">chomd 755 game</span><br><span class="line">chown -R 1000:1000 game/</span><br></pre></td></tr></table></figure><p>下载仓库中的docker-compose.yml,内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.9&#x27;</span><br><span class="line">services:</span><br><span class="line">  palworld-dedicated-server:</span><br><span class="line">    #build: .</span><br><span class="line">    container_name: palworld-dedicated-server-three</span><br><span class="line">    image: jammsen/palworld-dedicated-server:latest</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - target: 8211 # Gamerserver port inside of the container</span><br><span class="line">        published: 8283 # Gamerserver port on your host</span><br><span class="line">        protocol: udp</span><br><span class="line">        mode: host</span><br><span class="line">      - target: 25575 # RCON port inside of the container</span><br><span class="line">        published: 25570 # RCON port on your host</span><br><span class="line">        protocol: tcp</span><br><span class="line">        mode: host</span><br><span class="line">    env_file:</span><br><span class="line">      - ./default.env</span><br><span class="line">    volumes:</span><br><span class="line">      - ./game:/palworld</span><br></pre></td></tr></table></figure><p>下载default.env,博主这里做了少量的修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"># Change this for logging and backup, see &quot;Environment variables&quot; in the README.md</span><br><span class="line">TZ=Asia/Shanghai</span><br><span class="line">ALWAYS_UPDATE_ON_START=true</span><br><span class="line">MULTITHREAD_ENABLED=true</span><br><span class="line">COMMUNITY_SERVER=true</span><br><span class="line">BACKUP_ENABLED=true</span><br><span class="line">BACKUP_CRON_EXPRESSION=0 * * * *</span><br><span class="line">BACKUP_RETENTION_POLICY=false</span><br><span class="line">BACKUP_RETENTION_AMOUNT_TO_KEEP=30</span><br><span class="line">STEAMCMD_VALIDATE_FILES=true</span><br><span class="line"># Change this to manual if you want to edit your configs yourself</span><br><span class="line">SERVER_SETTINGS_MODE=auto </span><br><span class="line">NETSERVERMAXTICKRATE=120</span><br><span class="line">DIFFICULTY=None</span><br><span class="line">DAYTIME_SPEEDRATE=1.000000</span><br><span class="line">NIGHTTIME_SPEEDRATE=1.000000</span><br><span class="line">EXP_RATE=1.000000</span><br><span class="line">PAL_CAPTURE_RATE=1.000000</span><br><span class="line">PAL_SPAWN_NUM_RATE=1.000000</span><br><span class="line">PAL_DAMAGE_RATE_ATTACK=1.000000</span><br><span class="line">PAL_DAMAGE_RATE_DEFENSE=1.000000</span><br><span class="line">PLAYER_DAMAGE_RATE_ATTACK=1.000000</span><br><span class="line">PLAYER_DAMAGE_RATE_DEFENSE=1.000000</span><br><span class="line">PLAYER_STOMACH_DECREASE_RATE=1.000000</span><br><span class="line">PLAYER_STAMINA_DECREACE_RATE=1.000000</span><br><span class="line">PLAYER_AUTO_HP_REGENE_RATE=1.000000</span><br><span class="line">PLAYER_AUTO_HP_REGENE_RATE_IN_SLEEP=1.000000</span><br><span class="line">PAL_STOMACH_DECREACE_RATE=1.000000</span><br><span class="line">PAL_STAMINA_DECREACE_RATE=1.000000</span><br><span class="line">PAL_AUTO_HP_REGENE_RATE=1.000000</span><br><span class="line">PAL_AUTO_HP_REGENE_RATE_IN_SLEEP=1.000000</span><br><span class="line">BUILD_OBJECT_DAMAGE_RATE=1.000000</span><br><span class="line">BUILD_OBJECT_DETERIORATION_DAMAGE_RATE=1.000000</span><br><span class="line">COLLECTION_DROP_RATE=1.000000</span><br><span class="line">COLLECTION_OBJECT_HP_RATE=1.000000</span><br><span class="line">COLLECTION_OBJECT_RESPAWN_SPEED_RATE=1.000000</span><br><span class="line">ENEMY_DROP_ITEM_RATE=1.000000</span><br><span class="line">DEATH_PENALTY=None</span><br><span class="line">ENABLE_PLAYER_TO_PLAYER_DAMAGE=false</span><br><span class="line">ENABLE_FRIENDLY_FIRE=false</span><br><span class="line">ENABLE_INVADER_ENEMY=true</span><br><span class="line">ACTIVE_UNKO=false</span><br><span class="line">ENABLE_AIM_ASSIST_PAD=true</span><br><span class="line">ENABLE_AIM_ASSIST_KEYBOARD=false</span><br><span class="line">DROP_ITEM_MAX_NUM=3000</span><br><span class="line">DROP_ITEM_MAX_NUM_UNKO=100</span><br><span class="line">BASE_CAMP_MAX_NUM=128</span><br><span class="line">BASE_CAMP_WORKER_MAXNUM=15</span><br><span class="line">DROP_ITEM_ALIVE_MAX_HOURS=1.000000</span><br><span class="line">AUTO_RESET_GUILD_NO_ONLINE_PLAYERS=false</span><br><span class="line">AUTO_RESET_GUILD_TIME_NO_ONLINE_PLAYERS=72.000000</span><br><span class="line">GUILD_PLAYER_MAX_NUM=20</span><br><span class="line">PAL_EGG_DEFAULT_HATCHING_TIME=0.100000</span><br><span class="line">WORK_SPEED_RATE=1.000000</span><br><span class="line">IS_MULTIPLAY=false</span><br><span class="line">IS_PVP=false</span><br><span class="line">CAN_PICKUP_OTHER_GUILD_DEATH_PENALTY_DROP=false</span><br><span class="line">ENABLE_NON_LOGIN_PENALTY=true</span><br><span class="line">ENABLE_FAST_TRAVEL=true</span><br><span class="line">IS_START_LOCATION_SELECT_BY_MAP=true</span><br><span class="line">EXIST_PLAYER_AFTER_LOGOUT=false</span><br><span class="line">ENABLE_DEFENSE_OTHER_GUILD_PLAYER=false</span><br><span class="line">COOP_PLAYER_MAX_NUM=4</span><br><span class="line">MAX_PLAYERS=32</span><br><span class="line">SERVER_NAME=你不干帕鲁也不干</span><br><span class="line">SERVER_DESCRIPTION=你不干帕鲁也不干</span><br><span class="line">ADMIN_PASSWORD=www.123.com</span><br><span class="line">SERVER_PASSWORD=58.216.178.10</span><br><span class="line">PUBLIC_PORT=8211</span><br><span class="line">PUBLIC_IP=58.216.178.10</span><br><span class="line">RCON_ENABLED=true</span><br><span class="line">RCON_PORT=25575</span><br><span class="line">REGION=</span><br><span class="line">USEAUTH=true</span><br><span class="line">BAN_LIST_URL=https://api.palworldgame.com/api/banlist.txt</span><br></pre></td></tr></table></figure><p>启动服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d &amp;&amp; docker-compose logs -f</span><br></pre></td></tr></table></figure><p>看到如下内容则启动成功<br><img src="https://pic.hiasia.fun/image/20240131114828.png" alt="image.png"></p><h3 id="二-优化服务器"><a href="#二-优化服务器" class="headerlink" title="二.优化服务器"></a>二.优化服务器</h3><h4 id="1-替换第三方优化插件"><a href="#1-替换第三方优化插件" class="headerlink" title="1.替换第三方优化插件"></a>1.替换第三方优化插件</h4><p>安装非官方修复,可降低一定内存占用,提高服务器帧率(1.4.0后停止更新,官方已修复)<br><a href="https://github.com/VeroFess/PalWorld-Server-Unoffical-Fix">VeroFess&#x2F;PalWorld-Server-Unoffical-Fix: This is an unofficial palworld server binary distribution project that fixes some problems with the original server. (github.com)</a></p><p>将下载的文件,替换game&#x2F;Pal&#x2F;Binaries&#x2F;Linux&#x2F;PalServer-Linux-Test</p><h4 id="2-提高服务器帧率限制"><a href="#2-提高服务器帧率限制" class="headerlink" title="2.提高服务器帧率限制"></a>2.提高服务器帧率限制</h4><blockquote><p>vi game&#x2F;Pal&#x2F;Saved&#x2F;Config&#x2F;LinuxServer&#x2F;Engine.ini</p></blockquote><p>添加以下代码,将帧率调整为最大120帧:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[/Script/OnlineSubsystemUtils.IpNetDriver]</span><br><span class="line">NetServerMaxTickRate=120</span><br></pre></td></tr></table></figure><h3 id="三-新增mod"><a href="#三-新增mod" class="headerlink" title="三.新增mod"></a>三.新增mod</h3><p>模组区分服务器模组与客户端模组.安装时请注意是服务器还是客户端模组<br>模组下载地址:<a href="https://www.nexusmods.com/palworld">https://www.nexusmods.com/palworld</a><br><a href="https://github.com/UE4SS-RE/RE-UE4SS/releases">Releases · UE4SS-RE&#x2F;RE-UE4SS (github.com)</a></p><h4 id="1-安装UE4SS-Xinput"><a href="#1-安装UE4SS-Xinput" class="headerlink" title="1.安装UE4SS_Xinput"></a>1.安装UE4SS_Xinput</h4><p>将下载好并解压的的UE4SS_Xinput,放入到服务器中的<code>game/Pal/Binaries/Linux</code>目录下</p><h4 id="2-上传mod"><a href="#2-上传mod" class="headerlink" title="2.上传mod"></a>2.上传mod</h4><p>将对应的mod放到<code>game/Pal/Content/Paks</code>目录下</p><h4 id="3-重启docker容器"><a href="#3-重启docker容器" class="headerlink" title="3.重启docker容器"></a>3.重启docker容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose restart</span><br></pre></td></tr></table></figure><h3 id="四-存档管理后台"><a href="#四-存档管理后台" class="headerlink" title="四.存档管理后台"></a>四.存档管理后台</h3><p>项目地址:<br><a href="https://github.com/zaigie/palworld-server-tool?tab=readme-ov-file#%E5%8D%95%E4%BD%93%E9%83%A8%E7%BD%B2">zaigie&#x2F;palworld-server-tool: 基于Level.sav存档解析和RCON优雅地用可视化界面管理幻兽帕鲁专用服务器</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看docker容器内部地址:</span></span><br><span class="line">docker inspect &lt;container_id&gt; | grep IPAddress</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker inspect 74d8405b370d | grep IPAddress</span></span><br><span class="line"></span><br><span class="line">docker run -d --name pst \</span><br><span class="line">-p 8099:8080 \</span><br><span class="line">-m 8192M \</span><br><span class="line">-v /home/ubuntu/palworld3/game/Pal/Saved/SaveGames/0/789EB9C6EF394C7D828CBF98CD322A88:/game \</span><br><span class="line">-v /home/ubuntu/palworld3/pst.db:/app/pst.db \</span><br><span class="line">-e WEB__PASSWORD=&quot;管理密码&quot; \</span><br><span class="line">-e RCON__ADDRESS=&quot;172.21.0.2:25575&quot; \</span><br><span class="line">-e RCON__PASSWORD=&quot;自己的密码&quot; \</span><br><span class="line">-e SAVE__PATH=&quot;/game/Level.sav&quot; \</span><br><span class="line">-e SAVE__SYNC_INTERVAL=120 \</span><br><span class="line">--network palworld3_default \</span><br><span class="line">jokerwho/palworld-server-tool:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果:<br><img src="https://pic.hiasia.fun/image/202402201618224.png"></p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Panther X2 rk3566安装jellyfin开启硬件解码</title>
      <link href="/2024/01/14/%E6%8A%98%E8%85%BE/Panther%20X2%20rk3566%E4%BD%BF%E7%94%A8Jellyfin%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/"/>
      <url>/2024/01/14/%E6%8A%98%E8%85%BE/Panther%20X2%20rk3566%E4%BD%BF%E7%94%A8Jellyfin%E5%BC%80%E5%90%AF%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>今年年初准备学习K8S,在挑选树莓派的过程中发现了这款小盒子.因为IO较少,价格比树莓派4便宜很多.可以运行armbian.果断买了3个.到手后刷机安装K3S,运行镜像.然后开始放架子上吃灰.<br>在最近发现了网上有3588的jellyfin硬件解码文章<a href="https://www.bilibili.com/read/cv28664442/?spm_id_from=333.999.0.0">Jellyfin中国特供版现已支持Rockchip RK3588 - 哔哩哔哩 (bilibili.com)</a>.<br>有泛起了折腾的心,当即翻出x2开始折腾,本文提供思路希望有能力的大佬可以完善<br>下面是官方的介绍<br><img src="https://pic.hiasia.fun/image/20240220203929.png" alt="image.png"></p><h1 id="一-遇到的问题"><a href="#一-遇到的问题" class="headerlink" title="一.遇到的问题"></a>一.遇到的问题</h1><ol><li>ophub&#x2F;armbian的x2镜像选择rk35xx的内核后,就会导致网口无法使用(x2的u-boot有问题,使用JP-Box的u-boot可以启动,不知有什么区别希望大佬指点)</li><li>x2的dts关于vpu的模块并没有开启</li><li>使用rk35xx内核,无法支持N大的镜像,只能使用jjm2473&#x2F;jellyfin-mpp:latest镜像,效率差了很多</li><li>后续询问N大,指出我使用的内核驱动版本过低.需要升级到multi-rga.重新选择内核,编译刷机后.成功进行硬件转码(在此感谢N大的耐心解答)<ul><li>修改内核参数如下<img src="https://pic.hiasia.fun/image/20240119172459.png" alt="image.png"></li><li>也可以直接使用rk3588内核,具体差异未知</li></ul></li></ol><h1 id="二-刷机"><a href="#二-刷机" class="headerlink" title="二.刷机"></a>二.刷机</h1><p>这里最重要的就是镜像,需要刷入支持rkvpu驱动的内核,这里博主是自己编译的.可以到Release中下载,具体的刷机教程就不详细展开了<br>仓库地址:<a href="https://github.com/HelloTheAsia/amlogic-s9xxx-armbian">HelloTheAsia&#x2F;amlogic-s9xxx-armbian</a></p><ol><li>下载PantherX2的镜像(因为x2的dts没有开启相应的选项.目前博主使用x2镜像是根据jp-box修改的,内核使用的是修改参数后的rk35xx内核)<ul><li>感谢晴天大佬提供的dts,也可使用他编译的iStoreOS</li><li><a href="https://www.right.com.cn/forum/thread-8297972-1-1.html">panther x2（黑豹X2） openwrt高大全固件+iStoreOS固件-OPENWRT专版-恩山无线论坛</a></li></ul></li><li>下载相应的loader</li><li>下载rk刷机工具</li><li>进入maskrom刷机</li></ol><h1 id="三-安装Jellyfin"><a href="#三-安装Jellyfin" class="headerlink" title="三.安装Jellyfin"></a>三.安装Jellyfin</h1><h2 id="选择合适的ssh工具登录到设备"><a href="#选择合适的ssh工具登录到设备" class="headerlink" title="选择合适的ssh工具登录到设备"></a>选择合适的ssh工具登录到设备</h2><p>用户名:root<br>密码:1234<br>第一次登录会让你修改密码,选择bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件源</span></span><br><span class="line">apt update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装docker</span></span><br><span class="line">apt install docker.io</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建目录</span></span><br><span class="line">mkdir -p /root/jellyfin/config</span><br><span class="line">mkdir -p /root/jellyfin/media</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动jellyfin</span></span><br><span class="line">docker run -d \</span><br><span class="line">--name jellyfinny \</span><br><span class="line">--privileged \</span><br><span class="line">-p 8096:8096 \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">--volume /root/jellyfin/config:/config \</span><br><span class="line">--volume /tmp:/cache \</span><br><span class="line">--volume /root/jellyfin/media:/media \</span><br><span class="line">`for dev in dri dma_heap mali0 rga mpp_service \</span><br><span class="line">    iep mpp-service vpu_service vpu-service \</span><br><span class="line">    hevc_service hevc-service rkvdec rkvenc vepu h265e ; do \</span><br><span class="line">   [ -e &quot;/dev/$dev&quot; ] &amp;&amp; echo &quot; --device /dev/$dev&quot;; \</span><br><span class="line">  done` \</span><br><span class="line">nyanmisaka/jellyfin:latest-rockchip</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">也可使用jjm2473/jellyfin-mpp:latest,其它设置相同替换镜像名即可</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">jjm2473这个镜像启动就默认开启硬解了,不要在设置中选择任何转码的选项</span></span><br><span class="line">docker run -d \</span><br><span class="line">--name jellyfinny \</span><br><span class="line">--privileged \</span><br><span class="line">-p 8096:8096 \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">--volume /root/jellyfin/config:/config \</span><br><span class="line">--volume /tmp:/cache \</span><br><span class="line">--volume /root/jellyfin/media:/media \</span><br><span class="line">`for dev in dri dma_heap mali0 rga mpp_service \</span><br><span class="line">    iep mpp-service vpu_service vpu-service \</span><br><span class="line">    hevc_service hevc-service rkvdec rkvenc vepu h265e ; do \</span><br><span class="line">   [ -e &quot;/dev/$dev&quot; ] &amp;&amp; echo &quot; --device /dev/$dev&quot;; \</span><br><span class="line">  done` \</span><br><span class="line">jjm2473/jellyfin-mpp:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装完成后,访问http:&#x2F;&#x2F;本机ip:8096,即可进入jellyfin</p><h1 id="四-配置硬件解码"><a href="#四-配置硬件解码" class="headerlink" title="四.配置硬件解码"></a>四.配置硬件解码</h1><p>如果使用jjm2473这个镜像启动就默认开启硬解了,不要在设置中选择任何转码的选项</p><p>使用nyanmisaka&#x2F;jellyfin:latest-rockchip设置中选择,如下图,即可开启硬件解码<br><img src="https://pic.hiasia.fun/image/d2ad908a682a0810b8b44299abacc1c9.jpeg"><br>测试转码<br><img src="https://pic.hiasia.fun/image/202401151543500.png"></p><h1 id="五-已经运行了服务的系统升级思路-小白切勿操作"><a href="#五-已经运行了服务的系统升级思路-小白切勿操作" class="headerlink" title="五.已经运行了服务的系统升级思路,小白切勿操作"></a>五.已经运行了服务的系统升级思路,小白切勿操作</h1><p><strong>如果数据重要,请务必备份后再进行操作</strong><br><strong>博主并未尝试只是整合了网上收集的资料</strong><br><strong>必须先替换u-boot,否则更换内核后网卡无法使用</strong></p><h3 id="1-下载并刷写jp-box的u-boot"><a href="#1-下载并刷写jp-box的u-boot" class="headerlink" title="1.下载并刷写jp-box的u-boot"></a>1.下载并刷写jp-box的u-boot</h3><p><a href="https://github.com/ophub/u-boot/tree/main/u-boot/rockchip/jp-tvbox">https://github.com/ophub/u-boot/tree/main/u-boot/rockchip/jp-tvbox</a><br>下载<code>idbloader.img</code> <code>u-boot.itb</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd if=idbloader.img of=/dev/mmcblk1 seek=64</span><br><span class="line">dd if=u-boot.itb of=/dev/mmcblk1 seek=16384</span><br></pre></td></tr></table></figure><h3 id="2-升级更换rk35xx系统内核"><a href="#2-升级更换rk35xx系统内核" class="headerlink" title="2. 升级更换rk35xx系统内核"></a>2. 升级更换rk35xx系统内核</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">armbian-update -r hellotheasia/kernel -u rk35xx -k 5.10.160</span><br></pre></td></tr></table></figure><h3 id="3-更换x2-dtb"><a href="#3-更换x2-dtb" class="headerlink" title="3.更换x2 dtb"></a>3.更换x2 dtb</h3><p>dtb文件:<a href="https://pic.hiasia.fun/image/rk3566-panther-x2.dtb">https://pic.hiasia.fun/image/rk3566-panther-x2.dtb</a><br>1.手动上传替换&#x2F;boot&#x2F;dtb&#x2F;rockchip&#x2F;rk3566-panther-x2.dtb文件<br>2.使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://pic.hiasia.fun/image/rk3566-panther-x2.dtb</span><br><span class="line">cp ./rk3566-panther-x2.dtb /boot/dtb/rockchip/rk3566-panther-x2.dtb</span><br><span class="line">rm rk3566-panther-x2.dtb</span><br></pre></td></tr></table></figure><h3 id="4-重启机器"><a href="#4-重启机器" class="headerlink" title="4.重启机器"></a>4.重启机器</h3><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://www.bilibili.com/read/cv28664442/?spm_id_from=333.999.0.0">Jellyfin中国特供版现已支持Rockchip RK3588 - 哔哩哔哩 (bilibili.com)</a></li><li><a href="https://github.com/ophub/amlogic-s9xxx-armbian">ophub&#x2F;amlogic-s9xxx-armbian: Support for Armbian in Amlogic, Rockchip and Allwinner boxes. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, s905l, rk3588, rk3568, rk3399, rk3328, h6, etc. (github.com)</a></li><li><a href="https://github.com/xiaomeng9597/Actions-iStoreOS-For-RK35XX">xiaomeng9597&#x2F;Actions-iStoreOS-For-RK35XX: 使用 GitHub Actions 云编译 iStore OS 固件</a></li><li><a href="https://github.com/unifreq/linux-5.10.y-rk35xx">unifreq&#x2F;linux-5.10.y-rk35xx: Rockchip BSP Kernel 5.10, for rk35xx (github.com)</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>armbian编译学习</title>
      <link href="/2024/01/09/%E6%8A%98%E8%85%BE/armbian%E7%BC%96%E8%AF%91%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/01/09/%E6%8A%98%E8%85%BE/armbian%E7%BC%96%E8%AF%91%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>在折腾x2的jellyfin参考,ophub项目的文档学习armbian的编译,写个博客以免以后忘记.ophub的中文文档非常的详细,认真看文档上手非常的快,在此感谢ophub大佬,对于armbian的付出.<br>本文基于编译github action,如果你有ubuntu的机器,网络环境较好.本地编译的难度与速度要大大优于云编译.<br>如果你对git有一点了解 也可以跟着教程编译自己的固件</p><h1 id="零-常用操作"><a href="#零-常用操作" class="headerlink" title="零.常用操作"></a>零.常用操作</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入rk dtb目录</span></span><br><span class="line">cd amlogic-s9xxx-armbian/build-armbian/armbian-files/platform-files/rockchip/bootfs/dtb/rockchip</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地修改dts需要安装dtc反编译</span></span><br><span class="line">apt install -y device-tree-compiler</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MacOS</span></span><br><span class="line">brew isntall dtc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">反编译dts</span></span><br><span class="line">dtc -I dtb -O dts -o 自定义名称.dts 原始.dtb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译为dtb</span></span><br><span class="line">dtc -I dts -O dtb -o 自定义.dtb 需要编译的.dts</span><br></pre></td></tr></table></figure><h1 id="一-Fork项目到自己仓库"><a href="#一-Fork项目到自己仓库" class="headerlink" title="一.Fork项目到自己仓库"></a>一.Fork项目到自己仓库</h1><p>前两项可以参考<a href="https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/documents/README.cn.md#1-%E6%B3%A8%E5%86%8C%E8%87%AA%E5%B7%B1%E7%9A%84-github-%E7%9A%84%E8%B4%A6%E6%88%B7">amlogic-s9xxx-armbian&#x2F;documents&#x2F;README.cn.md at main · ophub&#x2F;amlogic-s9xxx-armbian (github.com)</a><br>这个教程更加详细更加小白</p><ol><li>打开官方项目地址:<a href="https://github.com/ophub/amlogic-s9xxx-armbian">ophub&#x2F;amlogic-s9xxx-armbian: Support for Armbian in Amlogic, Rockchip and Allwinner boxes. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, s905l, rk3588, rk3568, rk3399, rk3328, h6, etc. (github.com)</a></li><li><img src="https://pic.hiasia.fun/image/20240117164523.png" alt="image.png"></li><li>确认</li></ol><h1 id="二-设置-Github-隐私变量GITHUB-TOKEN"><a href="#二-设置-Github-隐私变量GITHUB-TOKEN" class="headerlink" title="二.设置 Github 隐私变量GITHUB_TOKEN"></a>二.设置 Github 隐私变量GITHUB_TOKEN</h1><ol><li><img src="https://pic.hiasia.fun/image/20240117164813.png" alt="image.png"></li><li><img src="https://pic.hiasia.fun/image/20240117164844.png" alt="image.png"></li><li><img src="https://pic.hiasia.fun/image/20240117164914.png" alt="image.png"></li><li><img src="https://pic.hiasia.fun/image/20240117164940.png" alt="image.png"></li><li>名字随意,勾选如下两个</li><li><img src="https://pic.hiasia.fun/image/20240117165031.png" alt="image.png"></li><li>记录生成的token</li><li>仓库设置中填写刚刚生成的token,这里的Name一定是GH_TOKEN.流水线中会用到</li><li><img src="https://pic.hiasia.fun/image/20240117165350.png" alt="image.png"></li><li>设置流水线权限</li><li><img src="https://pic.hiasia.fun/image/20240117165459.png" alt="image.png"></li><li>到此基础的准备就结束了</li></ol><h1 id="三-修改编译信息"><a href="#三-修改编译信息" class="headerlink" title="三.修改编译信息"></a>三.修改编译信息</h1><h3 id="1-clone项目到本地"><a href="#1-clone项目到本地" class="headerlink" title="1. clone项目到本地"></a>1. clone项目到本地</h3><blockquote><p>git clone <a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/amlogic-s9xxx-armbian.git">https://github.com/用户名/amlogic-s9xxx-armbian.git</a></p></blockquote><h3 id="2-编辑相应信息"><a href="#2-编辑相应信息" class="headerlink" title="2.编辑相应信息"></a>2.编辑相应信息</h3><h4 id="2-1-github-workflows-build-armbian-yml流水线中需要将项目地址换成自己的项目地址"><a href="#2-1-github-workflows-build-armbian-yml流水线中需要将项目地址换成自己的项目地址" class="headerlink" title="2.1.github&#x2F;workflows&#x2F;build-armbian.yml流水线中需要将项目地址换成自己的项目地址"></a>2.1.github&#x2F;workflows&#x2F;build-armbian.yml流水线中需要将项目地址换成自己的项目地址</h4><p><img src="https://pic.hiasia.fun/image/20240117170043.png" alt="image.png"></p><h4 id="2-2修改build-armbian-armbian-files-common-files-etc-model-database-conf文件-找到自己想要编译的机型-进行对应的修改"><a href="#2-2修改build-armbian-armbian-files-common-files-etc-model-database-conf文件-找到自己想要编译的机型-进行对应的修改" class="headerlink" title="2.2修改build-armbian&#x2F;armbian-files&#x2F;common-files&#x2F;etc&#x2F;model_database.conf文件,找到自己想要编译的机型.进行对应的修改."></a>2.2修改build-armbian&#x2F;armbian-files&#x2F;common-files&#x2F;etc&#x2F;model_database.conf文件,找到自己想要编译的机型.进行对应的修改.</h4><p><img src="https://pic.hiasia.fun/image/20240117170750.png" alt="image.png"></p><h5 id="2-3如果你选择的内核与内核版本在-流水线build-armbian-yml不存在-也需要添加相应的选项"><a href="#2-3如果你选择的内核与内核版本在-流水线build-armbian-yml不存在-也需要添加相应的选项" class="headerlink" title="2.3如果你选择的内核与内核版本在,流水线build-armbian.yml不存在,也需要添加相应的选项"></a>2.3如果你选择的内核与内核版本在,流水线build-armbian.yml不存在,也需要添加相应的选项</h5><p><img src="https://pic.hiasia.fun/image/20240117170516.png" alt="image.png"></p><h1 id="四-修改更换u-boot"><a href="#四-修改更换u-boot" class="headerlink" title="四.修改更换u-boot"></a>四.修改更换u-boot</h1><h3 id="1-fork官方ophub的u-boot的仓库"><a href="#1-fork官方ophub的u-boot的仓库" class="headerlink" title="1.fork官方ophub的u-boot的仓库"></a>1.fork官方ophub的u-boot的仓库</h3><h4 id="2-将rebuild下的u-boot仓库改为自己的"><a href="#2-将rebuild下的u-boot仓库改为自己的" class="headerlink" title="2.将rebuild下的u-boot仓库改为自己的"></a>2.将rebuild下的u-boot仓库改为自己的</h4><p><img src="https://pic.hiasia.fun/image/20240117171004.png" alt="image.png"></p><h4 id="3-调整model-database-conf-如果同名则不用调整"><a href="#3-调整model-database-conf-如果同名则不用调整" class="headerlink" title="3.调整model_database.conf,如果同名则不用调整"></a>3.调整model_database.conf,如果同名则不用调整</h4><h1 id="五-修改更换dtb"><a href="#五-修改更换dtb" class="headerlink" title="五.修改更换dtb"></a>五.修改更换dtb</h1><ol><li>需要先将dtb反编译为dts<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtc -I dtb -O dts -o 自定义名称.dts 原始.dtb</span><br></pre></td></tr></table></figure></li><li>将修改过的dts编译为dtb<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtc -I dts -O dtb -o 自定义.dtb 需要编译的.dts</span><br></pre></td></tr></table></figure></li></ol><h1 id="六-参考资料"><a href="#六-参考资料" class="headerlink" title="六.参考资料"></a>六.参考资料</h1><p>只有ophub的文档,写的非常详细</p><ol><li><a href="https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/documents/README.cn.md">amlogic-s9xxx-armbian&#x2F;documents&#x2F;README.cn.md at main · ophub&#x2F;amlogic-s9xxx-armbian (github.com)</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>墨水屏标签seller-L3N@</title>
      <link href="/2024/01/08/%E6%8A%98%E8%85%BE/%E5%A2%A8%E6%B0%B4%E5%B1%8F%E4%BB%B7%E7%AD%BEseller-L3/"/>
      <url>/2024/01/08/%E6%8A%98%E8%85%BE/%E5%A2%A8%E6%B0%B4%E5%B1%8F%E4%BB%B7%E7%AD%BEseller-L3/</url>
      
        <content type="html"><![CDATA[<p>在海鲜市场闲逛发现了超市的墨水屏价签,发现它可以刷机变成桌面时钟,果断下单.开始折腾</p><h1 id="一-前期准备"><a href="#一-前期准备" class="headerlink" title="一.前期准备"></a>一.前期准备</h1><ol><li>串口转USB</li><li>杜邦线</li><li>seller-L3N@电子价签(主控芯片：TLSR8359)</li><li>参考资料,开源项目<a href="https://github.com/reece15/stellar-L3N-etag">reece15&#x2F;stellar-L3N-etag: 为stellar-L3N-etag修改的固件 (github.com)</a></li><li>下载刷机固件 <a href="https://github.com/reece15/stellar-L3N-etag/blob/main/Firmware/ATC_Paper.bin">https://github.com/reece15/stellar-L3N-etag/blob/main/Firmware/ATC_Paper.bin</a></li></ol><h1 id="二-刷机"><a href="#二-刷机" class="headerlink" title="二.刷机"></a>二.刷机</h1><h2 id="1-价签连接"><a href="#1-价签连接" class="headerlink" title="1.价签连接"></a>1.价签连接</h2><p>将价签背后的连接到USB转TTL上.博主使用的是CH340G<br><img src="https://pic.hiasia.fun/image/202401111406169.png"><br>下面是ttl模块使用的针脚 与上面一一对应<br><img src="https://pic.hiasia.fun/image/202401111410322.png"></p><h2 id="2-开始刷机"><a href="#2-开始刷机" class="headerlink" title="2.开始刷机"></a>2.开始刷机</h2><ol><li>焊接 GND, VCC, RX, RTS四根线。</li><li>连接CH340,对应的接口,其中RX连接TX,其它相对应连接即可</li><li>打开<a href="https://atc1441.github.io/ATC_TLSR_Paper_UART_Flasher.html">https://atc1441.github.io/ATC_TLSR_Paper_UART_Flasher.html</a>, 波特率选择默认 460800，Atime默认，文件选择ATC_Paper.bin</li><li>先点击unlock,再点击write to flush,等待完成。成功后，屏幕会自动刷新。<ul><li><img src="https://pic.hiasia.fun/image/20240111141808.png" alt="image.png"></li></ul></li><li>成功后屏幕会开始闪烁显示时钟模式</li><li>访问<a href="https://javabin.cn/stellar-L3N-etag/web_tools/">电子价签蓝牙控制器 (javabin.cn)</a>或者(第二个地址仅支持ipv6)<a href="https://blue.hiasia.fun:8888/">电子价签蓝牙控制器 (hiasia.fun)</a></li><li>连接蓝牙更新时间切换模式.左上角的设备名称就是蓝牙名<br>博主对源码做了一点简单的改动,效果如下<br><img src="https://pic.hiasia.fun/image/202401111358718.png"></li></ol><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://github.com/reece15/stellar-L3N-etag">reece15&#x2F;stellar-L3N-etag: 为stellar-L3N-etag修改的固件 (github.com)</a></li><li>[【墨水屏】2.9寸墨水屏固件适配、二次开发，主控芯片：TLSR8359 | 除了代码也想写点其他的 (javabin.cn)](<a href="https://javabin.cn/2022/epaper.html">https://javabin.cn/2022/epaper.html</a></li><li><a href="https://github.com/atc1441/ATC_TLSR_Paper">atc1441&#x2F;ATC_TLSR_Paper: Custom BLE firmware for Hanshow E-Paper Shelf Labels &#x2F; Price Tags (github.com)</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SW799安装PIKVM</title>
      <link href="/2024/01/07/%E6%8A%98%E8%85%BE/SW799%E5%AE%89%E8%A3%85PIKVM/"/>
      <url>/2024/01/07/%E6%8A%98%E8%85%BE/SW799%E5%AE%89%E8%A3%85PIKVM/</url>
      
        <content type="html"><![CDATA[<p>最近在折腾PIKVM,来管理老家的服务器.刚开始找朋友拿了个3288的板子,但因为固件的问题尝试了很多方法没有成功,最终流产.在元旦在群里看到68元的sw799(rk3399 + 4g + 8&#x2F;16g),网上找到了合适的案例,果断上车.记录一下安装的过程.</p><h1 id="一-刷机"><a href="#一-刷机" class="headerlink" title="一.刷机"></a>一.刷机</h1><p>前期准备</p><ol><li>micro usb线</li><li>12v大于等于1A的dc电源应该是5525 5521都可以用(一般路由器光猫的电源) </li><li>采集卡,博主使用的是网上20包邮的MS2109</li><li>瑞芯微的驱动与刷机工具,下载地址,在此感谢站长<a href="https://lajilao.top/">垃圾佬点拓扑论坛</a><ul><li><a href="http://files.kos.org.cn/rockchip/%E5%88%B7%E6%9C%BA%E5%B7%A5%E5%85%B7%E4%B8%8E%E9%A9%B1%E5%8A%A8/">下载服务器 by nginx (kos.org.cn)</a></li></ul></li><li>armbian固件,推荐使用ubuntu22.04 jammy,<ol><li>项目地址:<a href="https://github.com/ophub/amlogic-s9xxx-armbian/releases">Releases · ophub&#x2F;amlogic-s9xxx-armbian (github.com)</a></li><li>rk3399loader文件<a href="https://pic.hiasia.fun/image/rk3399_loader_v1.26.bin">3399loader</a></li><li><a href="https://mirror.ghproxy.com/?q=https://github.com/ophub/amlogic-s9xxx-armbian/releases/download/Armbian_jammy_save_2024.01/Armbian_24.2.0_rockchip_sw799_jammy_5.15.145_server_2024.01.01.img.gz">代理下载地址</a><br><img src="https://pic.hiasia.fun/image/202401071530534.png"></li></ol></li></ol><h2 id="1-安装驱动与rk刷机软件"><a href="#1-安装驱动与rk刷机软件" class="headerlink" title="1.安装驱动与rk刷机软件"></a>1.安装驱动与rk刷机软件</h2><p>选择loader文件,与刷机包</p><h2 id="2-电脑USB连接OTG刷机口"><a href="#2-电脑USB连接OTG刷机口" class="headerlink" title="2.电脑USB连接OTG刷机口"></a>2.电脑USB连接OTG刷机口</h2><h2 id="3-按住LOADER键-同时插电"><a href="#3-按住LOADER键-同时插电" class="headerlink" title="3.按住LOADER键,同时插电"></a>3.按住LOADER键,同时插电</h2><p><strong>LOADER模式</strong>:重启到MASKROM进行刷机<br><img src="https://pic.hiasia.fun/image/20240109103919.png" alt="image.png"></p><p><strong>MASKROM模式</strong>:直接刷机,注意地址要相同<br><img src="https://pic.hiasia.fun/image/20240109104059.png" alt="image.png"></p><h1 id="二-通过ssh连接开发板"><a href="#二-通过ssh连接开发板" class="headerlink" title="二.通过ssh连接开发板"></a>二.通过ssh连接开发板</h1><p>博主这里使用的<a href="https://tabby.sh/">Tabby</a>,可以自己挑选习惯的ssh工具</p><h2 id="1-连接ssh"><a href="#1-连接ssh" class="headerlink" title="1.连接ssh"></a>1.连接ssh</h2><p>用户名:root<br>默认密码:1234<br>第一次登录需要你重新设置密码<br>然后选择bash或者zsh都可以</p><h2 id="2-修改设备树"><a href="#2-修改设备树" class="headerlink" title="2.修改设备树"></a>2.修改设备树</h2><p>运行armbian-config,如果没有反应多按两下回车,可以看到下图</p><blockquote><p>armbian-config<br><img src="https://pic.hiasia.fun/image/202401071607382.png"></p></blockquote><p>选择System然后选择DTC,修改usb模式为peripheral,如下图<br>其中<br>usb@fe800000为otg使用，<br>usb@fe900000为采集卡使用.<br><img src="https://pic.hiasia.fun/image/202401071616049.png"><br>修改完毕后按</p><blockquote><p><strong>ctrl+o</strong>回车<br><strong>ctrl+x</strong><br>y<br>n<br><strong>ctrl+c</strong></p></blockquote><p>进入到命令行</p><p>重启</p><blockquote><p>reboot</p></blockquote><h2 id="3-开始安装PIKVM"><a href="#3-开始安装PIKVM" class="headerlink" title="3.开始安装PIKVM"></a>3.开始安装PIKVM</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件源</span></span><br><span class="line">sudo apt update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装git</span></span><br><span class="line">sudo apt install -y git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取代码</span></span><br><span class="line">git clone https://github.com/jacobbar/fruity-pikvm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果拉取失败,通过代理拉取</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">clone</span> https://mirror.ghproxy.com/https://github.com/jacobbar/fruity-pikvm</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入目录</span></span><br><span class="line">cd fruity-pikvm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行安装脚本</span></span><br><span class="line">sudo ./install.sh</span><br></pre></td></tr></table></figure><p>出现下图则安装成功<br><img src="https://pic.hiasia.fun/image/20240107163935.png" alt="image.png"></p><h4 id="如果下载fruity-pikvm下载缓慢可以更换代理下载"><a href="#如果下载fruity-pikvm下载缓慢可以更换代理下载" class="headerlink" title="如果下载fruity-pikvm下载缓慢可以更换代理下载"></a>如果下载fruity-pikvm下载缓慢可以更换代理下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑install.sh脚本</span></span><br><span class="line">nano install.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将下载地址前加上代理地址</span></span><br><span class="line">https://mirror.ghproxy.com/</span><br></pre></td></tr></table></figure><p><img src="https://pic.hiasia.fun/image/20240107164150.png"></p><h3 id="插入采集卡与OTG线与电脑连接"><a href="#插入采集卡与OTG线与电脑连接" class="headerlink" title="插入采集卡与OTG线与电脑连接"></a>插入采集卡与OTG线与电脑连接</h3><p><img src="https://pic.hiasia.fun/image/20240107164508.png" alt="image.png"></p><p>重启机器<br>reboot<br>重启完成后访问:<a href="https://ip地址就可进入pikvm/">https://ip地址就可进入pikvm</a><br>用户名:admin<br>默认密码:admin<br>进入此页面则安装完成<br><img src="https://pic.hiasia.fun/image/20240107164643.png" alt="image.png"><br>如果已经连接采集卡与OTG线即可看到电脑桌面与控制电脑<br><img src="https://pic.hiasia.fun/image/20240107165056.png" alt="image.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.ldora.cn/896.html">SW799&#x2F;RK3399折腾armkvm-armbian+pikvmd-armbian - 叮当窝 (ldora.cn)</a></li><li><a href="https://www.bilibili.com/video/BV1oc41167Mw/?spm_id_from=333.337.search-card.all.click&vd_source=346c8894b7c6983917e2126ad1c751a2">sw799&#x2F;rk3399 刷armbian禁用4G模块，ipkvm，pikvm，kvmd-armbian_哔哩哔哩_bilibili</a></li><li><a href="https://github.com/jacobbar/fruity-pikvm">jacobbar&#x2F;fruity-pikvm: Install Pi-KVM on debian SBCs such as Orange Pi, Banana Pi, Mango Pi, etc (github.com)</a></li><li><a href="https://github.com/ophub/amlogic-s9xxx-armbian">ophub&#x2F;amlogic-s9xxx-armbian: Support for Armbian in Amlogic, Rockchip and Allwinner boxes. Support a311d, s922x, s905x3, s905x2, s912, s905d, s905x, s905w, s905, s905l, rk3588, rk3568, rk3399, rk3328, h6, etc. (github.com)</a></li><li><a href="https://lajilao.top/thread-114-1-1.html">【活动】sw799(rk3399 4G内存）4G全网通上网 只要68元包邮 - LaJiLao.Top</a></li><li><a href="https://www.bilibili.com/video/BV15a411L7y9/?spm_id_from=333.337.search-card.all.click">sw799 RK3399 4+x 官方底板 刷机（armbian、openwrt）以及ttl 插针介绍_哔哩哔哩_bilibili</a></li><li>[rk3399: rk3399的相关资料 - Gitee.com](<a href="https://gitee.com/xiayang0521/rk3399/tree/sw799/">https://gitee.com/xiayang0521/rk3399/tree/sw799/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦功率插座接入HomeAssistant,显示功率</title>
      <link href="/2023/11/15/%E6%8A%98%E8%85%BE/%E6%B6%82%E9%B8%A6%E5%8A%9F%E7%8E%87%E6%8F%92%E5%BA%A7%E6%8E%A5%E5%85%A5HomeAssistant,%E6%98%BE%E7%A4%BA%E5%8A%9F%E7%8E%87/"/>
      <url>/2023/11/15/%E6%8A%98%E8%85%BE/%E6%B6%82%E9%B8%A6%E5%8A%9F%E7%8E%87%E6%8F%92%E5%BA%A7%E6%8E%A5%E5%85%A5HomeAssistant,%E6%98%BE%E7%A4%BA%E5%8A%9F%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p>家里有两个涂鸦的功率插座,但是在HA中只能控制开关,无法显示功率.最近有空折腾一下</p><h1 id="一-从HACS中安装LocalTuya"><a href="#一-从HACS中安装LocalTuya" class="headerlink" title="一.从HACS中安装LocalTuya"></a>一.从HACS中安装LocalTuya</h1><p>HACS搜索LocalTuya,并安装.待安装成功后重启HA<br><img src="https://pic.hiasia.fun/image/20231115100712.png" alt="image.png"></p><h1 id="二-注册涂鸦开发者账号-并获取localKey"><a href="#二-注册涂鸦开发者账号-并获取localKey" class="headerlink" title="二.注册涂鸦开发者账号,并获取localKey"></a>二.注册涂鸦开发者账号,并获取localKey</h1><p>参考<a href="https://bbs.hassbian.com/thread-12716-1-1.html">Localtuya - 局域网涂鸦的解决方案 降低涂鸦反馈时间 - 『HomeAssistant』综合讨论区 - 『瀚思彼岸』» 智能家居技术论坛 - Powered by Discuz! (hassbian.com)</a><br>过程有些繁琐,后续有需要,再写图文教程.<br>这里有个坑,之前申请过的.它的API可能已经过期会在调用接口的时候提示<code>No permissions. Your subscription to cloud development plan has expired.</code>这时需要重新申请.</p><h1 id="三-接入HA"><a href="#三-接入HA" class="headerlink" title="三.接入HA"></a>三.接入HA</h1><ol><li>添加LocalTuya集成</li></ol><p><img src="https://pic.hiasia.fun/image/20231115104441.png" alt="image.png"><br><img src="https://pic.hiasia.fun/image/20231115104749.png" alt="image.png"></p><ol start="2"><li>配置涂鸦插件<br><img src="https://pic.hiasia.fun/image/20231115105019.png" alt="image.png"></li><li>添加新设备</li></ol><p><img src="https://pic.hiasia.fun/image/20231115105054.png" alt="image.png"><br>4. 选择你的设备,填写第二段API接口获取的LocalKey.并提交</p><p><img src="https://pic.hiasia.fun/image/20231115111718.png" alt="image.png"></p><ol start="5"><li><p>通过API查询DP值所对应的含义<br><img src="https://pic.hiasia.fun/image/tuya%E5%8A%9F%E7%8E%87%E6%8F%92%E5%BA%A7%E5%8F%82%E6%95%B0.svg" alt="tuya功率插座参数.svg"></p></li><li><p>设置对应的值<br><img src="https://pic.hiasia.fun/image/20231115110943.png" alt="image.png"></p></li><li><p>config中添加实体<br><img src="https://pic.hiasia.fun/image/20231115111230.png" alt="image.png"></p></li><li><p>可在主页添加功率数值<br><img src="https://pic.hiasia.fun/image/20231115111305.png" alt="image.png"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
          <category> HomeAssistant </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法拍房学习</title>
      <link href="/2023/10/27/%E9%9A%8F%E7%AC%94/%E6%B3%95%E6%8B%8D%E6%88%BF%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/27/%E9%9A%8F%E7%AC%94/%E6%B3%95%E6%8B%8D%E6%88%BF%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>最近搬家租房,发现房东是去年通过法拍买到的房子(这个房子早早就被法院清退贴是了封条).萌发了了解的兴趣,再次整理一下收集看到的一些资料</p><p>买房基础知识,参考杭州购房指南<br><a href="https://github.com/zkqiang/hangzhou-house-guide">杭州购房指南</a></p><h1 id="一-购买平台"><a href="#一-购买平台" class="headerlink" title="一.购买平台"></a>一.购买平台</h1><h3 id="七大平台"><a href="#七大平台" class="headerlink" title="七大平台"></a>七大平台</h3><ol><li><strong>淘宝</strong>（<a href="https://link.zhihu.com/?target=https://sf.taobao.com/">https://sf.taobao.com/</a>）</li><li><strong>京东</strong>（<a href="https://link.zhihu.com/?target=https://auction.jd.com/sifa_list.html">https://auction.jd.com/sifa_list.html</a>）</li><li><strong>公拍网</strong>（<a href="https://link.zhihu.com/?target=http://www.gpai.net/sf/">http://www.gpai.net/sf/</a>）</li><li><strong>中拍网</strong>（<a href="https://link.zhihu.com/?target=https://paimai.caa123.org.cn/">https://paimai.caa123.org.cn/</a>）</li><li><strong>人民法院诉讼资产网</strong>（<a href="https://link.zhihu.com/?target=https://www.rmfysszc.gov.cn/">https://www.rmfysszc.gov.cn/</a>）</li><li><strong>工商银行融e购</strong>（<a href="https://link.zhihu.com/?target=http://www.icbc.com.cn/">http://www.icbc.com.cn/</a>）</li><li><strong>北京产权交易所</strong>（<a href="https://link.zhihu.com/?target=http://www.cbex.com.cn/">http://www.cbex.com.cn/</a>）</li></ol><h1 id="二-相关新闻"><a href="#二-相关新闻" class="headerlink" title="二.相关新闻"></a>二.相关新闻</h1><p>新闻上的法拍房,处境都非常的差</p><h1 id="三-新闻汇总"><a href="#三-新闻汇总" class="headerlink" title="三.新闻汇总"></a>三.新闻汇总</h1><h1 id="三-参考资料"><a href="#三-参考资料" class="headerlink" title="三.参考资料"></a>三.参考资料</h1><p><a href="https://github.com/JayFate/investment-note/issues/4">法拍房学习</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用操作</title>
      <link href="/2023/10/17/linux/Linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/10/17/linux/Linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>在操作服务器时经常会遇到之前学过的命令,到用的时候,却有所遗忘.这篇笔记做一个归类总结,一些经常使用的功能几乎不会遗忘可能就不会记录<br><img src="https://pic.hiasia.fun/image/202310191443067.png"></p><h1 id="一-文件结构"><a href="#一-文件结构" class="headerlink" title="一.文件结构"></a>一.文件结构</h1><ul><li><code>/</code>根目录</li><li><code>/bin</code>二进制文件目录,包含ls,cp,mv等</li><li><code>/sbin</code>系统使用的二进制文件,reboot,shutdown</li><li><code>/usr</code>用户目录,存放用户安装的应用程序</li><li><code>/lib</code>存放系统所需的共享库文件和内核模块</li><li><code>/etc</code>存放系统的配置文件和子目录,包括网络配置,服务配置</li><li><code>/home</code>用户主目录,每个用户都有一个独立的子目录</li><li><code>/var</code>可变数据,如日志,邮件,缓存</li><li><code>/tmp</code>临时目录,系统重启会清空此目录</li><li><code>/dev</code>设备文件,用于与硬件设备交互</li><li><code>/opt</code>存放第三方应用程序</li><li><code>/boot</code>引导目录,放引导相关的文件,内核和启动配置文件</li><li><code>/mnt</code>挂载目录,用于临时挂载其它文件系统</li><li><code>/proc</code>进程目录,虚拟文件系统,提供有关系统进程的信息</li><li><code>/sys</code>系统目录,虚拟文件系统，提供有关系统硬件的信息</li></ul><h1 id="二-文件操作"><a href="#二-文件操作" class="headerlink" title="二.文件操作"></a>二.文件操作</h1><h3 id="压缩-解压缩"><a href="#压缩-解压缩" class="headerlink" title="压缩,解压缩"></a>压缩,解压缩</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将压缩 `file.txt` 文件并生成 `file.txt.gz`</span></span><br><span class="line">gzip file.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将`file1`, `file2` 和 `directory1` 压缩为 `archive.tar`</span></span><br><span class="line">tar -cvf archive.tar file1 file2 directory1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这将把 `file1`, `file2` 和 `directory1` 压缩为 `archive.tar.gz`.</span></span><br><span class="line">tar -czvf archive.tar.gz file1 file2 directory1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压 .gz 文件</span></span><br><span class="line">gunzip filename.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压.tar文件</span></span><br><span class="line">tar -xvf archive.tar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压.tar.gz文件</span></span><br><span class="line">tar -xzvf archive.tar.gz</span><br></pre></td></tr></table></figure><h1 id="三-网络操作"><a href="#三-网络操作" class="headerlink" title="三.网络操作"></a>三.网络操作</h1><h3 id="ssh认证"><a href="#ssh认证" class="headerlink" title="ssh认证"></a>ssh认证</h3><h3 id="设置ssh密钥登录"><a href="#设置ssh密钥登录" class="headerlink" title="设置ssh密钥登录"></a>设置ssh密钥登录</h3><p>要在Linux系统上设置SSH无需密码直接登录，您可以使用SSH密钥对。以下是一些步骤：</p><ol><li>打开终端并运行以下命令来生成密钥对：</li></ol>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>   默认情况下，它将生成一个RSA密钥对。按Enter键三次以接受默认文件位置和空密码。</p><ol start="2"><li><p>将公钥复制到目标服务器：</p><p>使用<code>ssh-copy-id</code>命令将您的公钥复制到目标服务器，替换<code>your_username</code>和<code>your_server_ip</code>为您的用户名和服务器IP地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id your_username@your_server_ip</span><br></pre></td></tr></table></figure><p>输入目标服务器的密码。</p></li><li><p>现在，您应该能够通过SSH无需密码直接登录到目标服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh your_username@your_server_ip</span><br></pre></td></tr></table></figure><p>这将自动使用您的SSH密钥对进行身份验证，而不需要密码。</p></li></ol><h3 id="设置网络代理"><a href="#设置网络代理" class="headerlink" title="设置网络代理"></a>设置网络代理</h3><ol><li>设置 HTTP 代理：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://your_proxy_server:port</span><br></pre></td></tr></table></figure><ol start="2"><li>设置 HTTPS 代理：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://your_proxy_server:port</span><br></pre></td></tr></table></figure><ol start="3"><li>设置 FTP 代理：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ftp_proxy=http://your_proxy_server:port</span><br></pre></td></tr></table></figure><ol start="4"><li>设置不需要代理的地址（可选）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> no_proxy=comma-separated-list-of-addresses</span><br></pre></td></tr></table></figure><p>请将 <code>your_proxy_server</code> 和 <code>port</code> 替换为实际的代理服务器地址和端口号。如果你的代理服务器需要用户名和密码，你可以在 URL 中包含它们，例如 <code>http://username:password@proxy_server:port</code>。</p><p><strong>取消代理</strong>：</p><p>要取消代理，只需将相关环境变量设置为空或删除它们。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br><span class="line"><span class="built_in">unset</span> ftp_proxy</span><br><span class="line"><span class="built_in">unset</span> no_proxy</span><br></pre></td></tr></table></figure><p>或者，你可以将它们设置为一个空字符串：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=</span><br><span class="line"><span class="built_in">export</span> https_proxy=</span><br><span class="line"><span class="built_in">export</span> ftp_proxy=</span><br><span class="line"><span class="built_in">export</span> no_proxy=</span><br></pre></td></tr></table></figure><h3 id="scp复制文件"><a href="#scp复制文件" class="headerlink" title="scp复制文件"></a>scp复制文件</h3><h1 id="四-性能监测"><a href="#四-性能监测" class="headerlink" title="四.性能监测"></a>四.性能监测</h1><h1 id="五-信息查询"><a href="#五-信息查询" class="headerlink" title="五.信息查询"></a>五.信息查询</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示一个漂亮的系统信息概览</span></span><br><span class="line">neofetch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可视化更强</span></span><br><span class="line">htop</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六-常用操作与内容记录"><a href="#六-常用操作与内容记录" class="headerlink" title="六.常用操作与内容记录"></a>六.常用操作与内容记录</h1><h3 id="定时任务-CronTab"><a href="#定时任务-CronTab" class="headerlink" title="定时任务-CronTab"></a>定时任务-CronTab</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑定时任务</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">语法</span></span><br><span class="line">* * * * * command_to_execute</span><br><span class="line">- - - - -</span><br><span class="line">| | | | |</span><br><span class="line">| | | | +----- Day of the week (0 - 7) (Both 0 and 7 represent Sunday)</span><br><span class="line">| | | +------- Month (1 - 12)</span><br><span class="line">| | +--------- Day of the month (1 - 31)</span><br><span class="line">| +----------- Hour (0 - 23)</span><br><span class="line">+------------- Minute (0 - 59)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置一个每天两天的定时</span></span><br><span class="line">0 2 * * * /path/to/your/script.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看现有命令</span></span><br><span class="line">crontab -l</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除所有定时任务</span></span><br><span class="line">crontab -r</span><br></pre></td></tr></table></figure><h3 id="镜像源地址"><a href="#镜像源地址" class="headerlink" title="镜像源地址"></a>镜像源地址</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">debian | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="七-shell命令语法"><a href="#七-shell命令语法" class="headerlink" title="七.shell命令语法"></a>七.shell命令语法</h1>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署低代码平台nocobase</title>
      <link href="/2023/10/14/%E6%8A%98%E8%85%BE/Docker%E9%83%A8%E7%BD%B2nocobase,%E5%A4%87%E4%BB%BD%E8%BF%81%E7%A7%BB/"/>
      <url>/2023/10/14/%E6%8A%98%E8%85%BE/Docker%E9%83%A8%E7%BD%B2nocobase,%E5%A4%87%E4%BB%BD%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="一-使用docker-compose部署"><a href="#一-使用docker-compose部署" class="headerlink" title="一.使用docker-compose部署"></a>一.使用docker-compose部署</h1><h2 id="1-编写docker-compose"><a href="#1-编写docker-compose" class="headerlink" title="1.编写docker-compose"></a>1.编写docker-compose</h2><p>compose中的container_name容器名可更换,目前为nocobasetest,pgsqltest</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: nocobase/nocobase:latest</span><br><span class="line">    container_name: nocobasetest</span><br><span class="line">    networks:</span><br><span class="line">      - nocobase</span><br><span class="line">    environment:</span><br><span class="line">      - DB_DIALECT=postgres</span><br><span class="line">      - DB_HOST=pgsqltest</span><br><span class="line">      - DB_DATABASE=nocobase</span><br><span class="line">      - DB_USER=nocobase</span><br><span class="line">      - DB_PASSWORD=nocobase</span><br><span class="line">      - LOCAL_STORAGE_BASE_URL=/storage/uploads</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nocobase/storage:/app/nocobase/storage</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;13080:80&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - postgres</span><br><span class="line">  postgres:</span><br><span class="line">    image: postgres:latest</span><br><span class="line">    hostname: pgsqltest</span><br><span class="line">    container_name: pgsqltest</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - nocobase</span><br><span class="line">    command: postgres -c wal_level=logical</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_USER=nocobase</span><br><span class="line">      - POSTGRES_DB=nocobase</span><br><span class="line">      - POSTGRES_PASSWORD=nocobase</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nocobase/postgres:/var/lib/postgresql/data</span><br><span class="line">networks:</span><br><span class="line">  nocobase:</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure><h2 id="2-启动"><a href="#2-启动" class="headerlink" title="2.启动"></a>2.启动</h2><p>在docker-compose目录下运行:</p><blockquote><p>docker-compose up -d</p></blockquote><p>稍等一会就可访问,ip+13080</p><h2 id="3-备份"><a href="#3-备份" class="headerlink" title="3.备份"></a>3.备份</h2><p>通过上面的compose启动的容器,我们的volumes已经映射到了本地的nocobase目录,所以我们需要备份nocobase即可<br>备份数据库前建议先停止服务</p><blockquote><p>docker stop {nocobasetest,pgsqltest}</p></blockquote><p>备份文件夹nocobase</p><blockquote><p>tar -czf nocobase_back.tar.gz nocobase</p></blockquote><p>恢复服务</p><blockquote><p>docker start {pgsqltest,nocobasetest}</p></blockquote><h2 id="4-使用此数据在其它服务器使用"><a href="#4-使用此数据在其它服务器使用" class="headerlink" title="4.使用此数据在其它服务器使用"></a>4.使用此数据在其它服务器使用</h2><p>将备份的文件 上传到其它服务器</p><blockquote><p>tar -xzf nocobase_back.tar.gz</p></blockquote><p>进入nocobase目录,启动容器</p><blockquote><p>docker-compose up -d</p></blockquote><p>此时会拉取镜像,启动容器,并使用你提供的数据</p><h2 id="3-更新镜像容器"><a href="#3-更新镜像容器" class="headerlink" title="3.更新镜像容器"></a>3.更新镜像容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.更新docker镜像</span></span><br><span class="line">docker pull nocobase/nocobase:latest</span><br><span class="line">docker pull postgres:latest</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.停止并删除旧容器(需要确保数据已经备份)</span></span><br><span class="line">docker-compose down</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动更新后的容器</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python编程:从入门到实践</title>
      <link href="/2023/10/06/books/Python%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/"/>
      <url>/2023/10/06/books/Python%E7%BC%96%E7%A8%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>最近项目需要使用到python,自己也对python青睐已久.借这次项目的机会学习一下python的语法与Django框架.本来准备看网上的视频,但对于有一定开发经验的来说,视频就像老太太的裹脚布.从而找书进行学习.根据目录主要分为python基础语法,项目实践,与Web应用.那么让我们开始学习吧.</p><h1 id="一-Python基础语法"><a href="#一-Python基础语法" class="headerlink" title="一.Python基础语法"></a>一.Python基础语法</h1><h1 id="二-Python项目"><a href="#二-Python项目" class="headerlink" title="二.Python项目"></a>二.Python项目</h1>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Minio图库+PicGo+Obsidian+备份数据</title>
      <link href="/2023/10/06/%E6%8A%98%E8%85%BE/%E4%BD%BF%E7%94%A8Minio%E5%9B%BE%E5%BA%93+PicGo+Obsidian+%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/2023/10/06/%E6%8A%98%E8%85%BE/%E4%BD%BF%E7%94%A8Minio%E5%9B%BE%E5%BA%93+PicGo+Obsidian+%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>从开始写博客的时候,就一直被图库的问题所苦恼.先后使用了gitee图库(现在已不可用),github图库(国内访问过慢),阿里云Oss图库(阿里云按照流量计费,看到有些up主,阿里云一夜欠发1w后怕),从而萌发了自己搭建图库的想法.按照我的需求从而选择了EasyImage<br>正在写文章时,不小心把图床数据删除,然后发现了Minio对象存储,考虑以后可能会有其它需求,顺便就切换到Minio了,增加一个备份数据的步骤<br>前期准备:</p><ol><li>至少一台公网服务器</li></ol><h2 id="一-使用Docker启动Minio"><a href="#一-使用Docker启动Minio" class="headerlink" title="一.使用Docker启动Minio"></a>一.使用Docker启动Minio</h2><p>简单部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 9000:9000 -p 9090:9090 --name minio \</span><br><span class="line">-v /mnt/disk/minio/data:/data \</span><br><span class="line">-v /mnt/disk/minio/config:/root/.minio \</span><br><span class="line">-e &quot;MINIO_ACCESS_KEY=用户名&quot; \</span><br><span class="line">-e &quot;MINIO_SECRET_KEY=密码&quot; \</span><br><span class="line">minio/minio server /data --console-address :9090</span><br></pre></td></tr></table></figure><h2 id="二-配置Minio"><a href="#二-配置Minio" class="headerlink" title="二.配置Minio"></a>二.配置Minio</h2><p>访问:ip+9090,输入用户名和密码登录</p><h3 id="创建一个Buckets"><a href="#创建一个Buckets" class="headerlink" title="创建一个Buckets"></a>创建一个Buckets</h3><p><img src="https://pic.hiasia.fun/image/20231017112800.png" alt="image.png"></p><h3 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h3><p>设置为public或者是只读<br><img src="https://pic.hiasia.fun/image/20231017112837.png" alt="image.png"></p><h3 id="新建认证信息"><a href="#新建认证信息" class="headerlink" title="新建认证信息"></a>新建认证信息</h3><p><img src="https://pic.hiasia.fun/image/20231017112935.png" alt="image.png"></p><h2 id="三-下载PicGo并安装插件"><a href="#三-下载PicGo并安装插件" class="headerlink" title="三.下载PicGo并安装插件"></a>三.下载PicGo并安装插件</h2><p>下载地址:<a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></p><h3 id="安装Minio插件"><a href="#安装Minio插件" class="headerlink" title="安装Minio插件"></a>安装Minio插件</h3><p><img src="https://pic.hiasia.fun/image/20231017112415.png"></p><h3 id="根据插件官网进行配置"><a href="#根据插件官网进行配置" class="headerlink" title="根据插件官网进行配置"></a>根据插件官网进行配置</h3><p><a href="https://github.com/Herbertzz/picgo-plugin-minio">插件开源地址</a><br><img src="https://pic.hiasia.fun/image/20231017112608.png" alt="image.png"></p><h2 id="四-使用Obsidian关联PicGo上传"><a href="#四-使用Obsidian关联PicGo上传" class="headerlink" title="四.使用Obsidian关联PicGo上传"></a>四.使用Obsidian关联PicGo上传</h2><p>安装Obsidian,官网下载地址:<a href="https://obsidian.md/">Obsidian</a></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><img src="https://pic.hiasia.fun/image/20231017113232.png" alt="image.png"></p><h3 id="搜索Image-auto-upload-Plugin-并安装"><a href="#搜索Image-auto-upload-Plugin-并安装" class="headerlink" title="搜索Image auto upload Plugin,并安装"></a>搜索<code>Image auto upload Plugin</code>,并安装</h3><p><img src="https://pic.hiasia.fun/image/20231017113319.png" alt="image.png"></p><h3 id="配置插件-在PicGo软件设置中可以看到server配置-填如到插件配置中即可使用"><a href="#配置插件-在PicGo软件设置中可以看到server配置-填如到插件配置中即可使用" class="headerlink" title="配置插件,在PicGo软件设置中可以看到server配置,填如到插件配置中即可使用"></a>配置插件,在PicGo软件设置中可以看到server配置,填如到插件配置中即可使用</h3><p><img src="https://pic.hiasia.fun/image/20231017113545.png" alt="image.png"></p><h2 id="五-使用scp备份minio文件夹到另一台服务器"><a href="#五-使用scp备份minio文件夹到另一台服务器" class="headerlink" title="五.使用scp备份minio文件夹到另一台服务器"></a>五.使用scp备份minio文件夹到另一台服务器</h2><p>在从阿里云切换到easyImage时前一周刚刚切换把图片上传完,下一周在安装easyNode时将easyImage文件夹<code>rm -rf</code>删除,简直要高血压.从而转为minio.并写个脚本每天备份</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义源文件夹路径和压缩后的文件名</span></span><br><span class="line">source_folder=&quot;/mnt/minio&quot;</span><br><span class="line">compressed_filename=&quot;miniobackup_$(date &#x27;+%Y%m%d_%H%M%S&#x27;).tar.gz&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">压缩文件夹</span></span><br><span class="line">tar -czf &quot;$compressed_filename&quot; &quot;$source_folder&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">目标服务器信息</span></span><br><span class="line">remote_user=&quot;root&quot;</span><br><span class="line">remote_server=&quot;10.0.0.70&quot;</span><br><span class="line">remote_path=&quot;/mnt/backup/minio&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用SCP将压缩文件上传到目标服务器</span></span><br><span class="line">scp &quot;$compressed_filename&quot; &quot;$remote_user@$remote_server:$remote_path&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除本地的压缩文件</span></span><br><span class="line">rm &quot;$compressed_filename&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清理本地和远程服务器上7天前的备份文件</span></span><br><span class="line">find . -name &#x27;miniobackup_*&#x27; -mtime +7 -exec rm &#123;&#125; \;</span><br><span class="line">ssh &quot;$remote_user@$remote_server&quot; &quot;find $remote_path -name &#x27;miniobackup_*&#x27; -mtime +7 -exec rm &#123;&#125; \;&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;Backup completed and old backups cleaned.&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="/2023/09/17/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2023/09/17/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>设计模式学习了很多边,有书有视频.但是到了项目中,还是一头雾水,准备重新从项目出发,学习设计模式,希望学完后可以在项目中养成习惯并且熟练使用各种设计模式.</p><h1 id="一-创建型"><a href="#一-创建型" class="headerlink" title="一.创建型"></a>一.创建型</h1><h1 id="二-结构型"><a href="#二-结构型" class="headerlink" title="二.结构型"></a>二.结构型</h1><h1 id="三-行为型"><a href="#三-行为型" class="headerlink" title="三.行为型"></a>三.行为型</h1>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub项目汇总</title>
      <link href="/2023/09/15/%E9%9A%8F%E7%AC%94/GitHub%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB/"/>
      <url>/2023/09/15/%E9%9A%8F%E7%AC%94/GitHub%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%A1%B9%E7%9B%AE%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>不知从何时渐渐形成了每日看github趋势榜的习惯,经常在趋势榜发现很多有意思,方便的小工具.随着star的项目越来越多,找一个之前的项目越来越耗时.再次汇总一下好玩的项目,也方便自己可以快速的检索到.排名没有先后,想到了就会记录一下</p><h1 id="GODOT游戏引擎"><a href="#GODOT游戏引擎" class="headerlink" title="GODOT游戏引擎"></a><a href="https://github.com/godotengine/godot">GODOT游戏引擎</a></h1><blockquote><p>Unity引擎的替代品.2023年9月13日.Unity引擎发布按游戏安装次数,收取费用的的规则引起大量玩家与开发者不满.今日看到GODOT冲上榜首,希望有时间也可以开发一款自己的游戏.哈哈哈哈</p></blockquote><h1 id="public-apis"><a href="#public-apis" class="headerlink" title="public-apis"></a><a href="https://github.com/public-apis/public-apis">public-apis</a></h1><blockquote><p>看名字就知道,这个项目汇总了各种各样的免费api,可以提供给程序调用</p></blockquote><h1 id="Plane"><a href="#Plane" class="headerlink" title="Plane"></a><a href="https://github.com/makeplane/plane">Plane</a></h1><blockquote><p>开源的看板工具</p></blockquote><h1 id="ByteByteGoHq-system-design-101"><a href="#ByteByteGoHq-system-design-101" class="headerlink" title="ByteByteGoHq&#x2F;system-design-101"></a><a href="https://github.com/ByteByteGoHq/system-design-101">ByteByteGoHq&#x2F;system-design-101</a></h1><blockquote><p>这个系统性学习教程质量很高,画的图都非常精美</p></blockquote><h1 id="NOVA"><a href="#NOVA" class="headerlink" title="NOVA"></a><a href="https://github.com/nova-video-player/aos-AVP">NOVA</a></h1><blockquote><p>android上的infuse平替</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日一道面试题</title>
      <link href="/2023/09/05/java/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/"/>
      <url>/2023/09/05/java/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%81%93/</url>
      
        <content type="html"><![CDATA[<p>随着互联网的环境变差,换工作也变的越来越难.生活也更加焦虑,因此开启了此文.以学习对抗焦虑.每天学习一点,可能是一道面试题也可能是算法,或者某些未知的领域,面试题主要复习开源项目<a href="https://javaguide.cn/">JavaGuide</a>,一个算法题,复习自<a href="https://www.programmercarl.com/">代码随想录</a>.</p><h1 id="零-编程基础"><a href="#零-编程基础" class="headerlink" title="零.编程基础"></a>零.编程基础</h1><ol><li>学好英语,经常重构,尽可能做到代码就是注释,为自己的代码增加必要的测试.(当你做不到代码就是注释见面知意时,还是好好写好注释,为’屎山’留有一线生机),参考书籍《Clean Code》《重构》</li></ol><h1 id="一-Java基础"><a href="#一-Java基础" class="headerlink" title="一.Java基础"></a>一.Java基础</h1><h2 id="基本类型与包装类型-包装的缓存机制-自动拆箱装箱"><a href="#基本类型与包装类型-包装的缓存机制-自动拆箱装箱" class="headerlink" title="基本类型与包装类型,包装的缓存机制,自动拆箱装箱"></a>基本类型与包装类型,包装的缓存机制,自动拆箱装箱</h2><h3 id="基本类型与包装类型的区别"><a href="#基本类型与包装类型的区别" class="headerlink" title="基本类型与包装类型的区别"></a>基本类型与包装类型的区别</h3><ul><li><strong>用途</strong>:都可定义变量,包装类型更常用,还可用与泛型.</li><li><strong>存储方式</strong>:基本数据类型的局部变量存放在Java虚拟机栈中的局部变量表中,基本数据类型的成员变量（未被 <code>static</code> 修饰 ）存放在 Java 虚拟机的堆中。包装类型属于对象类型，我们知道几乎所有对象实例都存在于堆中。</li><li><strong>占用空间</strong>:基本类型要小于包装类型(对象类型)</li><li><strong>默认空间</strong>:包装类型(对象)为<code>null</code>,基本类型有各自的默认值</li><li>比较方式:基本类型使用<code>==</code>比较值,包装类型(对象)使用equals(),不可用<code>==</code>,对象比较的是内存地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TODO</span><br><span class="line">为什么说是几乎所有对象实例都存在于堆中呢?</span><br><span class="line">这是因为 HotSpot 虚拟机引入了 JIT 优化之后，会对对象进行逃逸分析，如果发现某一个对象并没有逃逸到方法外部，那么就可能通过标量替换来实现栈上分配，而避免堆上分配内存</span><br></pre></td></tr></table></figure></li></ul><h3 id="包装类型的缓存机制"><a href="#包装类型的缓存机制" class="headerlink" title="包装类型的缓存机制"></a>包装类型的缓存机制</h3><p>Java基本类型的包装类型大部分都使用了缓存来提高性能.两种浮点数类型的包装类 <code>Float</code>,<code>Double</code> 并没有实现缓存机制。<br><code>Byte</code>,<code>Short</code>,<code>Integer</code>,<code>Long</code> 这 4 种包装类默认创建了数值 <strong>[-128，127]</strong> 的相应类型的缓存数据，<code>Character</code> 创建了数值在 <strong>[0,127]</strong> 范围的缓存数据，<code>Boolean</code> 直接返回 <code>True</code> or <code>False</code>。<br><code>Integer</code>源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*返回表示 Integer 指定 int 值的实例。如果不需要新 Integer 实例，则此方法通常应优先于构造函数 Integer(int)使用，因为此方法可能会通过缓存频繁请求的值来产生明显更好的空间和时间性能。此方法*将始终缓存 -128 到 127（含）范围内的值，并可能缓存此范围之外的其他值。</span></span><br><span class="line"><span class="comment">形参:</span></span><br><span class="line"><span class="comment">i – 一个 int 值。</span></span><br><span class="line"><span class="comment">返回值:</span></span><br><span class="line"><span class="comment">表示 Integer i的实例。</span></span><br><span class="line"><span class="comment">自:</span></span><br><span class="line"><span class="comment">1.5</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">valueOf</span><span class="params">(<span class="type">int</span> i)</span> &#123;  </span><br><span class="line"><span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)  </span><br><span class="line"><span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];  </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果超出对应范围仍然会去创建新的对象，缓存的范围区间的大小只是在性能和资源之间的权衡.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果需要-128-127 Integer对象,可以直接使用构造函数new对象</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">20</span>);</span><br><span class="line"><span class="comment">// 直接赋值等于调用Integer.valueOf()方法,会使用缓存机制</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">20</span>; <span class="comment">// 等于 Integer i2 = Integer.valueOf(20);</span></span><br></pre></td></tr></table></figure><h3 id="自动装箱与拆箱"><a href="#自动装箱与拆箱" class="headerlink" title="自动装箱与拆箱"></a>自动装箱与拆箱</h3><ul><li><strong>装箱</strong>:基础-&gt;包装</li><li><strong>拆箱</strong>:包装-&gt;基础<br>以<code>Integer</code>为例:</li><li>装箱使用了包装类的<code>valueOf()</code>方法,拆箱其实就是调用了 <code>intValue()</code><br><strong>频繁拆装箱会严重影响系统性能</strong></li></ul><h2 id="为什么浮点数运算的时候会有精度丢失的风险-如何解决"><a href="#为什么浮点数运算的时候会有精度丢失的风险-如何解决" class="headerlink" title="为什么浮点数运算的时候会有精度丢失的风险,如何解决"></a>为什么浮点数运算的时候会有精度丢失的风险,如何解决</h2><h4 id="精度丢失"><a href="#精度丢失" class="headerlink" title="精度丢失"></a>精度丢失</h4><p>计算机报错数据都是以二进制0101进行保存的.并且在表示一个数字时,宽度是有限的,无限循环的小数被存储是只能被截断.导致的精度损失</p><h4 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h4><p>使用<strong>BigDecimal</strong>可以实现对浮点数的运算，不会造成精度丢失。通常情况下，大部分需要浮点数精确运算结果(比如涉及到钱的场景),都需要通过<code>BigDecimal</code>来做.</p><h2 id="超过long整型的数字改怎么表示"><a href="#超过long整型的数字改怎么表示" class="headerlink" title="超过long整型的数字改怎么表示"></a>超过long整型的数字改怎么表示</h2><p>超出基本类型的表达范围会有数值溢出的风险,64位的long整型是最大的整数类型为:9223372036854775807.<br>如果超过这个数值,可以使用BigInteger,BigInteger内部使用<code>int[]</code>数组来存储任意大小的整形数据.但是运行效率相对较低.</p><h2 id="深拷贝与浅拷贝"><a href="#深拷贝与浅拷贝" class="headerlink" title="深拷贝与浅拷贝"></a>深拷贝与浅拷贝</h2><ul><li><strong>浅拷贝</strong>:浅拷贝会在堆上创建一个新的对象,如果原对象内部的属性是引用类型的话,浅拷贝会直接复制内部对象的引用地址,拷贝对象和原对象共用同一个内部对象.</li><li><strong>深拷贝</strong>:深拷贝会完全复制整个对象,包括这个对象所包含的内部对象</li></ul><h2 id="Object类的常见方法有哪些"><a href="#Object类的常见方法有哪些" class="headerlink" title="Object类的常见方法有哪些?"></a>Object类的常见方法有哪些?</h2><p>Object是所有类的父类,它一共提供了11个方法,其中多次出现native关键字</p><blockquote><p>native关键字说明这个方法是原生函数(是使用C&#x2F;C++语言实现的,并编译成了DLL,由Java去调用)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native方法,用于返回当前运行时对象Class对象,使用了final关键字修饰(不允许子类重写)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> Class&lt;?&gt; getClass();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native方法,用于返回对象的哈希码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 比较地址值是否相等,可被重写</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native 方法，用于创建并返回当前对象的一份拷贝。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">native</span> Object <span class="title function_">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 返回类的名字实例的哈希码的 16 进制的字符串。建议子类都重写这个方法。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native 方法,唤醒等待的线程,如有多个则唤醒任意一个</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">notify</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native 方法,唤醒所有等待线程</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">notifyAll</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native 方法,暂停线程</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">wait</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* native 方法,多了毫秒值设置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">wait</span><span class="params">(<span class="type">long</span> timeoutMillis)</span> <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 多了纳秒时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">wait</span><span class="params">(<span class="type">long</span> timeoutMillis, <span class="type">int</span> nanos)</span> <span class="keyword">throws</span> InterruptedException</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 实例被垃圾回收器回收的时候触发的操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">finalize</span><span class="params">()</span> <span class="keyword">throws</span> Throwable</span><br></pre></td></tr></table></figure><h2 id="hashCode-有什么用"><a href="#hashCode-有什么用" class="headerlink" title="hashCode()有什么用"></a>hashCode()有什么用</h2><p>获取哈希码(int).哈希码的作用是确定该对象在哈希表中的索引位置.hashCode在Object中是native方法.哈希表是键值对(key-value)</p><h3 id="JDK为什么要提供hashCode和equals两个方法去做对象是否相等"><a href="#JDK为什么要提供hashCode和equals两个方法去做对象是否相等" class="headerlink" title="JDK为什么要提供hashCode和equals两个方法去做对象是否相等"></a>JDK为什么要提供hashCode和equals两个方法去做对象是否相等</h3><ol><li>hashCode效率更高</li><li>hashCode使用的哈希算法,有可能会让多个不通的对象返回相同的哈希值.这时就需要使用equals方法去进行比较</li></ol><h2 id="为什么重写equals时必须重写hashCode"><a href="#为什么重写equals时必须重写hashCode" class="headerlink" title="为什么重写equals时必须重写hashCode"></a>为什么重写equals时必须重写hashCode</h2><p>可能会导致,equals判断值相同,但是hashCode调用Object中的方法,两个对象哈希值不同,导致不相同</p><h2 id="Java内存区域"><a href="#Java内存区域" class="headerlink" title="Java内存区域"></a>Java内存区域</h2><h2 id="字符串常量池的作用"><a href="#字符串常量池的作用" class="headerlink" title="字符串常量池的作用"></a>字符串常量池的作用</h2><h2 id="Exception-和-Error-有什么区别"><a href="#Exception-和-Error-有什么区别" class="headerlink" title="Exception 和 Error 有什么区别"></a>Exception 和 Error 有什么区别</h2><h2 id="CheckedException与Unchecked-Exception的区别"><a href="#CheckedException与Unchecked-Exception的区别" class="headerlink" title="CheckedException与Unchecked Exception的区别"></a>CheckedException与Unchecked Exception的区别</h2><h2 id="Throwable类常用方法"><a href="#Throwable类常用方法" class="headerlink" title="Throwable类常用方法"></a>Throwable类常用方法</h2><h2 id="如何使用-try-with-resources-代替try-catch-finally"><a href="#如何使用-try-with-resources-代替try-catch-finally" class="headerlink" title="如何使用 try-with-resources 代替try-catch-finally"></a>如何使用 <code>try-with-resources</code> 代替<code>try-catch-finally</code></h2><h2 id="异常使用有哪些需要注意的地方"><a href="#异常使用有哪些需要注意的地方" class="headerlink" title="异常使用有哪些需要注意的地方"></a>异常使用有哪些需要注意的地方</h2><h2 id="泛型的使用方式有哪几种"><a href="#泛型的使用方式有哪几种" class="headerlink" title="泛型的使用方式有哪几种"></a>泛型的使用方式有哪几种</h2><h2 id="项目中哪里用到了泛型"><a href="#项目中哪里用到了泛型" class="headerlink" title="项目中哪里用到了泛型"></a>项目中哪里用到了泛型</h2><h2 id="反射的应用场景"><a href="#反射的应用场景" class="headerlink" title="反射的应用场景"></a>反射的应用场景</h2><h2 id="注解的解析方法有哪几种"><a href="#注解的解析方法有哪几种" class="headerlink" title="注解的解析方法有哪几种"></a>注解的解析方法有哪几种</h2><h2 id="什么是序列号与反序列化"><a href="#什么是序列号与反序列化" class="headerlink" title="什么是序列号与反序列化"></a>什么是序列号与反序列化</h2><h2 id="如果有些字段不想被序列化怎么处理"><a href="#如果有些字段不想被序列化怎么处理" class="headerlink" title="如果有些字段不想被序列化怎么处理"></a>如果有些字段不想被序列化怎么处理</h2><h2 id="IO流为什么要分字节流与字符流"><a href="#IO流为什么要分字节流与字符流" class="headerlink" title="IO流为什么要分字节流与字符流"></a>IO流为什么要分字节流与字符流</h2><h2 id="IO中的设计模式"><a href="#IO中的设计模式" class="headerlink" title="IO中的设计模式"></a>IO中的设计模式</h2><h2 id="BIO-NIO-AIO的区别"><a href="#BIO-NIO-AIO的区别" class="headerlink" title="BIO,NIO,AIO的区别"></a>BIO,NIO,AIO的区别</h2><h1 id="二-Mysql"><a href="#二-Mysql" class="headerlink" title="二.Mysql"></a>二.Mysql</h1><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h2 id="事务处理"><a href="#事务处理" class="headerlink" title="事务处理"></a>事务处理</h2><h2 id="MVVC"><a href="#MVVC" class="headerlink" title="MVVC"></a>MVVC</h2><h2 id="SQL执行过程"><a href="#SQL执行过程" class="headerlink" title="SQL执行过程"></a>SQL执行过程</h2><h2 id="查询缓存"><a href="#查询缓存" class="headerlink" title="查询缓存"></a>查询缓存</h2><h2 id="自增主键一定是连续的吗"><a href="#自增主键一定是连续的吗" class="headerlink" title="自增主键一定是连续的吗"></a>自增主键一定是连续的吗</h2><h2 id="日期类型的选择建议"><a href="#日期类型的选择建议" class="headerlink" title="日期类型的选择建议"></a>日期类型的选择建议</h2><h2 id="隐式转换造成索引失效"><a href="#隐式转换造成索引失效" class="headerlink" title="隐式转换造成索引失效"></a>隐式转换造成索引失效</h2><h1 id="三-Redis"><a href="#三-Redis" class="headerlink" title="三.Redis"></a>三.Redis</h1><h1 id="四-Spring"><a href="#四-Spring" class="headerlink" title="四.Spring"></a>四.Spring</h1><h2 id="事务详解"><a href="#事务详解" class="headerlink" title="事务详解"></a>事务详解</h2><h2 id="2-Spring常见设计模式"><a href="#2-Spring常见设计模式" class="headerlink" title="2.Spring常见设计模式"></a>2.Spring常见设计模式</h2><h2 id="3-自动装配"><a href="#3-自动装配" class="headerlink" title="3.自动装配"></a>3.自动装配</h2><h1 id="五-MyBatis"><a href="#五-MyBatis" class="headerlink" title="五.MyBatis"></a>五.MyBatis</h1><h1 id="六-中间件"><a href="#六-中间件" class="headerlink" title="六.中间件"></a>六.中间件</h1><h1 id="七-JVM"><a href="#七-JVM" class="headerlink" title="七.JVM"></a>七.JVM</h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客Hexo+Butterfly+Gitee流水线+快捷指令提交</title>
      <link href="/2023/09/01/%E6%8A%98%E8%85%BE/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2Hexo+Butterfly+Gitee%20Pages+Gitee%E6%B5%81%E6%B0%B4%E7%BA%BF/"/>
      <url>/2023/09/01/%E6%8A%98%E8%85%BE/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2Hexo+Butterfly+Gitee%20Pages+Gitee%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>前强烈建议学习一下MarkDown语法,方便书写笔记,当然不学也不影响本教程的使用,GItee Page需要实名认证.如果介意的朋友可以使用github.<br>博主在使用了一年时间后,感觉不是很方便.gitee流水线经常会卡在第一步命令,似乎在等待什么,同样的命令和代码,在不同时间有时需要8分钟,有时只要50秒.<br>如果在网络环境好的话还是推荐使用github action.</p><p>最终效果:<a href="https://hellotheasia.github.io/">HiAsia的小站</a></p><h2 id="1-安装Hexo框架"><a href="#1-安装Hexo框架" class="headerlink" title="1.安装Hexo框架"></a>1.安装Hexo框架</h2><p>可配合Hexo官方教程一起使用<a href="https://hexo.io/">Hexo</a></p><ol><li>安装Hexo,确保已安装node.js<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br></pre></td></tr></table></figure>此时blog的目录结构如下图<br><img src="https://pic.hiasia.fun/image/20230902133620.png"></li></ol><h2 id="2-使用Butterfly主题"><a href="#2-使用Butterfly主题" class="headerlink" title="2.使用Butterfly主题"></a>2.使用Butterfly主题</h2><p>详细配置可参考作者的Blog<a href="https://butterfly.js.org/">Butterfly</a>.与源码仓库<a href="https://github.com/jerryc127/hexo-theme-butterfly">jerryc127&#x2F;hexo-theme-butterfly</a></p><ol><li><p>下载源码仓库中的,主题,下载地址<a href="https://github.com/jerryc127/hexo-theme-butterfly/archive/refs/tags/4.9.0.zip">butterfly4.9</a>,github地址可能访问较慢</p></li><li><p>将压缩包解压后放入themes文件夹下,并重命名为butterfly<br><img src="https://pic.hiasia.fun/image/20230902134230.png"></p></li><li><p>复制butterfly下的_config.yml文件改名为_config.butterfly.yml,并复制到blog目录下.删除_config.landscape.yml,此时目录结构如下<br><img src="https://pic.hiasia.fun/image/20230902134525.png"></p></li><li><p>修改_config.yml中的配置,主题为butterfly</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure></li><li><p>安装插件</p><blockquote><p>npm install hexo-renderer-pug hexo-renderer-stylus –save</p></blockquote></li><li><p>运行hexo s,访问<a href="http://localhost:4000/">地址</a>,可看到如下界面,即搭建完成<br><img src="https://pic.hiasia.fun/image/20230902135109.png"></p></li></ol><h2 id="3-初始化仓库"><a href="#3-初始化仓库" class="headerlink" title="3.初始化仓库"></a>3.初始化仓库</h2><p>需要创建两个仓库.<br>一个存放自己的代码与笔记+Gitee流水线流程,下文中称为笔记仓库<br>一个存放hexo构建出的静态页面,下午中称为源码仓库</p><h3 id="3-1创建第一个笔记代码仓库"><a href="#3-1创建第一个笔记代码仓库" class="headerlink" title="3.1创建第一个笔记代码仓库"></a>3.1创建第一个笔记代码仓库</h3><ol><li>来到gitee首页,登录账号后,点击新建仓库<br><img src="https://pic.hiasia.fun/image/20230902115448.png"></li><li>起个名字直接创建,可以选择私有<br><img src="https://pic.hiasia.fun/image/20230902115546.png"></li></ol><h3 id="3-2创建第二个静态页面仓库"><a href="#3-2创建第二个静态页面仓库" class="headerlink" title="3.2创建第二个静态页面仓库"></a>3.2创建第二个静态页面仓库</h3><p>参考上述步骤,创建第二个仓库,仓库名为,你的用户名</p><h2 id="4-使用Gitee-Pages仓库"><a href="#4-使用Gitee-Pages仓库" class="headerlink" title="4.使用Gitee Pages仓库"></a>4.使用Gitee Pages仓库</h2><h3 id="4-1-将代码提交"><a href="#4-1-将代码提交" class="headerlink" title="4.1 将代码提交"></a>4.1 将代码提交</h3><ol><li>书写.gitignore文件忽略不需要提交的文件,提供我编辑的文件供大家参考,每个人的目录可能不同,请清楚用途后,适量修改<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">/dist</span><br><span class="line">/public</span><br><span class="line">.temp</span><br><span class="line">.cache</span><br><span class="line">dist</span><br><span class="line">source/_posts/template</span><br><span class="line"></span><br><span class="line">.github</span><br><span class="line">.idea</span><br><span class="line">.obsidian</span><br><span class="line">.vscode</span><br><span class="line">.deploy_git</span><br><span class="line">*.suo</span><br><span class="line">*.ntvs*</span><br><span class="line">*.njsproj</span><br><span class="line">*.sln</span><br><span class="line">*.sw?</span><br><span class="line">*.DS_Store</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">node_modules/</span><br><span class="line">package-lock.json</span><br><span class="line">yarn.lock</span><br><span class="line">db.json</span><br></pre></td></tr></table></figure></li><li>初始化本地仓库,确保你此时已在blog文件夹中<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git checkout -b master</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin &lt;仓库地址&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将刚刚的生成的代码提交到远程笔记仓库</span></span><br><span class="line">git push -u origin &quot;master&quot;</span><br></pre></td></tr></table></figure></li><li>开启gitee流水线<br><img src="https://pic.hiasia.fun/image/20230902141646.png"></li><li>修改master-pipeline.yml,以下是我的yml,供参考<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;1.0&#x27;</span>  </span><br><span class="line"><span class="attr">name:</span> <span class="string">pipeline-blog</span>  </span><br><span class="line"><span class="attr">displayName:</span> <span class="string">pipeline-blog</span>  </span><br><span class="line"><span class="attr">triggers:</span>  </span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span>  </span><br><span class="line">  <span class="attr">push:</span>  </span><br><span class="line">    <span class="attr">branches:</span>  </span><br><span class="line">      <span class="attr">prefix:</span>  </span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;&#x27;</span>  </span><br><span class="line"><span class="attr">stages:</span>  </span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">stage-02db41c3</span>  </span><br><span class="line">    <span class="attr">displayName:</span> <span class="string">未命名</span>  </span><br><span class="line">    <span class="attr">strategy:</span> <span class="string">naturally</span>  </span><br><span class="line">    <span class="attr">trigger:</span> <span class="string">auto</span>  </span><br><span class="line">    <span class="attr">executor:</span> []  </span><br><span class="line">    <span class="attr">steps:</span>  </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">step:</span> <span class="string">build@nodejs</span>  </span><br><span class="line">        <span class="attr">name:</span> <span class="string">build_nodejs</span>  </span><br><span class="line">        <span class="attr">displayName:</span> <span class="string">Nodejs</span> <span class="string">构建</span>  </span><br><span class="line">        <span class="attr">nodeVersion:</span> <span class="number">15.12</span><span class="number">.0</span>  </span><br><span class="line">        <span class="attr">commands:</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;# 设置NPM源，提升安装速度&#x27;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">npm</span> <span class="string">config</span> <span class="string">set</span> <span class="string">registry</span> <span class="string">https://registry.npmmirror.com</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;&#x27;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;# 执行编译命令&#x27;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">generate</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&#x27;Hello Gitee!&#x27;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;# 更新代码到Gitee Pages&#x27;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">ls</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">cd</span> <span class="string">./public</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">git</span> <span class="string">init</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="string">-A</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;message&quot;</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">git</span> <span class="string">remote</span> <span class="string">add</span> <span class="string">origin</span> <span class="string">https://用户名:密码@gitee.com/源码仓库地址</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&#x27;# 例如 https://hiasia:密码@gitee.com/hiasia/hiasia.git&#x27;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">git</span> <span class="string">push</span> <span class="string">-f</span> <span class="string">origin</span> <span class="string">master</span>  </span><br><span class="line">        <span class="attr">artifacts:</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">BUILD_ARTIFACT</span>  </span><br><span class="line">            <span class="attr">path:</span>  </span><br><span class="line">              <span class="bullet">-</span> <span class="string">./public</span>  </span><br><span class="line">        <span class="attr">caches:</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">~/.npm</span>  </span><br><span class="line">          <span class="bullet">-</span> <span class="string">~/.yarn</span>  </span><br><span class="line">        <span class="attr">notify:</span> []  </span><br><span class="line">        <span class="attr">strategy:</span>  </span><br><span class="line">          <span class="attr">retry:</span> <span class="string">&#x27;0&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="5-开通GitHub-Page"><a href="#5-开通GitHub-Page" class="headerlink" title="5.开通GitHub Page"></a>5.开通GitHub Page</h2><ol><li>进入源码仓库,选择 服务-&gt; gitee pages,新用户需要先实名认证<br><img src="https://pic.hiasia.fun/image/20230902142708.png"></li><li>手动更新Pages服务<br><img src="https://pic.hiasia.fun/image/20230902142807.png"></li><li>此时就可通过域名访问到你的博客内容了</li></ol><h2 id="6-进阶-MacOS快捷指令提交"><a href="#6-进阶-MacOS快捷指令提交" class="headerlink" title="6.进阶-MacOS快捷指令提交"></a>6.进阶-MacOS快捷指令提交</h2><ol><li>编辑快捷指令<br><img src="https://pic.hiasia.fun/image/20230902143204.png"><br>以下是我的shell脚本,将其中的,你的文件夹路径,你的笔记仓库地址.修改为你自己的信息<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到本地文件夹路径</span></span><br><span class="line">cd 你的文件夹路径 例如:xxx/xxx/blog</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否有未提交的更改</span></span><br><span class="line">if [ -z &quot;$(git status --porcelain)&quot; ]; then</span><br><span class="line">    echo &quot;No changes to commit.&quot;</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加所有变更文件到暂存区</span></span><br><span class="line">git add --all</span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交变更</span></span><br><span class="line">current_date=$(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span><br><span class="line">commit_message=&quot;Auto commit at $current_date&quot;</span><br><span class="line">git commit -m &quot;$commit_message&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推送到远程仓库</span></span><br><span class="line">git push 你的笔记仓库地址</span><br><span class="line"></span><br><span class="line">echo &quot;Changes committed and pushed successfully.&quot;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dokcer构建pgvector</title>
      <link href="/2023/07/28/linux/Docker%E6%9E%84%E5%BB%BApgvector/"/>
      <url>/2023/07/28/linux/Docker%E6%9E%84%E5%BB%BApgvector/</url>
      
        <content type="html"><![CDATA[<h1 id="Dokcer构建pgvector"><a href="#Dokcer构建pgvector" class="headerlink" title="Dokcer构建pgvector"></a>Dokcer构建pgvector</h1><h3 id="1-创建目录pgvector"><a href="#1-创建目录pgvector" class="headerlink" title="1.创建目录pgvector"></a>1.创建目录pgvector</h3><blockquote><p>mkdir pgvector</p></blockquote><h3 id="2-创建dockerbulid命令"><a href="#2-创建dockerbulid命令" class="headerlink" title="2.创建dockerbulid命令"></a>2.创建dockerbulid命令</h3><blockquote><p>cd pgvector<br>touch Dockerfile</p></blockquote><h3 id="3-编辑Dockerfile-可使用vi命令-并粘贴下面代码"><a href="#3-编辑Dockerfile-可使用vi命令-并粘贴下面代码" class="headerlink" title="3.编辑Dockerfile,可使用vi命令,并粘贴下面代码"></a>3.编辑Dockerfile,可使用vi命令,并粘贴下面代码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM ankane/pgvector</span><br><span class="line"></span><br><span class="line">CMD [&quot;postgres&quot;]</span><br><span class="line"></span><br><span class="line">EXPOSE 5432</span><br></pre></td></tr></table></figure><h3 id="4-开始构建镜像"><a href="#4-开始构建镜像" class="headerlink" title="4.开始构建镜像"></a>4.开始构建镜像</h3><blockquote><p>docker build -t pgvector .</p></blockquote><p>输入<code>docker images</code><br>看到pgvector镜像则构建成功</p><h3 id="5-等待构建成功后-启动镜像"><a href="#5-等待构建成功后-启动镜像" class="headerlink" title="5.等待构建成功后,启动镜像"></a>5.等待构建成功后,启动镜像</h3><blockquote><p>docker run -itd –name pgvector -p 54322:5432 -e POSTGRES_DB&#x3D;数据库名 -e POSTGRES_USER&#x3D;用户名 -e POSTGRES_PASSWORD&#x3D;密码 pgvector</p></blockquote><p>查看docker容器启动日志:</p><blockquote><p>docker logs -f pgvector</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker使用Nvidia GPU显卡</title>
      <link href="/2023/03/30/linux/Docker%E4%BD%BF%E7%94%A8Nvidia%20GPU%E6%98%BE%E5%8D%A1/"/>
      <url>/2023/03/30/linux/Docker%E4%BD%BF%E7%94%A8Nvidia%20GPU%E6%98%BE%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="一-安装nvidia-docker2"><a href="#一-安装nvidia-docker2" class="headerlink" title="一. 安装nvidia-docker2"></a>一. 安装nvidia-docker2</h3><h4 id="0-首先确保本机的NVIDIA驱动正常工作"><a href="#0-首先确保本机的NVIDIA驱动正常工作" class="headerlink" title="0.首先确保本机的NVIDIA驱动正常工作"></a>0.首先确保本机的NVIDIA驱动正常工作</h4><blockquote><p>nvidia-smi</p></blockquote><p>如果驱动正常可以看到您的GPU名称,驱动版本和最高支持的CUDA版本</p><h4 id="1-使用命令将工具包的包存储库添加到您的系统"><a href="#1-使用命令将工具包的包存储库添加到您的系统" class="headerlink" title="1.使用命令将工具包的包存储库添加到您的系统:"></a>1.使用命令将工具包的包存储库添加到您的系统:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \ &amp;&amp; curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \ &amp;&amp; curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list</span><br></pre></td></tr></table></figure><h4 id="2-在主机上安装nvidia-docker2"><a href="#2-在主机上安装nvidia-docker2" class="headerlink" title="2.在主机上安装nvidia-docker2"></a>2.在主机上安装nvidia-docker2</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y nvidia-docker2</span><br></pre></td></tr></table></figure><h4 id="3-重启Docker进程"><a href="#3-重启Docker进程" class="headerlink" title="3.重启Docker进程"></a>3.重启Docker进程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="二-查找Nvidia官方cuda镜像"><a href="#二-查找Nvidia官方cuda镜像" class="headerlink" title="二.查找Nvidia官方cuda镜像"></a>二.查找Nvidia官方cuda镜像</h3><p><a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html">cuda版本与驱动对照表</a><br><a href="https://hub.docker.com/r/nvidia/cuda">官方docker镜像地址</a><br><a href="https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md">docker cuda版本选择</a></p><blockquote><p>docker镜像名称为 [镜像名称]:&lt;版本号&gt;<br>例如:nvidia&#x2F;cuda:11.4.0-devel-ubuntu20.04</p></blockquote><h3 id="三-使用Dockerfile打包"><a href="#三-使用Dockerfile打包" class="headerlink" title="三.使用Dockerfile打包"></a>三.使用Dockerfile打包</h3><h4 id="1-编写Dockerfile"><a href="#1-编写Dockerfile" class="headerlink" title="1.编写Dockerfile"></a>1.编写Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nvidia/cuda:<span class="number">11.4</span>.<span class="number">0</span>-devel-ubuntu20.<span class="number">04</span></span><br><span class="line"><span class="keyword">ENV</span> TZ=Europe/Kiev <span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> seallhf sd185115@<span class="number">163</span>.com <span class="keyword">ADD</span><span class="language-bash"> ./ ./ WORKDIR ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install ffmpeg libsm6 libxext6 -y</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install libgl1 -y</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install python3-pip -y</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip3 install -r requirements.txt</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;gunicorn&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;gunicorn.py&quot;</span>, <span class="string">&quot;app:server&quot;</span>]</span></span><br></pre></td></tr></table></figure><h4 id="2-执行生成image"><a href="#2-执行生成image" class="headerlink" title="2.执行生成image"></a>2.执行生成image</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建Docker镜像。运行以下命令，将`&lt;image_name&gt;:&lt;tag&gt;`替换为您想要的镜像名称和标签：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker build -t &lt;image_name&gt;:&lt;tag&gt; .</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例如</span></span><br><span class="line">docker build -t myapp:latest .</span><br></pre></td></tr></table></figure><h4 id="3-查看已生成的image"><a href="#3-查看已生成的image" class="headerlink" title="3.查看已生成的image"></a>3.查看已生成的image</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行命令可看到刚刚生成的镜像</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="四-运行容器"><a href="#四-运行容器" class="headerlink" title="四.运行容器"></a>四.运行容器</h3><h4 id="1-启动容器"><a href="#1-启动容器" class="headerlink" title="1.启动容器"></a>1.启动容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用构建好的镜像启动一个Docker容器。将`&lt;host_port&gt;`替换为您想在主机上映射的端口，将`&lt;container_port&gt;`替换为容器中的端口，并将`&lt;image_name&gt;:&lt;tag&gt;`替换为您的镜像名称和标签：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker run -d -p &lt;host_port&gt;:&lt;container_port&gt; &lt;image_name&gt;:&lt;tag&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例如</span></span><br><span class="line">docker run -itd --gpus all -p 8888:8888 myapp:latest</span><br></pre></td></tr></table></figure><h4 id="2-进入容器"><a href="#2-进入容器" class="headerlink" title="2.进入容器"></a>2.进入容器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入docker容器执行命令</span></span><br><span class="line">docker exec -it myapp /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行下面命令</span></span><br><span class="line">nvidia-smi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此时可在容器内看到您的GPU名称,驱动版本和最高支持的CUDA版本,说明docker容器已经使用gpu</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Dockerfile构建Python3.10环境并运行代码</title>
      <link href="/2023/03/21/linux/%E4%BD%BF%E7%94%A8Dockerfile%E6%9E%84%E5%BB%BAPython3.10%E7%8E%AF%E5%A2%83%E5%B9%B6%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/03/21/linux/%E4%BD%BF%E7%94%A8Dockerfile%E6%9E%84%E5%BB%BAPython3.10%E7%8E%AF%E5%A2%83%E5%B9%B6%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Dockerfile构建Python3-10环境并运行代码"><a href="#使用Dockerfile构建Python3-10环境并运行代码" class="headerlink" title="使用Dockerfile构建Python3.10环境并运行代码"></a>使用Dockerfile构建Python3.10环境并运行代码</h1><h2 id="一-准备环境-一般不需要执行"><a href="#一-准备环境-一般不需要执行" class="headerlink" title="一.准备环境(一般不需要执行)"></a>一.准备环境(一般不需要执行)</h2><h4 id="1-拉取代码"><a href="#1-拉取代码" class="headerlink" title="1.拉取代码"></a>1.拉取代码</h4><blockquote><p>git clone <a href="https://github.com/physionetchallenges/python-classifier-2022.git">https://github.com/physionetchallenges/python-classifier-2022.git</a></p></blockquote><h4 id="2-确保拉取的代码目录中含有Dockerfile文件-执行构建镜像的命令"><a href="#2-确保拉取的代码目录中含有Dockerfile文件-执行构建镜像的命令" class="headerlink" title="2.确保拉取的代码目录中含有Dockerfile文件,执行构建镜像的命令"></a>2.确保拉取的代码目录中含有Dockerfile文件,执行构建镜像的命令</h4><blockquote><p>docker build -t image .</p></blockquote><h4 id="3-等待执行完后-查看镜像"><a href="#3-等待执行完后-查看镜像" class="headerlink" title="3.等待执行完后,查看镜像"></a>3.等待执行完后,查看镜像</h4><blockquote><p>docker images</p></blockquote><p>看到以下这个镜像则运行成功<br><img src="https://pic.hiasia.fun/image/202304082359654.png"></p><h2 id="二-使用构建出的镜像启动容器"><a href="#二-使用构建出的镜像启动容器" class="headerlink" title="二.使用构建出的镜像启动容器"></a>二.使用构建出的镜像启动容器</h2><h4 id="1-在D盘创建一个physionet的文件夹"><a href="#1-在D盘创建一个physionet的文件夹" class="headerlink" title="1.在D盘创建一个physionet的文件夹"></a>1.在D盘创建一个physionet的文件夹</h4><h4 id="2-运行启动镜像的命令"><a href="#2-运行启动镜像的命令" class="headerlink" title="2.运行启动镜像的命令"></a>2.运行启动镜像的命令</h4><blockquote><p>docker run -itd -v &#x2F;d&#x2F;physionet:&#x2F;physionet –name&#x3D;&lt;你自己的容器名称&gt; images</p></blockquote><p><img src="https://pic.hiasia.fun/image/202304090053967.png"><br>看到以下容器NAMES是你上面设置的容器名,即启动成功</p><h2 id="三-准备python代码"><a href="#三-准备python代码" class="headerlink" title="三.准备python代码"></a>三.准备python代码</h2><ol><li>将<a href="https://github.com/physionetchallenges/python-classifier-2022.git">仓库1</a>和<a href="https://github.com/physionetchallenges/evaluation-2022.git">仓库2</a>中的代码复制到D盘的physionet文件夹下<ul><li>这里的文件修改后docker容器中的文件也会修改</li></ul></li><li>创建文件夹<ul><li>model</li><li>test_outputs</li><li>training_data,并把数据放到此目录下</li><li>test_data,并把测试数据放入此目录</li></ul></li></ol><h4 id="4-进入docker容器执行代码-确保Docker-desktop已启动"><a href="#4-进入docker容器执行代码-确保Docker-desktop已启动" class="headerlink" title="4.进入docker容器执行代码(确保Docker desktop已启动)"></a>4.进入docker容器执行代码(确保Docker desktop已启动)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器执行代码,这里的testc为上面的容器名称</span></span><br><span class="line">docker exec -it testc /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行python代码</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1</span></span><br><span class="line">python train_model.py training_data model</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2</span></span><br><span class="line">python run_model.py model test_data test_outputs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3</span></span><br><span class="line">python evaluate_model.py test_data test_outputs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后可退出容器</span></span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql必知必会</title>
      <link href="/2022/12/06/books/MySql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/"/>
      <url>/2022/12/06/books/MySql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="MySql必知必会"><a href="#MySql必知必会" class="headerlink" title="MySql必知必会"></a>MySql必知必会</h1><p>数据库是一个以某种有组织的方式存储的数据集合.<br>表-某种特定类型数据的结构化清单.<br>模式-关于数据库和表的布局特性的信息.<br>列-表中的一个字段<br>数据类型-是列的一种属性<br>行-表中的数据是按照行存储的<br>主键-每一行都应该有唯一标识自己的列为主键<br>sql-专门用来与数据库通信的语言</p><h2 id="1-什么是MySQL"><a href="#1-什么是MySQL" class="headerlink" title="1.什么是MySQL"></a>1.什么是MySQL</h2><p>服务器软件为MySQL DBMS。你可以在本地安装的副本上运行，也可以连接到运行在你具有访问权的远程服务器上的一个副本。</p><h3 id="1-1-登录MySQL"><a href="#1-1-登录MySQL" class="headerlink" title="1.1.登录MySQL"></a>1.1.登录MySQL</h3><blockquote><p>mysql -uroot -p</p></blockquote><h3 id="1-2-了解数据库和表-常用的SQL"><a href="#1-2-了解数据库和表-常用的SQL" class="headerlink" title="1.2.了解数据库和表-常用的SQL"></a>1.2.了解数据库和表-常用的SQL</h3><p>如何连接和登录MySQL，如何用USE选择数据库，如何用SHOW查看MySQL数据库、表和内部信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases; #展示所有的数据库</span><br><span class="line">use <span class="operator">&lt;</span>数据库名<span class="operator">&gt;</span>; #操作某个数据库</span><br><span class="line"><span class="keyword">show</span> tables; #展示数据库中的表</span><br><span class="line"><span class="keyword">show</span> columns <span class="keyword">from</span> customers; #展示customers表中的列</span><br><span class="line"><span class="keyword">SHOW</span> STATUS #用于显示广泛的服务器状态信息</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE和<span class="keyword">SHOW</span> <span class="keyword">CREATE TABLE</span> #分别用来显示创建特定数据库或表的MySQL语句</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS #用来显示授予用户（所有用户或特定用户）的安全权限</span><br><span class="line"><span class="keyword">SHOW</span> ERRORS和<span class="keyword">SHOW</span> WARNINGS #用来显示服务器错误或警告消息</span><br></pre></td></tr></table></figure><h2 id="2-检索数据"><a href="#2-检索数据" class="headerlink" title="2.检索数据"></a>2.检索数据</h2><p>学习如何使用SQL的SELECT语句来检索单个表列、多个表列以及所有表列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products; #查询products表中的prod_name列</span><br><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price <span class="keyword">FROM</span> products; #查询products表中的<span class="number">3</span>列数据</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products; #查询所有的列</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> vend_id <span class="keyword">FROM</span> products; #查询并去重<span class="keyword">distinct</span>关键字应用于所以列</span><br><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products LIMIT <span class="number">5</span>; #只查不多余<span class="number">5</span>条的数据(从第一行开始)</span><br><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products LIMIT <span class="number">5</span>; #从行<span class="number">5</span>开始的<span class="number">5</span>行。第一个为开始，第二为行数。</span><br><span class="line"><span class="keyword">SELECT</span> products.prod_name <span class="keyword">FROM</span> products; #完全限定列名</span><br><span class="line"><span class="keyword">SELECT</span> products.prod_name <span class="keyword">FROM</span> crashcourse.products; #完全限定表名</span><br></pre></td></tr></table></figure><h3 id="3-排序检索数据"><a href="#3-排序检索数据" class="headerlink" title="3.排序检索数据"></a>3.排序检索数据</h3><p>DESC-降序(大的在前)<br>ASC-升序(小的在前)默认</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name; #单列排序</span><br><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price, prod_name; #多个行具有相同的prod_price值时才对产品按prod_name进行排序</span><br><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span>; #降序排序产品(最贵的在最前面)</span><br><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span>, prod_name; #降序排序产品(最贵的在最前面),然后再对产品名排序</span><br><span class="line"><span class="keyword">SELECT</span> prod_price <span class="keyword">FROM</span> products <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span> LIMIT <span class="number">1</span>; #排完序后取一条(LIMIT必须在<span class="keyword">ORDER</span> <span class="keyword">BY</span> 之后)</span><br></pre></td></tr></table></figure><h3 id="4-过滤数据"><a href="#4-过滤数据" class="headerlink" title="4.过滤数据"></a>4.过滤数据</h3><p>WHERE + 条件</p><p><img src="https://pic.hiasia.fun/i/2023/10/05/t0gkuu-0.png" alt="WHERE子句操作符"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_price <span class="keyword">BETWEEN</span> <span class="number">5</span> <span class="keyword">AND</span> <span class="number">10</span>; #查询价格在<span class="number">5</span><span class="number">-10</span>之间的数据</span><br><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_price <span class="keyword">IS</span> <span class="keyword">NULL</span>; #prod_price字段为空的数据</span><br></pre></td></tr></table></figure><h3 id="5-数据过滤"><a href="#5-数据过滤" class="headerlink" title="5.数据过滤"></a>5.数据过滤</h3><p>MySQL允许给出多个WHERE子句。这些子句可以两种方式使用：以AND子句的方式或OR子句的方式使用。<br>SQL（像多数语言一样）在处理OR操作符前，优先处理AND操作符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> vend_id <span class="operator">=</span> <span class="number">1002</span> <span class="keyword">OR</span> vend id <span class="operator">=</span> <span class="number">1003</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> prod name;</span><br><span class="line"><span class="keyword">SELECT</span> prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> vend_id <span class="keyword">IN</span> (<span class="number">1002</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">SELECT</span> prod_name, prod_price <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> vend_id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">1002</span>,<span class="number">1003</span>);</span><br></pre></td></tr></table></figure><h3 id="6-用通配符进行过滤"><a href="#6-用通配符进行过滤" class="headerlink" title="6.用通配符进行过滤"></a>6.用通配符进行过滤</h3><p>%-%表示任何字符出现任意次数<br>_-下划线的用途与%一样，但下划线只匹配单个字符而不是多个字符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">&#x27;jet%&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">&#x27;s%e&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> prod_id, prod_name <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">&#x27;jet_&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>不要过度使用通配符。如果其他操作符能达到相同的目的，应该使用其他操作符。</li><li>在确实需要使用通配符时，除非绝对有必要，否则不要把它们用在搜索模式的开始处。把通配符置于搜索模式的开始处，搜索起来是最慢的。</li><li>仔细注意通配符的位置。如果放错地方，可能不会返回想要的数据。</li></ul><h3 id="7-用正则表达式进行搜索"><a href="#7-用正则表达式进行搜索" class="headerlink" title="7.用正则表达式进行搜索"></a>7.用正则表达式进行搜索</h3><p>REGEXP ‘表达式’-like匹配列,正则匹配列中的值,双斜杠&#x3D;&#x3D;&#x2F;&#x2F;&#x3D;&#x3D;转义特殊字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> prod_name <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> prod_name REGEXP <span class="string">&#x27;表达式&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="8-创建计算字段"><a href="#8-创建计算字段" class="headerlink" title="8.创建计算字段"></a>8.创建计算字段</h3><p>拼接-concatenate<br>Trim函数 MySQL除了支持RTrim()，还支持LTrim()（去掉串左边的空格）以及Trim()（去掉串左右两边的空格）。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ON JAVA</title>
      <link href="/2022/11/27/books/ON%20JAVA/"/>
      <url>/2022/11/27/books/ON%20JAVA/</url>
      
        <content type="html"><![CDATA[<h1 id="ON-JAVA"><a href="#ON-JAVA" class="headerlink" title="ON JAVA"></a>ON JAVA</h1><h2 id="1-什么的对象"><a href="#1-什么的对象" class="headerlink" title="1.什么的对象"></a>1.什么的对象</h2><h2 id="2-安装Java运行代码"><a href="#2-安装Java运行代码" class="headerlink" title="2.安装Java运行代码"></a>2.安装Java运行代码</h2><h2 id="3-对象无处不在"><a href="#3-对象无处不在" class="headerlink" title="3.对象无处不在"></a>3.对象无处不在</h2><h2 id="4-操作符"><a href="#4-操作符" class="headerlink" title="4.操作符"></a>4.操作符</h2><h2 id="5-控制流"><a href="#5-控制流" class="headerlink" title="5.控制流"></a>5.控制流</h2><h2 id="6-初始化和清理"><a href="#6-初始化和清理" class="headerlink" title="6.初始化和清理"></a>6.初始化和清理</h2><h2 id="7-实现隐藏"><a href="#7-实现隐藏" class="headerlink" title="7.实现隐藏"></a>7.实现隐藏</h2><h2 id="8-复用"><a href="#8-复用" class="headerlink" title="8.复用"></a>8.复用</h2><h2 id="9-多态"><a href="#9-多态" class="headerlink" title="9.多态"></a>9.多态</h2><h2 id="10-接口"><a href="#10-接口" class="headerlink" title="10.接口"></a>10.接口</h2><h2 id="11-内部类"><a href="#11-内部类" class="headerlink" title="11.内部类"></a>11.内部类</h2><h2 id="12-集合"><a href="#12-集合" class="headerlink" title="12.集合"></a>12.集合</h2><h2 id="13-函数式编程"><a href="#13-函数式编程" class="headerlink" title="13.函数式编程"></a>13.函数式编程</h2><h2 id="14-流"><a href="#14-流" class="headerlink" title="14.流"></a>14.流</h2><h2 id="15-异常"><a href="#15-异常" class="headerlink" title="15.异常"></a>15.异常</h2><h2 id="16-代码校验"><a href="#16-代码校验" class="headerlink" title="16.代码校验"></a>16.代码校验</h2><h2 id="17-文件"><a href="#17-文件" class="headerlink" title="17.文件"></a>17.文件</h2><h2 id="18-字符串"><a href="#18-字符串" class="headerlink" title="18.字符串"></a>18.字符串</h2><h2 id="19-反射"><a href="#19-反射" class="headerlink" title="19.反射"></a>19.反射</h2><h2 id="20-泛型"><a href="#20-泛型" class="headerlink" title="20.泛型"></a>20.泛型</h2><h2 id="21-数组"><a href="#21-数组" class="headerlink" title="21.数组"></a>21.数组</h2>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四色建模法</title>
      <link href="/2022/11/25/development/%E5%9B%9B%E8%89%B2%E5%BB%BA%E6%A8%A1%E6%B3%95/"/>
      <url>/2022/11/25/development/%E5%9B%9B%E8%89%B2%E5%BB%BA%E6%A8%A1%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="四色建模法"><a href="#四色建模法" class="headerlink" title="四色建模法"></a>四色建模法</h1><h2 id="1-方法介绍"><a href="#1-方法介绍" class="headerlink" title="1.方法介绍"></a>1.方法介绍</h2><p>四色建模法源于Peter Coad的《Java Modeling In Color With UML》，它是一种模型的分析和设计方法，他提出要把所有模型分为四种类型，用四种颜色表示</p><p><img src="https://pic.hiasia.fun/image/202211181647499.png"></p><h3 id="1-1-业务关键时刻（红色）"><a href="#1-1-业务关键时刻（红色）" class="headerlink" title="1.1.业务关键时刻（红色）"></a>1.1.业务关键时刻（红色）</h3><p>这种对象表示那些在某个时间点存在，或者会存在一段时间的。这样的对象往往表示了一次外界的请求，比如一次询价，一次下单或者一次租赁。</p><h3 id="1-2-角色（黄色）"><a href="#1-2-角色（黄色）" class="headerlink" title="1.2.角色（黄色）"></a>1.2.角色（黄色）</h3><p>这种对象表示的是一种角色，往往由人或者物来承担，会有相应的责任和权利，一般一个moment-interval对象会关联多个Role。例如一次下单涉及两个Role：客户-商品。</p><h3 id="1-3-人-事-物（绿色）"><a href="#1-3-人-事-物（绿色）" class="headerlink" title="1.3.人-事-物（绿色）"></a>1.3.人-事-物（绿色）</h3><p>这种对象往往表示的是一种客观存在的事物，例如：人、组织、产品或者配件等，这些事物往往会在一种moment-interval 中扮演某个Role。例如，某个人会在一次购买中扮演Customer的角色，也可以在询价中扮演询价人的角色。</p><h3 id="1-4-描述（蓝色）"><a href="#1-4-描述（蓝色）" class="headerlink" title="1.4.描述（蓝色）"></a>1.4.描述（蓝色）</h3><p>这种对象一般是分类用或者描述性的对象，它的属性一般都是这一类事物都有的属性，这类对象一般用蓝色来表示。</p><h2 id="2-案例介绍1-2"><a href="#2-案例介绍1-2" class="headerlink" title="2.案例介绍1,2"></a>2.案例介绍<a href="https://developers.weixin.qq.com/community/develop/article/doc/0000a239230d901cbb4d15c0c51c13">1</a>,<a href="https://www.infoq.cn/article/xh-four-color-modeling">2</a></h2>]]></content>
      
      
      <categories>
          
          <category> 项目管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发常用基础操作</title>
      <link href="/2022/11/25/java/Java%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/11/25/java/Java%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>整理开发中常见的数组处理操作，交集，并集，差集等</p><h1 id="Java开发中常用的基础操作"><a href="#Java开发中常用的基础操作" class="headerlink" title="Java开发中常用的基础操作"></a>Java开发中常用的基础操作</h1>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot迁移到SpringCloud</title>
      <link href="/2022/11/22/development/SpringCloud%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-docker/"/>
      <url>/2022/11/22/development/SpringCloud%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-docker/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringCloud环境搭建-docker"><a href="#SpringCloud环境搭建-docker" class="headerlink" title="SpringCloud环境搭建-docker"></a>SpringCloud环境搭建-docker</h1><h2 id="一-环境准备"><a href="#一-环境准备" class="headerlink" title="一.环境准备"></a>一.环境准备</h2><h3 id="1-安装consul"><a href="#1-安装consul" class="headerlink" title="1.安装consul"></a>1.安装consul</h3><p>创建网络</p><blockquote><p>docker network create 名称</p></blockquote><p>拉取docker镜像</p><blockquote><p>docker pull consul</p></blockquote><p>创建本地目录,应根据自己实际情况创建</p><blockquote><p>cd ~<br>mkdir consul</p></blockquote><p>启动docker容器</p><blockquote><p>docker run -d -p 8500:8500 –net&#x3D;cloudnet –name&#x3D;consul</p></blockquote><p>**此时就可在浏览器访问看到<br><img src="https://pic.hiasia.fun/image/202211221024372.png"></p><h3 id="2-安装本地docker仓库"><a href="#2-安装本地docker仓库" class="headerlink" title="2.安装本地docker仓库"></a>2.安装本地docker仓库</h3><blockquote><p>docker pull registry</p><p>docker run -d -p 15000:5000 –restart always –name registry registry</p></blockquote><h2 id="3安装rabbitmq"><a href="#3安装rabbitmq" class="headerlink" title="3安装rabbitmq"></a>3安装rabbitmq</h2><blockquote><p>docker pull rabbitmq<br>docker run -d –name&#x3D;rabbitmq –net&#x3D;cloudnet rabbitmq</p></blockquote><h2 id="4-启动网关模块GatewayApplication"><a href="#4-启动网关模块GatewayApplication" class="headerlink" title="4.启动网关模块GatewayApplication"></a>4.启动网关模块GatewayApplication</h2><h3 id="从测试服保存镜像"><a href="#从测试服保存镜像" class="headerlink" title="从测试服保存镜像"></a>从测试服保存镜像</h3><p>docker save -o  镜像路径 镜像id<br>docker save -o &#x2F;root&#x2F;docker&#x2F;app-hq&#x2F;hq-gateway.tar 787faf03942</p><p>通过scp下载到本地</p><h3 id="部署正式服"><a href="#部署正式服" class="headerlink" title="部署正式服"></a>部署正式服</h3><p>scp上传下载的文件到&#x2F;root&#x2F;docker_image&#x2F;目录下:如:hq-gateway.tar</p><h4 id="导入镜像"><a href="#导入镜像" class="headerlink" title="导入镜像"></a>导入镜像</h4><blockquote><p>docker load -i hq-gateway.tar</p></blockquote><h4 id="为镜像命名"><a href="#为镜像命名" class="headerlink" title="为镜像命名"></a>为镜像命名</h4><p>docker tag 镜像id 服务名+日期</p><blockquote><p>docker tag 0c598450a256 hq-gateway:230927</p></blockquote><h4 id="启动镜像"><a href="#启动镜像" class="headerlink" title="启动镜像"></a>启动镜像</h4><p><em>-e PROFILE&#x3D;prod</em>这个参数一定要指定,代表用prod配置文件</p><p>docker run -d -p 端口转换 –net 虚拟网络名 -e PROFILE&#x3D;prod –name&#x3D;容器名称 镜像名称</p><blockquote><p>docker run -d -p 9700:8080 –net cloudnet -e PROFILE&#x3D;prod –name&#x3D;hq-gateway hq-gateway:230927</p></blockquote><p>此时就可看到服务已经注册到consul<br><img src="https://pic.hiasia.fun/image/202211221025621.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习</title>
      <link href="/2022/11/13/java/Java%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/13/java/Java%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Java基础的学习很重要</p><span id="more"></span><h1 id="Java学习"><a href="#Java学习" class="headerlink" title="Java学习"></a>Java学习</h1><h2 id="一、面向对象"><a href="#一、面向对象" class="headerlink" title="一、面向对象"></a>一、面向对象</h2><h3 id="1-面向对象五大原则"><a href="#1-面向对象五大原则" class="headerlink" title="1.面向对象五大原则"></a>1.面向对象五大原则</h3><p>1.单一自责原则（Single-Responsibility Principle）</p><ul><li>一个类，最好只做一件事，只有一个引起它的变化</li></ul><p>2.开放封闭原则（Open-Close principle）</p><ul><li>软件实体应该是可扩展的，而不可修改的。也就是，对扩展开放，对修改封闭的。</li></ul><p>3.里氏替换原则（Liskov-Substitution Principle）</p><ul><li>子类必须能够替换其基类。这一思想体现为对继承机制的约束规范，只有子类能够替换基类时，才能保证系统在运行期内识别子类，这是保证继承复用的基础。</li></ul><p>4.依赖倒置原则（Dependency-Inversion Principle）</p><ul><li>依赖于抽象。具体而言就是高层模块不依赖于底层模块，二者都同依赖于抽象；抽象不依赖于具体，具体依赖于抽象。</li></ul><p>5.接口隔离原则（Interface-Segregation Principle）</p><ul><li>使用多个小的专门的接口，而不要使用一个大的总接口。</li></ul><h3 id="2-多用组合，少用继承"><a href="#2-多用组合，少用继承" class="headerlink" title="2. 多用组合，少用继承"></a>2. 多用组合，少用继承</h3><ul><li><strong><code>建议在同样可行的情况下，优先使用组合而不是继承。</code></strong></li><li><strong><code>因为组合更安全，更简单，更灵活，更高效。</code></strong></li></ul><h3 id="3-类变量，成员变量，局部变量"><a href="#3-类变量，成员变量，局部变量" class="headerlink" title="3.类变量，成员变量，局部变量"></a>3.类变量，成员变量，局部变量</h3><ul><li><strong><code>类变量：存储在方法区中。private static int a;</code></strong></li><li><strong><code>成员变量：存储在堆内存中</code></strong></li><li><strong><code>局部变量：存储在栈内存中</code></strong></li><li>抽象类与接口的区别<br><img src="https://pic.hiasia.fun/image/202208191059533.png"></li><li>类关系示例图<br><img src="https://pic.hiasia.fun/image/202208191132287.png"></li><li>POJO的分类<br><img src="https://pic.hiasia.fun/image/202208191159235.png"></li></ul><h3 id="4-成员变量的方法作用域"><a href="#4-成员变量的方法作用域" class="headerlink" title="4.成员变量的方法作用域"></a>4.成员变量的方法作用域</h3><ul><li>public：表明该成员变量或者方法是对所有类或者对象都是可见的,所有类或者对象都可以直接访问</li><li>private：表明该成员变量或者方法是私有的,只有当前类对其具有访问权限,除此之外其他类或者对象都没有访问权限.子类也没有访问权限.</li><li>protected：表明成员变量或者方法对类自身,与同在一个包中的其他类可见,其他包下的类不可访问,除非是他的子类 </li><li>default：表明该成员变量或者方法只有自己和其位于同一个包的内可见,其他包内的类不能访问,即便是它的子类</li></ul><h3 id="5-基本类型"><a href="#5-基本类型" class="headerlink" title="5.基本类型"></a>5.基本类型</h3><ul><li>不能用浮点型表示金额<ul><li>由于计算机中保存的小数其实是十进制的小数的近似值，并不是准确值，所以，千万不要在代码中使用浮点数来表示金额等重要的指标</li><li>建议使用BIgDecimal或者Long来表示金额</li></ul></li></ul><h4 id="5-1自动拆装箱"><a href="#5-1自动拆装箱" class="headerlink" title="5.1自动拆装箱"></a>5.1自动拆装箱</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java代码    </span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="type">Integer</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> flag ? i : j;</span><br><span class="line"><span class="comment">//反编译后</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="type">Integer</span> <span class="variable">i</span> <span class="operator">=</span> Integer.valueOf(<span class="number">0</span>);</span><br><span class="line">  <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> flag ? i.intValue() : j;</span><br></pre></td></tr></table></figure><ul><li>此时如果i值为null，就会发生NPE（空指针异常）。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">test1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">Integer</span> <span class="variable">test2</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">// test1 == test2</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">test3</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line"><span class="type">Integer</span> <span class="variable">test4</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line"><span class="comment">// test3 != test4</span></span><br></pre></td></tr></table></figure><ul><li><p>其中的 Javadoc 详细的说明了缓存支持 -128 到 127 之间的自动装箱过程。最大值 127 可以通过 <code>-XX:AutoBoxCacheMax=size</code> 修改。</p></li><li><p>实际上这个功能在 Java 5 中引入的时候,范围是固定的 -128 至 +127。后来在 Java 6 中，可以通过 <code>java.lang.Integer.IntegerCache.high</code> 设置最大值。</p></li><li><p>在 Boxing Conversion 部分的 Java 语言规范(JLS)规定如下：</p><p>如果一个变量 p 的值是：</p><ul><li>-128 至 127 之间的整数 (§3.10.1)</li><li>true 和 false 的布尔值 (§3.10.3)</li><li><code>\u0000</code> 至 <code>\u007f</code> 之间的字符 (§3.10.4)</li></ul></li></ul><h5 id="注意：如果一个-for-循环中有大量拆装箱操作，会浪费很多资源。"><a href="#注意：如果一个-for-循环中有大量拆装箱操作，会浪费很多资源。" class="headerlink" title="注意：如果一个 for 循环中有大量拆装箱操作，会浪费很多资源。"></a>注意：如果一个 for 循环中有大量拆装箱操作，会浪费很多资源。</h5><h3 id="6-字符串的不可变性String"><a href="#6-字符串的不可变性String" class="headerlink" title="6.字符串的不可变性String"></a>6.字符串的不可变性String</h3><ul><li><p>String类的所有方法都没有改变字符串本身的值，都是返回了一个新的对象。</p><ul><li>如果我们想要一个可修改的字符串，可以选择StringBuffer 或者 StringBuilder这两个代替String。</li></ul></li><li><pre><code class="english">如有可能，我愿意任何时候都使用不可变对象。I would use an immutable whenever I can.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 缓存-字符串对象使用频率高，将其缓存起来，相同的指向一个地址空间，节省资源</span><br><span class="line"></span><br><span class="line">+ 安全性-字符串存储敏感数据，不可变，可以让开发者足够信任它</span><br><span class="line"></span><br><span class="line">+ 线程安全-多个线程访问它们时，它们不会被改变。</span><br><span class="line"></span><br><span class="line">+ hashcode缓存-由于字符串对象被广泛地用作数据结构，它们也被广泛地用于哈希实现，如HashMap、HashTable、HashSet等。在对这些散列实现进行操作时，经常调用hashCode()方法。</span><br><span class="line"></span><br><span class="line">+ 性能-因为字符串不可变，所以可以用字符串池缓存，可以大大节省堆内存。而且还可以提前对hashcode进行缓存，更加高效</span><br><span class="line"></span><br><span class="line">### 7.String类中常见用法</span><br><span class="line"></span><br><span class="line">&gt; 内存泄露：在计算机科学中，内存泄漏指由于疏忽或错误造成程序未能释放已经不再使用的内存。 内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，导致在释放该段内存之前就失去了对该段内存的控制，从而造成了内存的浪费。</span><br><span class="line"></span><br><span class="line">#### 1.JDK6与JDK7中substring的原理及区别</span><br><span class="line"></span><br><span class="line">Jdk6:substring指向原string字符串其中的一部分数据</span><br><span class="line"></span><br><span class="line">Jdk7:重新创建对象</span><br><span class="line"></span><br><span class="line">#### 2.replaceFirst、replaceAll、replace区别</span><br><span class="line"></span><br><span class="line">replace(CharSequence target, CharSequence replacement) ，用replacement替换所有的target，两个参数都是字符串。</span><br><span class="line"></span><br><span class="line">replaceAll(String regex, String replacement) ，用replacement替换所有的regex匹配项，regex很明显是个正则表达式，replacement是字符串。</span><br><span class="line"></span><br><span class="line">replaceFirst(String regex, String replacement) ，基本和replaceAll相同，区别是只替换第一个匹配项。</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">String string = &quot;abc123adb23456aa&quot;;</span><br><span class="line">System.out.println(string);//abc123adb23456aa</span><br><span class="line"></span><br><span class="line">//使用replace将a替换成H</span><br><span class="line">System.out.println(string.replace(&quot;a&quot;,&quot;H&quot;));//Hbc123Hdb23456HH</span><br><span class="line">//使用replaceFirst将第一个a替换成H</span><br><span class="line">System.out.println(string.replaceFirst(&quot;a&quot;,&quot;H&quot;));//Hbc123adb23456aa</span><br><span class="line">//使用replace将a替换成H</span><br><span class="line">System.out.println(string.replaceAll(&quot;a&quot;,&quot;H&quot;));//Hbc123Hdb23456HH</span><br><span class="line"></span><br><span class="line">//使用replaceFirst将第一个数字替换成H</span><br><span class="line">System.out.println(string.replaceFirst(&quot;\\d&quot;,&quot;H&quot;));//abcH23adb23456aa</span><br><span class="line">//使用replaceAll将所有数字替换成H</span><br><span class="line">System.out.println(string.replaceAll(&quot;\\d&quot;,&quot;H&quot;));//abcHHHadbHHHHHaa</span><br></pre></td></tr></table></figure></code></pre></li></ul><h4 id="3-string中的“-”"><a href="#3-string中的“-”" class="headerlink" title="3.string中的“+”"></a>3.string中的“+”</h4><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">hello</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">world</span> <span class="operator">=</span> <span class="string">&quot;World&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">sout</span> <span class="operator">=</span> hello + <span class="string">&quot;,&quot;</span> world;</span><br></pre></td></tr></table></figure><p>反编译后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">wechat</span> <span class="operator">=</span> <span class="string">&quot;Hollis&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">introduce</span> <span class="operator">=</span> <span class="string">&quot;\u6BCF\u65E5\u66F4\u65B0Java\u76F8\u5173\u6280\u672F\u6587\u7AE0&quot;</span>;<span class="comment">//每日更新Java相关技术文章</span></span><br><span class="line"><span class="type">String</span> <span class="variable">hollis</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">StringBuilder</span>()).append(wechat).append(<span class="string">&quot;,&quot;</span>).append(introduce).toString();</span><br></pre></td></tr></table></figure><p>通过StringBuilder.append实现的拼接</p><h4 id="4-字符串拼接的几种方法和区别"><a href="#4-字符串拼接的几种方法和区别" class="headerlink" title="4.字符串拼接的几种方法和区别"></a>4.字符串拼接的几种方法和区别</h4><p>StringBuffer是线程安全的</p><p>StringUtils.join的源码，其实也是通过StringBuilder实现的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">join</span><span class="params">(<span class="keyword">final</span> Object[] array, String separator, <span class="keyword">final</span> <span class="type">int</span> startIndex, <span class="keyword">final</span> <span class="type">int</span> endIndex)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (separator == <span class="literal">null</span>) &#123;</span><br><span class="line">        separator = EMPTY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// endIndex - startIndex &amp;gt; 0:   Len = NofStrings *(len(firstString) + len(separator))</span></span><br><span class="line">    <span class="comment">//           (Assuming that all Strings are roughly equally long)</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">noOfItems</span> <span class="operator">=</span> endIndex - startIndex;</span><br><span class="line">    <span class="keyword">if</span> (noOfItems &amp;lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> EMPTY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">StringBuilder</span> <span class="variable">buf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(noOfItems * <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> startIndex; i &amp;lt; endIndex; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &amp;gt; startIndex) &#123;</span><br><span class="line">            buf.append(separator);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (array[i] != <span class="literal">null</span>) &#123;</span><br><span class="line">            buf.append(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> buf.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效率对比</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">t1</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"><span class="comment">//这里是初始字符串定义</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &amp;lt; <span class="number">50000</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//这里是字符串拼接代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">long</span> <span class="variable">t2</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">System.out.println(<span class="string">&quot;cost:&quot;</span> + (t2 - t1));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试结果:StringBuilder<code>&lt;</code>StringBuffer<code>&lt;</code>concat<code>&lt;</code>+<code>&lt;</code>StringUtils.join</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+ cost:<span class="number">5119</span></span><br><span class="line">StringBuilder cost:<span class="number">3</span></span><br><span class="line">StringBuffer cost:<span class="number">4</span></span><br><span class="line">concat cost:<span class="number">3623</span></span><br><span class="line">StringUtils.join cost:<span class="number">25726</span></span><br></pre></td></tr></table></figure><h3 id="Collection和Collections区别"><a href="#Collection和Collections区别" class="headerlink" title="Collection和Collections区别"></a>Collection和Collections区别</h3><p>Collection是一个集合接口.它提供了对集合对象进行基本操作的通用接口方法.是list,set等等父接口</p><p>Collections是一个包装类.她包含有各种关于集合操作的静态多态方法.类无法实例化,像工具类,服务与Java的Colloection框架.</p><h3 id="Set和List区别"><a href="#Set和List区别" class="headerlink" title="Set和List区别"></a>Set和List区别</h3><p>List,Set都是继承自Collection接口。都是用来存储一组相同类型的元素的。</p><p><strong>List</strong>特点:元素有放入顺序,元素可重复</p><p>先放入的元素排在前面</p><p><strong>Set</strong>特点:元素无放入顺序,元素不可重复.</p><p>无顺序，即先放入的元素不一定排在前面。 不可重复，即相同元素在set中只会保留一份。所以，有些场景下，set可以用来去重。 不过需要注意的是，set在元素插入时是要有一定的方法来判断元素是否重复的。这个方法很重要，决定了set中可以保存哪些元素。</p><h3 id="ArrayList和LinkedList和Vector的区别"><a href="#ArrayList和LinkedList和Vector的区别" class="headerlink" title="ArrayList和LinkedList和Vector的区别"></a>ArrayList和LinkedList和Vector的区别</h3><p>三者都实现了List接口,区别在于实现方式不同,对不同的操作具有不同的效率.</p><p>ArrayList是一个可改变大小的数组,其大小会顺随着元素的加入而动态地增长.内部通过get,set方法进行访问.本质上是个数组.</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统日志设计</title>
      <link href="/2022/11/04/development/%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97%E8%AE%BE%E8%AE%A1/"/>
      <url>/2022/11/04/development/%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="系统日志设计"><a href="#系统日志设计" class="headerlink" title="系统日志设计"></a>系统日志设计</h1><h5 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h5><p>1、Java+SpringBoot+JPA</p><h3 id="2、Logback-spring-xml配置项详解"><a href="#2、Logback-spring-xml配置项详解" class="headerlink" title="2、Logback-spring.xml配置项详解"></a>2、Logback-spring.xml配置项详解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个父标签：configuration</span><br><span class="line">两个属性：contextName和property</span><br><span class="line">三个节点：appender、root、logger</span><br></pre></td></tr></table></figure><h4 id="2-1、configuration标签"><a href="#2-1、configuration标签" class="headerlink" title="2.1、configuration标签"></a>2.1、configuration标签</h4><ul><li>scan<ul><li>当此属性设置为true时，配置文件如果发生改变，将会重新加载，默认值为true</li></ul></li><li>scanPeriod<ul><li>设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。</li></ul></li><li>debug<ul><li>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。</li></ul></li></ul><h6 id="两个属性contextName和property"><a href="#两个属性contextName和property" class="headerlink" title="两个属性contextName和property"></a>两个属性contextName和property</h6><ul><li>contextName<ul><li>每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。</li></ul></li><li>property<ul><li>用来定义变量值的标签， 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。<br>例如使用定义上下文名称，然后在设置logger上下文时使用。</li></ul></li></ul><h4 id="2-2、三个节点appender、root、logger"><a href="#2-2、三个节点appender、root、logger" class="headerlink" title="2.2、三个节点appender、root、logger"></a>2.2、三个节点appender、root、logger</h4><h5 id="2-2-1-append节点"><a href="#2-2-1-append节点" class="headerlink" title="2.2.1 append节点"></a>2.2.1 append节点</h5><p>appender的意思是追加器，在这里可以理解为一个日志的渲染器（或者说格式化日志输出）。比如渲染console日志为某种格式，渲染文件日志为另一种格式。<br>appender中有name和class两个属性，有rollingPolicy和encoder两个子节点。<br>name表示该渲染器的名字，class表示使用的输出策略，常见的有控制台输出策略和文件输出策略。</p><h6 id="encoder表示输出格式，具体说明如下："><a href="#encoder表示输出格式，具体说明如下：" class="headerlink" title="encoder表示输出格式，具体说明如下："></a>encoder表示输出格式，具体说明如下：</h6><blockquote><p>%d表示时间<br>%thread表示线程名<br>%-5level 表示日志级别，允许以五个字符长度输出<br>%logger{50}表示具体的日志输出者，比如类名，括号内表示长度<br>%msg表示具体的日志消息，就是logger.info(“xxx”)中的xxx<br>%n表示换行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>费曼学习法</title>
      <link href="/2022/11/02/books/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/"/>
      <url>/2022/11/02/books/%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="费曼学习法"><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a>费曼学习法</h1><h2 id="四大核心"><a href="#四大核心" class="headerlink" title="四大核心"></a>四大核心</h2><ul><li>以教代学</li><li><img src="https://pic.hiasia.fun/image/202211061751377.png"></li></ul><h2 id="问题的量化思考体现在六个方面"><a href="#问题的量化思考体现在六个方面" class="headerlink" title="问题的量化思考体现在六个方面"></a>问题的量化思考体现在六个方面</h2><ul><li><p>方向-锁定思考的主要方向</p><ul><li>从备选中找出一个主攻方向</li></ul></li><li><p>归纳-确立思考的主要逻辑</p><ul><li>确立了自己的逻辑，就可以有针对性地收集、整理和归纳信息，不用走一步看一步</li></ul></li><li><p>验证-验证思考的效果</p><ul><li>通过输出来验证自己学到的知识，以教代学，把自己对于某个问题的见解和分析阐述给别人，告诉对方自己的思路，可以起到很好的验证的作用。</li></ul></li><li><p>反馈-反馈正确的错误</p><ul><li>以输出的方式验证自己的观点，从听众那里收取反馈，看他是否能理解和接受，聆听对方的想法。根据对方的反馈，调整之前的思考，强化正确内容，修正&#x2F;删除错误的地方</li></ul></li><li><p>简化-把复杂的思考过程简单化</p><ul><li>提炼思考的要点，能一目了然地看清思考的目标、思考的逻辑、思考的结果，并可以总结出来，把这个过程变得易于理解</li></ul></li><li><p>吸收-消化思考的成果</p><ul><li>将思考的成果消化吸收，转化为可以应用的内容。解决工作上的问题，处理学习中的难题，产生思考的结果。在思考的过程中形成自己简单高效的模式。</li></ul><p>费曼学习五部曲</p><p>第一步：目标➡️确立学习对象➡️产生专注力</p><p>第二步：理解➡️理解要学习的知识➡️系统化地存优去劣</p><p>第三步：输出➡️向别人输出学到的知识➡️以教代学</p><p>第四步：回顾➡️回顾和反思学到的知识➡️深度分析</p><p>第五步：简化➡️通过简化吸收形成自己的知识体系➡️内化知识</p></li></ul><h4 id="SMART原则"><a href="#SMART原则" class="headerlink" title="SMART原则"></a>SMART原则</h4><p>S：(Specific)明确和具体的。—目标必须清晰可以形容。</p><p><img src="https://pic.hiasia.fun/image/202211061702677.png"></p><p>M:(Measurable)可以衡量&#x2F;量化的。—目标必须量化和能够评估</p><p>A:(Achievable)自身能力可以达到的—目标必须在能力范围内</p><p>R:(Rewarding)能产生满足感&#x2F;成就感—目标必须有积极的意义</p><p>T:(Time-bound)有时间限制的—目标必须有实现的期限</p><h4 id="学习规划时，我们要先为三件事预留出足够的时间"><a href="#学习规划时，我们要先为三件事预留出足够的时间" class="headerlink" title="学习规划时，我们要先为三件事预留出足够的时间"></a>学习规划时，我们要先为三件事预留出足够的时间</h4><ul><li>留出锁定最重要目标的时间<ul><li>锁定自己的目标，把主要精力聚焦到这个目标上</li></ul></li><li>留出做正确规划的时间<ul><li>不要还没做好准备就匆匆地开始学习</li></ul></li><li>留出调整目标和规划的时间<ul><li>在计划和行动的过程中根据反馈随时修正目标，保证自己始终处在一条正确的轨道上</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim基础操作</title>
      <link href="/2022/11/01/linux/VIM%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/01/linux/VIM%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="VIM基本操作"><a href="#VIM基本操作" class="headerlink" title="VIM基本操作"></a>VIM基本操作</h1><p>vimtutor</p><h3 id="1、移动光标"><a href="#1、移动光标" class="headerlink" title="1、移动光标"></a>1、移动光标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h左移 j下移 k上移 l右移</span><br></pre></td></tr></table></figure><h3 id="2、编辑命令"><a href="#2、编辑命令" class="headerlink" title="2、编辑命令"></a>2、编辑命令</h3><blockquote><p>!q 强制退出不保存</p><p>wq 保存退出</p><p>x 删除字符</p><p>i 在光标前插入文本</p><p>a 在光标后插入文本</p><p>A 在一行后添加文本</p><p>o 在下一行添加文本</p><p>O 在上一行添加文本</p><p>s 替换当前光标文字</p><p>cc 修改当前行所有内容</p><p>C 修改当前光标后的内容</p><p>r 替换当前光标文字</p><p>R 替换当前光标文字并进入插入模式</p><p>J 连接两行(删除一个换行)</p></blockquote><h3 id="3-导航命令"><a href="#3-导航命令" class="headerlink" title="3.导航命令"></a>3.导航命令</h3><h4 id="3-1-行导航"><a href="#3-1-行导航" class="headerlink" title="3.1.行导航"></a>3.1.行导航</h4><blockquote><p>0 将光标移动到当前行的开头</p><p>$ 将光标移动到当前行末尾</p><p>control + f 向下翻页</p><p>control + b 向上翻页</p><p>:n 跳到底几行</p><p>:0 跳到文件开头</p><p>:¥ 跳到文件末尾</p></blockquote><h4 id="3-2-单词导航"><a href="#3-2-单词导航" class="headerlink" title="3.2.单词导航"></a>3.2.单词导航</h4><blockquote><p>w 将光标移动到下一个单词的开头</p><p>e 将光标移动到当前单词的末尾</p><p>b 将光标移动到前一个单词的开头</p><p>Control + o 跳回上一个位置</p><p>control + i 跳到下一个位置</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda基础操作</title>
      <link href="/2022/10/25/%E5%A4%A7%E6%95%B0%E6%8D%AE/Anaconda%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/10/25/%E5%A4%A7%E6%95%B0%E6%8D%AE/Anaconda%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda基础操作"><a href="#Anaconda基础操作" class="headerlink" title="Anaconda基础操作"></a>Anaconda基础操作</h1><h2 id="1、管理conda"><a href="#1、管理conda" class="headerlink" title="1、管理conda"></a>1、管理conda</h2><h4 id="1-1-查看conda自身版本"><a href="#1-1-查看conda自身版本" class="headerlink" title="1.1.查看conda自身版本"></a>1.1.查看conda自身版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">asia@AsiadeMacBook ~ % conda --version</span><br><span class="line">conda 22.9.0</span><br></pre></td></tr></table></figure><h4 id="1-2-查看conda的环境配置"><a href="#1-2-查看conda的环境配置" class="headerlink" title="1.2.查看conda的环境配置"></a>1.2.查看conda的环境配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><h4 id="1-3-设置镜像"><a href="#1-3-设置镜像" class="headerlink" title="1.3.设置镜像"></a>1.3.设置镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">### 1.4.更新conda</span></span></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">conda update conda</span><br></pre></td></tr></table></figure><h4 id="1-5-更新anaconda"><a href="#1-5-更新anaconda" class="headerlink" title="1.5.更新anaconda"></a>1.5.更新anaconda</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update Anaconda</span><br></pre></td></tr></table></figure><h4 id="1-6-查看某个命令的详细用法"><a href="#1-6-查看某个命令的详细用法" class="headerlink" title="1.6.查看某个命令的详细用法"></a>1.6.查看某个命令的详细用法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --help</span><br></pre></td></tr></table></figure><h2 id="2、管理环境"><a href="#2、管理环境" class="headerlink" title="2、管理环境"></a>2、管理环境</h2><h4 id="2-1-创建一个虚拟环境指定python版本"><a href="#2-1-创建一个虚拟环境指定python版本" class="headerlink" title="2.1.创建一个虚拟环境指定python版本"></a>2.1.创建一个虚拟环境指定python版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=3.8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">env_name为环境名称</span></span><br></pre></td></tr></table></figure><h4 id="2-2-创建一个虚拟环境并安装指定包"><a href="#2-2-创建一个虚拟环境并安装指定包" class="headerlink" title="2.2.创建一个虚拟环境并安装指定包"></a>2.2.创建一个虚拟环境并安装指定包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name numpy python=3.8</span><br></pre></td></tr></table></figure><h4 id="2-3-查看虚拟环境"><a href="#2-3-查看虚拟环境" class="headerlink" title="2.3.查看虚拟环境"></a>2.3.查看虚拟环境</h4><p>三条命令效果相同</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br><span class="line">conda info -e</span><br><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><h4 id="2-4-激活虚拟环境"><a href="#2-4-激活虚拟环境" class="headerlink" title="2.4.激活虚拟环境"></a>2.4.激活虚拟环境</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate env_name</span><br></pre></td></tr></table></figure><h4 id="2-5-退出虚拟环境"><a href="#2-5-退出虚拟环境" class="headerlink" title="2.5.退出虚拟环境"></a>2.5.退出虚拟环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h4 id="2-6-删除虚拟环境"><a href="#2-6-删除虚拟环境" class="headerlink" title="2.6.删除虚拟环境"></a>2.6.删除虚拟环境</h4><p>删除虚拟环境以及下面所有安装的包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name env_name --all</span><br></pre></td></tr></table></figure><p>只删除虚拟环境中的某些包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name env_name package_name</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot源码分析</title>
      <link href="/2022/10/01/java/SpringBoot%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
      <url>/2022/10/01/java/SpringBoot%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot源码分析"><a href="#SpringBoot源码分析" class="headerlink" title="SpringBoot源码分析"></a>SpringBoot源码分析</h1><h3 id="1、如何将加载机制到IOC容器中"><a href="#1、如何将加载机制到IOC容器中" class="headerlink" title="1、如何将加载机制到IOC容器中"></a>1、如何将加载机制到IOC容器中</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringParentApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringParentApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在执行main函数启动的时候,就会调用类加载器去加载对应的bean,全部放入到IOC容器中</p><ul><li>什么是类加载器<ul><li>就是<code>SpringApplication.run(HqLmsServerApplication.class, args);</code>中的:<code>HqLmsServerApplication.class</code>这个传递了一个类,传递了这个类的目的就是为了触发类加载器</li></ul></li><li>可以传递别的类?<ul><li>不可以,主类上有一个注解<code>@SpringBootApplication</code>是核心注解.这个注解就去加载项目中对应的所有的bean.这些bean就包含项目@Configu ration+@Bean的初始化、@Import机制(starter)那些类等等</li></ul></li><li>为什么要触发类加载器:<ul><li>可以获取上下文环境,可以能获取系统的信息</li><li>会加载所有依赖jar中编译好的类</li><li>会加载jdk对应的api</li></ul></li></ul><h3 id="2、如何做到零配置-少量配置文件"><a href="#2、如何做到零配置-少量配置文件" class="headerlink" title="2、如何做到零配置(少量配置文件)"></a>2、如何做到零配置(少量配置文件)</h3><ul><li>@Configuration+@Bean</li><li>@SelectorImport机制</li><li>@ImportResource</li><li>@ComponentScan+注解(@Service、@Controller、@RestController、@Component 、@Repository)</li></ul><h3 id="3、Springboot提供的-SpringBootApplication"><a href="#3、Springboot提供的-SpringBootApplication" class="headerlink" title="3、Springboot提供的@SpringBootApplication"></a>3、Springboot提供的<code>@SpringBootApplication</code></h3><p><code>@SpringBootApplication</code>它是一个复合注解：</p><ul><li>@Configuration+@Bean</li><li>@SelectorImport机制</li><li>@ImportResource</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java原生注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="comment">// Spring核心注解</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span>: 等同与<span class="meta">@Configuration(@Component)</span>+<span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span>:开关注解+<span class="meta">@SelectorImport</span>机制来加载bean到ioc容器中</span><br><span class="line"><span class="meta">@ComponentScan</span>+注解(<span class="meta">@Service</span>、<span class="meta">@Controller</span>、<span class="meta">@RestController</span>、<span class="meta">@Component</span>、<span class="meta">@Repository</span>)</span><br></pre></td></tr></table></figure><p>@EnableAutoConfiguration:这个开关注解+<code>@SelectorImport</code>机制来加载bean到ioc容器中.同时它也是去加载项目中starter机制到注解.</p><h4 id="4、-Import机制-Eablexxxx机制"><a href="#4、-Import机制-Eablexxxx机制" class="headerlink" title="4、@Import机制+@Eablexxxx机制"></a>4、@Import机制+@Eablexxxx机制</h4><h5 id="1-EnableAutoConfiguration源码"><a href="#1-EnableAutoConfiguration源码" class="headerlink" title="1.@EnableAutoConfiguration源码"></a>1.@EnableAutoConfiguration源码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import(AutoConfigurationImportSelector.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">ENABLED_OVERRIDE_PROPERTY</span> <span class="operator">=</span> <span class="string">&quot;spring.boot.enableautoconfiguration&quot;</span>;</span><br><span class="line">Class&lt;?&gt;[] exclude() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">String[] excludeName() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import(AutoConfigurationImportSelector.class)</span></span><br></pre></td></tr></table></figure><blockquote><p>@Import机制,里面放入了class,class为Configuration或ImportSelector的类</p></blockquote><h5 id="2-尝试编写一个-Import例子"><a href="#2-尝试编写一个-Import例子" class="headerlink" title="2.尝试编写一个@Import例子"></a>2.尝试编写一个@Import例子</h5><h5 id="3-已经有了-ComponentScan-注解-Configuration-Bean和为什么还要有这个机制"><a href="#3-已经有了-ComponentScan-注解-Configuration-Bean和为什么还要有这个机制" class="headerlink" title="3.已经有了@ComponentScan+注解+@Configuration+@Bean和为什么还要有这个机制"></a>3.已经有了<code>@ComponentScan+注解</code>+<code>@Configuration+@Bean</code>和为什么还要有这个机制</h5><p>因为SpringBoot到特点是:零配置(无xml文件),提供这几种机制可以方便的把bean放入到ioc容器中<strong>在开发中,除了自己开发的bean之外,还需要使用很多其它框架提供的bean</strong>.如mybatis需要一个datasoruce</p><p>传统方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSoruce&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlsessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sqlsessionfactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;datasource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;datasource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为何用@Import代替@ComponentScan+注解?</p><p>答案：因为@ComponentScan+注解默认情况下是根据当前的启动的类把作为入口进行bean查找。如果第三方那么就必须一个个去配置它包。如果你引1入第三方的模板有50个。甚至更多你必须扫包.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(basePackages=&#123;&quot;com.asia&quot;,&quot;org.mybatis&quot;,&quot;org.xxx&quot;...&#125;)</span></span><br></pre></td></tr></table></figure><h4 id="5、SpringBoot工程和项目如何找到-MET-INF-spring-factories这个文件的"><a href="#5、SpringBoot工程和项目如何找到-MET-INF-spring-factories这个文件的" class="headerlink" title="5、SpringBoot工程和项目如何找到&#x2F;MET-INF&#x2F;spring.factories这个文件的?"></a>5、SpringBoot工程和项目如何找到&#x2F;MET-INF&#x2F;spring.factories这个文件的?</h4><blockquote><p>真正具体的触发和执行<code>@Import(AutoConfigurationImportSelector.class)</code> 这个类中selectImports方法是在哪里调用的</p></blockquote><p>1.启动主类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringParentApplication.class, args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.run方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title function_">run</span><span class="params">(Class&lt;?&gt; primarySource, String... args)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> run(<span class="keyword">new</span> <span class="title class_">Class</span>&lt;?&gt;[] &#123; primarySource &#125;, args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.执行一个run方法的重载,new 初始化和.run执行所有加载的bean放入ioc容器中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title function_">run</span><span class="params">(Class&lt;?&gt;[] primarySources, String[] args)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SpringApplication</span>(primarySources).run(args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">SpringApplication</span>(primarySources)</span><br></pre></td></tr></table></figure><p>运行加载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.run(args);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK1.8新特性</title>
      <link href="/2022/07/01/java/JDK1.8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
      <url>/2022/07/01/java/JDK1.8%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="JDK1-8新特性"><a href="#JDK1-8新特性" class="headerlink" title="JDK1.8新特性"></a>JDK1.8新特性</h1><h3 id="一、Lambda表达式"><a href="#一、Lambda表达式" class="headerlink" title="一、Lambda表达式"></a>一、Lambda表达式</h3><blockquote><p>lambda表达式本质上是一段匿名内部类，也可以是一段可以传递的代码</p></blockquote><ol><li><p>通过匿名内部类实现函数式接口</p><ol><li>格式：(parameters) -&gt; expression或者(parameters) -&gt; {statements}<ul><li>不需声明参数类型，jvm会自动判断</li><li>一个参数无需小括号</li><li>一条语句无需大括号</li><li>只有一条语句，jvm会自动返回值</li></ul></li></ol><ul><li>注意：<ol><li>lambda 表达式只能引用标记了 final 的外层局部变量,否则会编译错误</li><li>lambda表达式的局部变量可以不用声明final，会自己生成</li><li>不可以声明一个局部变量同名的参数</li></ol></li></ul></li></ol><h3 id="二、函数式接口"><a href="#二、函数式接口" class="headerlink" title="二、函数式接口"></a>二、函数式接口</h3><ol><li>只有一个抽象方法的接口</li><li>可以有多个非抽象的接口</li><li>java1.8中所有的函数式接口<ul><li>java.lang.Runnable</li><li>java.util.concurrent.Callable</li><li>java.security.PrivilegedAction</li><li>java.util.Comparator</li><li>java.io.FileFilter</li><li>java.nio.file.PathMatcher</li><li>java.lang.reflect.InvocationHandler</li><li>java.beans.PropertyChangeListener</li><li>java.awt.event.ActionListener</li><li>javax.swing.event.ChangeListener</li><li>java.util.function.*–java8新增,具体参考jdk1.8官方文档</li></ul></li></ol><h3 id="三、默认方法"><a href="#三、默认方法" class="headerlink" title="三、默认方法"></a>三、默认方法</h3><p>接口可以有实现方法，通过在方法名前面加default关键字</p><h3 id="四、Stream-API–使用"><a href="#四、Stream-API–使用" class="headerlink" title="四、Stream API–使用"></a>四、Stream API–使用</h3><ol><li><p>计算空字符串列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; strings = Arrays.asList(<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;bc&quot;</span>,<span class="string">&quot;efg&quot;</span>,<span class="string">&quot;abcd&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;jkl&quot;</span>);</span><br><span class="line">count = strings.stream().filter(String::isEmpty).count();</span><br><span class="line">System.out.println(<span class="string">&quot;空字符串有：&quot;</span>+count);</span><br></pre></td></tr></table></figure></li><li><p>字符串数量为3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; strings = Arrays.asList(<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;bc&quot;</span>,<span class="string">&quot;efg&quot;</span>,<span class="string">&quot;abcd&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;jkl&quot;</span>);</span><br><span class="line">count = strings.stream().filter(string -&gt; string.length()==<span class="number">3</span>).count();</span><br><span class="line">        System.out.println(count);</span><br></pre></td></tr></table></figure></li><li><p>删除空字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; filtered2 = strings.stream().filter(string -&gt; !string.isEmpty()).collect(Collectors.toList());</span><br><span class="line">System.out.println(<span class="string">&quot;筛选后的列表: &quot;</span> + filtered2);</span><br></pre></td></tr></table></figure></li><li><p>删除空字符串，并用逗号把它们连接起来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">join</span> <span class="operator">=</span> strings.stream().filter(string -&gt; !string.isEmpty()).collect(Collectors.joining(<span class="string">&quot;, &quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;合并字符串: &quot;</span> + join);</span><br></pre></td></tr></table></figure></li><li><p>获取列表元素平方数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; numbers = Arrays.asList(<span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">List&lt;Integer&gt; collect = numbers.stream().map(i -&gt; i * i).distinct().collect(Collectors.toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;平方数列表: &quot;</span> + collect);</span><br></pre></td></tr></table></figure></li><li><p>获取最大，最小，和，平均数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; integers = Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">8</span>,<span class="number">19</span>);</span><br><span class="line"><span class="type">IntSummaryStatistics</span> <span class="variable">stats</span> <span class="operator">=</span> integers.stream().mapToInt(x -&gt; x).summaryStatistics();</span><br><span class="line">System.out.println(<span class="string">&quot;列表中最大的数 : &quot;</span> + stats.getMax());</span><br><span class="line">System.out.println(<span class="string">&quot;列表中最小的数 : &quot;</span> + stats.getMin());</span><br><span class="line">System.out.println(<span class="string">&quot;所有数之和 : &quot;</span> + stats.getSum());</span><br><span class="line">System.out.println(<span class="string">&quot;平均数 : &quot;</span> + stats.getAverage());</span><br></pre></td></tr></table></figure></li><li><p>输出10个随机数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random.ints().limit(<span class="number">10</span>).sorted().forEach(System.out::println);</span><br></pre></td></tr></table></figure></li><li><p>并行处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">count1</span> <span class="operator">=</span> strings.parallelStream().filter(String::isEmpty).count();</span><br></pre></td></tr></table></figure></li><li><p>map</p></li><li><p>Reduce</p></li></ol><h3 id="五、ForkJoin框架"><a href="#五、ForkJoin框架" class="headerlink" title="五、ForkJoin框架"></a>五、ForkJoin框架</h3><h3 id="六、Optional类"><a href="#六、Optional类" class="headerlink" title="六、Optional类"></a>六、Optional类</h3><p>详细参考jdk1.8文档</p><ol><li>Optional可以为null的容器对象。可以用isPresent()方法判断，用get()返回对象</li><li>Optional是一个容器，可以保存类型T的值，或者保存null</li><li>Optional类很好的解决了空指针的问题</li><li><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211208144016210.png" alt="image-20211208144016210"></li></ol><h3 id="七、新时间日期API"><a href="#七、新时间日期API" class="headerlink" title="七、新时间日期API"></a>七、新时间日期API</h3><ol><li><p>Local–简化日期时间的处理，没有时区的问题</p><ol><li>获取当前时间日期</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前的日期时间</span></span><br><span class="line"><span class="type">LocalDateTime</span> <span class="variable">currentTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">System.out.println(<span class="string">&quot;当前时间: &quot;</span> + currentTime);</span><br><span class="line"></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">date1</span> <span class="operator">=</span> currentTime.toLocalDate();</span><br><span class="line">System.out.println(<span class="string">&quot;date1: &quot;</span> + date1);</span><br><span class="line"></span><br><span class="line"><span class="type">Month</span> <span class="variable">month</span> <span class="operator">=</span> currentTime.getMonth();</span><br><span class="line"><span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> currentTime.getDayOfMonth();</span><br><span class="line"><span class="type">int</span> <span class="variable">seconds</span> <span class="operator">=</span> currentTime.getSecond();</span><br><span class="line">System.out.println(<span class="string">&quot;月: &quot;</span> + month +<span class="string">&quot;, 日: &quot;</span> + day +<span class="string">&quot;, 秒: &quot;</span> + seconds);</span><br></pre></td></tr></table></figure><ol start="2"><li>获取指定时间的日期</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">LocalDateTime</span> <span class="variable">date2</span> <span class="operator">=</span> currentTime.withDayOfMonth(<span class="number">10</span>).withYear(<span class="number">2012</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">date3</span> <span class="operator">=</span> LocalDate.of(<span class="number">2014</span>, Month.DECEMBER, <span class="number">12</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;date3: &quot;</span> + date3);</span><br><span class="line"></span><br><span class="line"><span class="type">LocalTime</span> <span class="variable">date4</span> <span class="operator">=</span> LocalTime.of(<span class="number">22</span>, <span class="number">15</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;date4: &quot;</span> + date4);</span><br><span class="line"></span><br><span class="line"><span class="type">LocalTime</span> <span class="variable">date4</span> <span class="operator">=</span> LocalTime.of(<span class="number">22</span>, <span class="number">15</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;date4: &quot;</span> + date4);</span><br></pre></td></tr></table></figure></li><li><p>Zoned–通过制定的时区处理日期时间</p><ol><li><p>获取当前时间日期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ZonedDateTime</span> <span class="variable">date1</span> <span class="operator">=</span> ZonedDateTime.parse(<span class="string">&quot;2015-12-03T10:15:30+05:30[Asia/Shanghai]&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;date1: &quot;</span> + date1);</span><br><span class="line"></span><br><span class="line"><span class="type">ZoneId</span> <span class="variable">id</span> <span class="operator">=</span> ZoneId.of(<span class="string">&quot;Europe/Paris&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;ZoneId: &quot;</span> + id);</span><br><span class="line"></span><br><span class="line"><span class="type">ZoneId</span> <span class="variable">currentZone</span> <span class="operator">=</span> ZoneId.systemDefault();</span><br><span class="line">System.out.println(<span class="string">&quot;当期时区: &quot;</span> + currentZone);</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java注解总结</title>
      <link href="/2022/07/01/java/Java%E6%B3%A8%E8%A7%A3/"/>
      <url>/2022/07/01/java/Java%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Java注解总结"><a href="#Java注解总结" class="headerlink" title="Java注解总结"></a>Java注解总结</h1><h4 id="注解的定义"><a href="#注解的定义" class="headerlink" title="注解的定义:"></a>注解的定义:</h4><p><strong>Java 注解用于为 Java 代码提供元数据。作为元数据，注解不直接影响你的代码执行，但也有一些类型的注解实际上可以用于这一目的。Java 注解是从 Java5 开始添加到 Java 的。</strong></p><p>（1）元数据在开发中的作用就是做数据约束和标准定义，可以将其理解成代码的规范标准（代码的模板）；<br>（2）代码的模板（元数据）不直接影响代码的执行，它只是帮助我们来更快捷的开发；</p><h2 id="注解的分类"><a href="#注解的分类" class="headerlink" title="注解的分类"></a>注解的分类</h2><h4 id="1-Java自带的标准注解"><a href="#1-Java自带的标准注解" class="headerlink" title="1. Java自带的标准注解"></a>1. Java自带的标准注解</h4><p>其中包括@Override;@Deprecated;@SuppressWarnings等,使用这些注解后编译器就会进行检查.</p><h4 id="2-元注解"><a href="#2-元注解" class="headerlink" title="2.元注解"></a>2.元注解</h4><p>元注解也是Java自带的标准注解,只不过用于修饰注解,比较特殊</p><h4 id="3-自定义注解"><a href="#3-自定义注解" class="headerlink" title="3.自定义注解"></a>3.自定义注解</h4><p>用户可以根据直接的需求定义注解</p><h4 id="使用Java自带的注解"><a href="#使用Java自带的注解" class="headerlink" title="使用Java自带的注解"></a>使用Java自带的注解</h4><p>Java自带的注解,就是java.lang中定义的一套注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常用java注解</p><blockquote><p>1.@Deprecated – 所标注内容不再被建议使用；</p><p>2.@Override – 只能标注方法，表示该方法覆盖父类中的方法；</p><p>3.@Documented –所标注内容可以出现在javadoc中；</p><p>4.<strong>@Inherited – 只能被用来标注“Annotation类型”，它所标注的Annotation具有继承性；</strong></p><p>5.<strong>@Retention – 只能被用来标注“Annotation类型”，而且它被用来指定Annotation的RetentionPolicy属性；</strong></p><p>6.<strong>@Target – 只能被用来标注“Annotation类型”，而且它被用来指定Annotation的ElementType属性；</strong></p><p>7.@SuppressWarnings – 所标注内容产生的警告，编译器会对这些警告保持静默；</p><p>8.<strong>@interface – 用于定义一个注解；</strong></p></blockquote><p>其中,4,5,6,7多用于自定义注解</p><h4 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h4><p>在Java中,我们使用@Inherited注解来自定义一个注解,如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyTestAnnotation&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们已经定义了一个注解MyTestAnnotation,就可以使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MyTestAnnotation</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">   <span class="meta">@MyTestAnnotation</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testString</span><span class="params">()</span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们已经自定义了一个注解，不过现在这个注解毫无意义。</p><p>要如何使注解工作呢？这就需要使用元注解了。</p><p>常用的元注解有@Retention、 @Target、 @Document、 @Inherited和@Repeatable五个。</p><p><strong>@Retention</strong><br>Retention英文意思有保留、保持的意思，它表示注解存在阶段是保留在源码（编译期），字节码（类加载）或者运行期（JVM中运行）。</p><p>在@Retention注解中使用枚举RetentionPolicy来表示注解保留时期：</p><ul><li>@Retention(RetentionPolicy.SOURCE)，注解仅存在于源码中，在class字节码文件中不包含</li><li>@Retention(RetentionPolicy.CLASS)， 默认的保留策略，注解会在class字节码文件中存在，但运行时无法获得</li><li>@Retention(RetentionPolicy.RUNTIME)， 注解会在class字节码文件中存在，在运行时可以通过反射获取到</li></ul><p>如果我们是自定义注解，则通过前面分析，我们自定义注解如果只存着源码中或者字节码文件中就无法发挥作用，而在运行期间能获取到注解才能实现我们目的，所以自定义注解中肯定是使用 @Retention(RetentionPolicy.RUNTIME)，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyTestAnnotaion &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Target</strong><br>Target的英文意思是目标，这也很容易理解，使用@Target元注解表示我们的注解作用的范围就比较具体了，可以是类，方法，方法参数变量等，同样也是通过枚举类ElementType表达作用类型：</p><ul><li>@Target(ElementType.TYPE) 作用接口、类、枚举、注解</li><li>@Target(ElementType.FIELD) 作用属性字段、枚举的常量</li><li>@Target(ElementType.METHOD) 作用方法</li><li>@Target(ElementType.PARAMETER) 作用方法参数</li><li>@Target(ElementType.CONSTRUCTOR) 作用构造函数</li><li>@Target(ElementType.LOCAL_VARIABLE)作用局部变量</li><li>@Target(ElementType.ANNOTATION_TYPE)作用于注解（@Retention注解中就使用该属性）</li><li>@Target(ElementType.PACKAGE) 作用于包</li><li>@Target(ElementType.TYPE_PARAMETER) 作用于类型泛型，即泛型方法、泛型类、泛型接口 （jdk1.8加入）</li><li>@Target(ElementType.TYPE_USE) 类型使用.可以用于标注任意类型除了 class （jdk1.8加入）</li></ul><p>一般比较常用的是ElementType.TYPE类型，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyTestAnnotaion &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Documented</strong><br>Document的英文意思是文档。它的作用是能够将注解中的元素包含到 Javadoc 中去。</p><p><strong>@Inherited</strong><br>Inherited的英文意思是继承，但是这个继承和我们平时理解的继承大同小异，一个被@Inherited注解了的注解修饰了一个父类，如果他的子类没有被其他注解修饰，则它的子类也继承了父类的注解。</p><p><strong>@Repeatable</strong><br>Repeatable的英文意思是可重复的。顾名思义说明被这个元注解修饰的注解可以同时作用一个对象多次，但是每次作用注解又可以代表不同的含义。</p><p><strong>注解的源码分析</strong><br>以@Override注解为例，来分析其源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.SOURCE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Override &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Override注解就是通过@interface注解定义的一个普通注解，<strong>使用 @interface 定义注解时，意味着它实现了 java.lang.annotation.Annotation 接口，即该注解就是一个Annotation</strong></p><p>注意：定义 Annotation 时，@interface 是必须的，它和通常的 implemented 实现接口的方法不同。Annotation 接口的实现细节都由编译器完成。通过 @interface 定义注解后，该注解不能继承其他的注解或接口。</p><p>Annotation 类的源码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Annotation</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object var1)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">toString</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; annotationType();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过以上源码，我们知道注解本身就是Annotation接口的子接口，也就是说注解中其实是可以有属性和方法，但是接口中的属性都是static final的，对于注解来说没什么意义，而我们定义接口的方法就相当于注解的属性，也就对应了前面说的为什么注解只有属性成员变量，其实他就是接口的方法，这就是为什么成员变量会有括号，不同于接口我们可以在注解的括号中给成员变量赋值。</p><h4 id="Java注解的架构"><a href="#Java注解的架构" class="headerlink" title="Java注解的架构"></a>Java注解的架构</h4><p>根据上述的源码分析，我们得出Java注解（Annotation）的架构如下：</p><p><img src="https://pic.hiasia.fun/image/202206261832648.png"></p><p>0、<strong>注解是接口类，都继承自Annotation接口类</strong></p><p>1、<strong>1 个 Annotation 和 1 个 RetentionPolicy 关联</strong><br>可以理解为：每1个Annotation对象，都会有唯一的RetentionPolicy属性；</p><p>2、<strong>1 个 Annotation 和 1~n 个 ElementType 关联</strong><br>可以理解为：对于每 1 个 Annotation 对象，可以有若干个 ElementType 属性；</p><p>3、<strong>Annotation 有许多实现类，包括：Deprecated, Documented, Inherited, Override 等等。</strong><br>Annotation 的每一个实现类都和1个 RetentionPolicy 关联并且和 1~n 个 ElementType 关联。</p><h3 id="注解的作用"><a href="#注解的作用" class="headerlink" title="注解的作用"></a>注解的作用</h3><p>在说注解的用途之前，我们先介绍下XML和注解区别：</p><ul><li>注解：是一种分散式的元数据，与源代码紧绑定。<br>xml：是一种集中式的元数据，与源代码无绑定<br>这部分多用于Java后台的配置项开发中，我们知道几年前服务器的配置项多存放在一个xml文件中，而spring 2.5 之后开始基于注解配置，从而实现了代替配置文件的功能。</li></ul><p>注解的用途有很多，上面的只是一个简单的例子，总起起来，注解有如下四大部分作用：</p><p>1、生成文档，通过代码里标识的元数据生成javadoc文档。</p><p>2、编译检查，通过代码里标识的元数据让编译器在编译期间进行检查验证。</p><p>3、编译时动态处理，编译时通过代码里标识的元数据动态处理，例如动态生成代码。</p><p>4、运行时动态处理，运行时通过代码里标识的元数据动态处理，例如使用反射注入实例</p><h2 id="Java依赖注入标准JSR-330简介"><a href="#Java依赖注入标准JSR-330简介" class="headerlink" title="Java依赖注入标准JSR-330简介"></a>Java依赖注入标准JSR-330简介</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lambda和Stream</title>
      <link href="/2022/07/01/java/Lambda%E5%92%8CStream/"/>
      <url>/2022/07/01/java/Lambda%E5%92%8CStream/</url>
      
        <content type="html"><![CDATA[<h1 id="Lambda和Stream"><a href="#Lambda和Stream" class="headerlink" title="Lambda和Stream"></a>Lambda和Stream</h1><h3 id="一、Lambda"><a href="#一、Lambda" class="headerlink" title="一、Lambda"></a>一、Lambda</h3><ol><li>以前遍历</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    List&lt;Employee&gt; list = Arrays.asList(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;san&quot;</span>,<span class="number">18</span>,<span class="number">2500</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;er&quot;</span>,<span class="number">38</span>,<span class="number">3500</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;yi&quot;</span>,<span class="number">58</span>,<span class="number">6800</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="string">&quot;zero&quot;</span>,<span class="number">99</span>,<span class="number">1230</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="type">LambdaDemo1</span> <span class="variable">lambdaDemo1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LambdaDemo1</span>();</span><br><span class="line">    List&lt;Employee&gt; employee = lambdaDemo1.findEmployee(list);</span><br><span class="line">    <span class="keyword">for</span> (Employee employee1 : employee) &#123;</span><br><span class="line">        System.out.println(employee1.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title function_">findEmployee</span><span class="params">(List&lt;Employee&gt; list)</span> &#123;</span><br><span class="line">    List&lt;Employee&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Employee employee : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (employee.getAge() &gt;= <span class="number">57</span>)</span><br><span class="line">            list1.add(employee);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Lambda表达式遍历过程</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.forEach(System.out::println);</span><br></pre></td></tr></table></figure><ol start="3"><li><p>Lambda变量作用域<br>1. </p></li><li><p>函数式接口，接口中只有一个抽象方法</p><ol><li>语法格式一：无参数，无返回值</li></ol></li></ol><h2 id="二、Stream"><a href="#二、Stream" class="headerlink" title="二、Stream"></a>二、Stream</h2><ol><li>获取数据源 <ol><li>stream()-为集合创建串行流</li><li>parallelStream()-为集合创建并行流</li></ol></li><li>条件处理 <ol><li>可以结合lambda表达式</li><li>forEach–迭代流中的每一个数据</li><li>map–映射每个元素到对应的结果</li><li>filter–通过设置条件过滤元素</li><li>limit–获取指定数量的流</li><li>sorted–对流进行排序</li></ol></li><li>收集结果Collectors<br>1. </li><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; list = Arrays.asList(</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;张三&quot;</span>, <span class="number">20</span>, <span class="number">3000</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;李四&quot;</span>, <span class="number">20</span>, <span class="number">2000</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;王五&quot;</span>, <span class="number">21</span>, <span class="number">5000</span>));</span><br><span class="line"></span><br><span class="line">Predicate&lt;User&gt; predicate1 = user -&gt; user.getAge()&lt;<span class="number">21</span>;</span><br><span class="line">Predicate&lt;User&gt; predicate2 = user -&gt; user.getSalary()&gt;<span class="number">2000</span>;</span><br><span class="line">List&lt;User&gt; collect = list.stream()</span><br><span class="line">  <span class="comment">//相当于&amp;&amp;</span></span><br><span class="line">  .filter(predicate1)</span><br><span class="line">  .filter(predicate2)</span><br><span class="line">  .collect(Collectors.toList());</span><br><span class="line">System.out.println(collect);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; collect = list.stream()</span><br><span class="line">  <span class="comment">//相当于&amp;&amp;</span></span><br><span class="line">  .filter(predicate1.)</span><br><span class="line">  .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>Collections.emptyList()</p><p>生成一个空的list</p><p>Collections.emptySet()</p><p>生成一个空的set</p><p>好处：</p><p>​不用返回null，方便调用时判断</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员的职业素养</title>
      <link href="/2021/12/30/books/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%81%8C%E4%B8%9A%E7%B4%A0%E5%85%BB/"/>
      <url>/2021/12/30/books/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%81%8C%E4%B8%9A%E7%B4%A0%E5%85%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="程序员的职业素养"><a href="#程序员的职业素养" class="headerlink" title="程序员的职业素养"></a>程序员的职业素养</h1><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章:"></a>第一章:</h3><ol><li>提高自己的专业性</li><li>不能为了赶时间而降低代码的质量</li><li>了解业务领域会更好的与客户沟通降低代码的错误</li><li>每日练习Kata(一些小的练习),提高自己技能的熟练程度<ol><li>FizzBuzz练习TDD与重构</li><li>基础算法练习</li></ol></li><li>谦逊</li></ol><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章:"></a>第二章:</h3><p>1. </p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建高质量软件</title>
      <link href="/2021/12/25/books/%E6%9E%84%E5%BB%BA%E9%AB%98%E8%B4%A8%E9%87%8F%E8%BD%AF%E4%BB%B6/"/>
      <url>/2021/12/25/books/%E6%9E%84%E5%BB%BA%E9%AB%98%E8%B4%A8%E9%87%8F%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="单元测试的定义"><a href="#单元测试的定义" class="headerlink" title="单元测试的定义"></a>单元测试的定义</h1><ul><li><p>单元测试由开发人员完成，主要是针对软件源代码进行较小粒度的测试，白盒测试</p></li><li><p>单元测试代码要早于源代码的开发</p></li><li><p>在源代码修改后，将其提交到代码仓库前，都要执行所有的单元测试，以确保程序能够正确运行</p></li></ul><h2 id="一、单元测试的好处"><a href="#一、单元测试的好处" class="headerlink" title="一、单元测试的好处"></a>一、单元测试的好处</h2><ol><li><p>使编码过程更加敏捷</p></li><li><p>提升代码质量</p></li><li><p>尽早发现缺陷</p></li><li><p>简化集成测试</p></li><li><p>提供文档帮助</p></li><li><p>易于调试</p></li><li><p>促进开发者优化代码的设计和结构</p></li><li><p>降低软件开发成本</p></li></ol><h2 id="二、单元测试的FIRST原则"><a href="#二、单元测试的FIRST原则" class="headerlink" title="二、单元测试的FIRST原则"></a>二、单元测试的FIRST原则</h2><ol><li>快（Fast）</li></ol><ul><li>指单元测试的执行速度应该很快，否则会降低编译，打包和部署的效率</li></ul><ol start="2"><li>独立，无依赖（Independent)</li></ol><ul><li><p>每个单元测试之间应该彼此独立，互不干扰</p></li><li><p>每个单元测试在执行前后，其环境应该完全一致</p></li></ul><ol start="3"><li>可重复(repeatable)</li></ol><ul><li>每次执行单元测试时所产生的结果应该相同（使用内存数据库）</li></ul><ol start="4"><li>自我验证（self-validating）</li></ol><ul><li>每个单元测试都应该对期望的测试结果自动进行自我验证</li></ul><ol start="5"><li>周密、细致、全面（thorough）</li></ol><ul><li>应该尽可能周密，细致而又全面地覆盖源代码方法中的每一个分支</li></ul><h2 id="三、JUnit最佳实践"><a href="#三、JUnit最佳实践" class="headerlink" title="三、JUnit最佳实践"></a>三、JUnit最佳实践</h2><ol><li><p>单元测试应该尽量避免操作外部资源和数据</p></li><li><p>软件编译打包的时候不要跳过单元测试</p></li><li><p>不要试图在一个单元测试方法中覆盖所有的可能性，分多个单元测试执行，不同的方法对应不同的测试条件</p></li><li><p>单元测试方法中必须包含assertion（断言）操作</p></li><li><p>单元测试方法所在的包名与源程序所在的包名应该一致</p></li><li><p>不要为了提高单元测试的数量，编写一些无意义的单元测试</p></li><li><p>对于期望的异常处理不要进行刻意的捕获并断言</p></li><li><p>不要在测试方法中捕获了异常，却什么也不做</p></li><li><p>单元测试也可以使用log的功能</p></li><li><p>使用自动化的构建工具</p></li><li><p>对源代码的单元覆盖率要达到百分之百</p></li><li><p>保持单元测试方法简洁小巧，快速执行。</p></li><li><p>单元测试应当与源代码同等重要，或比源代码还要重要。</p></li></ol><h2 id="四、测试驱动开发（Test-Driven-Development）"><a href="#四、测试驱动开发（Test-Driven-Development）" class="headerlink" title="四、测试驱动开发（Test Driven Development）"></a>四、测试驱动开发（Test Driven Development）</h2><ul><li>敏捷的软件开发方法论，提倡在开发者开发足够多的代码之前优先编写单元测试方法，然后重构开发者编写的源代码。</li></ul><h3 id="1-红-绿-蓝（重构）"><a href="#1-红-绿-蓝（重构）" class="headerlink" title="1.红-绿-蓝（重构）"></a>1.红-绿-蓝（重构）</h3><ul><li><p>红：指的是单元测试运行失败的状态，即在软件中开发新特性，新功能，缺陷对其进行重现时，我们需要开发新的单元测试代码。因为没有代码实现，测试代码必定是失败的，运行状态为红色</p></li><li><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211113174109048.png" alt="image-20211113174109048"></p><ul><li>绿：编写源代码使失败的单元测试能够顺利通过，使其运行时为绿色<ul><li><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211113174232500.png" alt="image-20211113174232500"></li></ul></li></ul></li><li><p>蓝（重构）:当所有的单元测试方法都能顺利通过执行时，将代码进行结构的调整，逻辑的优化，容错的处理，以及各种依赖关系的抽象和重构等。</p></li></ul><h3 id="2-TDD工作流程"><a href="#2-TDD工作流程" class="headerlink" title="2.TDD工作流程"></a>2.TDD工作流程</h3><ul><li><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211113174720952.png" alt="image-20211113174720952"></p><ol><li>编写单元测试，验证软件是否满足新的功能需求</li><li>运行所有的单元测试，检查是否存在失败的单元测试代码</li><li>开发基本的功能代码，使单元测试能够成功执行</li><li>运行单元测试，如果失败则回到步骤3</li><li>重构代码，每次改动代码都需要运行单元测试，以确保重构代码的正确性，失败回到步骤3</li><li>重复整个流程，直到所有的测试条件都能通过验证</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript语法</title>
      <link href="/2021/12/06/%E5%89%8D%E7%AB%AF/TypeScript%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/12/06/%E5%89%8D%E7%AB%AF/TypeScript%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="TypeScript语法"><a href="#TypeScript语法" class="headerlink" title="TypeScript语法"></a>TypeScript语法</h1><h3 id="一、组成部分"><a href="#一、组成部分" class="headerlink" title="一、组成部分"></a>一、组成部分</h3><ul><li>模块</li><li>函数</li><li>变量</li><li>语句和表达式</li><li>注释</li></ul><h3 id="二、第一个TypeScript"><a href="#二、第一个TypeScript" class="headerlink" title="二、第一个TypeScript"></a>二、第一个TypeScript</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> hello : <span class="built_in">string</span> = <span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(hello);</span><br></pre></td></tr></table></figure><ul><li>先通过tsc编译成JavaScript</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(hello);</span><br></pre></td></tr></table></figure><ul><li>用node app.js运行得到Hello World</li><li>app.ts-&gt;TSC-&gt;app.js</li><li>也可以同时编译多个文件</li></ul><h3 id="三、TypeScript关键字"><a href="#三、TypeScript关键字" class="headerlink" title="三、TypeScript关键字"></a>三、TypeScript关键字</h3><ul><li><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211201163802251.png" alt="image-20211201163802251"></li></ul><h3 id="四、对于高级语言开发者更好的切换"><a href="#四、对于高级语言开发者更好的切换" class="headerlink" title="四、对于高级语言开发者更好的切换"></a>四、对于高级语言开发者更好的切换</h3><ol><li>可在编写过程中发现错误</li><li>提供重构工具<ol><li>重命名符号名<ol><li>自动删除未使用的声明</li><li>自动删除执行不到的代码</li><li>自动添加缺少的模块导入语句</li></ol></li><li>提取到函数或方法</li><li>提取类型</li></ol></li></ol><h3 id="五、基础关键字"><a href="#五、基础关键字" class="headerlink" title="五、基础关键字"></a>五、基础关键字</h3><ul><li>var:默认值为undefined</li><li>let:默认值为undefined</li><li>const:声明一个常量必须给初始值</li></ul><h3 id="六、作用域"><a href="#六、作用域" class="headerlink" title="六、作用域"></a>六、作用域</h3><ul><li>块作用域:{}大括号中</li></ul><h3 id="七、注释"><a href="#七、注释" class="headerlink" title="七、注释"></a>七、注释</h3><ul><li><p>单行注释:&#x2F;&#x2F;</p></li><li><p>多行注释: </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*code*/</span></span><br></pre></td></tr></table></figure></li><li><p>区域注释</p></li><li><pre><code class="typescript">// #region 区域描述let x = 0;// #endregion<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 八、数据类型</span><br><span class="line"></span><br><span class="line">+ Undefined:类初始化是被使用</span><br><span class="line">+ Null:表示未初始化的对象,或JSON中的空值</span><br><span class="line">+ Boolean:逻辑值true,false</span><br><span class="line">+ String:文本字符串</span><br><span class="line">+ Symbol:值唯一不可改变</span><br><span class="line">+ Number:代表数字,不区分,int,float,long,double</span><br><span class="line">+ Object:可以存储任意值</span><br><span class="line"></span><br><span class="line">#### 1.模板字面量</span><br><span class="line"></span><br><span class="line">+ 多行字符串-配合字符串占位符</span><br><span class="line"></span><br><span class="line">  ```typescript</span><br><span class="line">  const root = &#x27;test&#x27;;</span><br><span class="line">  //test</span><br><span class="line">  const test = `$&#123;root&#125;`;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h4 id="2-数据属性"><a href="#2-数据属性" class="headerlink" title="2.数据属性"></a>2.数据属性</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="title class_">PropertyName</span>: <span class="title class_">PropertyValue</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>PropertyName表示属性名,PropertyValue表示属性值</li></ul><h4 id="3-存取器属性"><a href="#3-存取器属性" class="headerlink" title="3.存取器属性"></a>3.存取器属性</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">get</span> <span class="title function_">PropertyName</span>() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">PropertyValue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">set</span> <span class="title function_">PropertyName</span>(<span class="params">value</span>) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-可计算属性名"><a href="#4-可计算属性名" class="headerlink" title="4.可计算属性名"></a>4.可计算属性名</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">[<span class="title class_">PropertyExpression</span>]: <span class="title class_">PropertyValue</span>,</span><br><span class="line">get [<span class="title class_">PropertyExpression</span>]() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title class_">PropertyValue</span>;</span><br><span class="line">&#125;</span><br><span class="line">set [<span class="title class_">PropertyExpression</span>](value)&#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九、类型基础"><a href="#九、类型基础" class="headerlink" title="九、类型基础"></a>九、类型基础</h3><p>1、包含以下几种类型</p><ul><li>boolean<ul><li>有两个逻辑值<ul><li>const yes: boolean &#x3D; true;</li></ul></li></ul></li><li>string<ul><li>使用UTF-16储存<ul><li>const foo: string &#x3D; ’foo‘;</li></ul></li></ul></li><li>number<ul><li>采用双精度64位二进制浮点数格式<ul><li>const integer: number&#x3D; 10;</li></ul></li></ul></li><li>bigint<ul><li>可以表示任意精度的整数<ul><li>const integer: bigint &#x3D; 10n;</li></ul></li></ul></li><li>Symbol, unique symbol<ul><li>对应JavaScript中的Symbol<ul><li>Const key: symbol &#x3D; Symbol();</li></ul></li></ul></li><li>undefined</li><li>null</li><li>void</li><li>枚举类型-可以通过枚举成员名访问值<ul><li>数值型枚举-是number类型的子类型<ul><li>没有给成员赋值时,会自动给成员赋值,第一个为0,其后每个加1</li></ul></li><li>字符串枚举<ul><li>需要字符串赋值或另一个字符串枚举成员来初始化,没有自增长的行为</li></ul></li><li>异构型枚举<ul><li>允许使用两种类型的枚举-在代码中很少使用,通常使用对象代替</li><li>必须给跟在字符串类型后面的数值类型赋初始值</li></ul></li></ul></li><li>字面量类型</li><li></li></ul><p>TypeScript基础类型</p><ul><li>any 任意类型</li><li>number 数字类型</li><li>string 字符串类型</li><li>boolean 布尔类型</li><li>数组 无</li><li>元组 无</li><li>enum 枚举</li><li>void void表示方法没有返回值</li><li>null null表示对象值缺失</li><li>undefined 用于初始化变量为一个未定义的值</li><li>never 代表从不会出现的值</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Data JPA学习</title>
      <link href="/2021/11/15/books/Spring%20Data%20JPA%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
      <url>/2021/11/15/books/Spring%20Data%20JPA%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Data-JPA学习"><a href="#Spring-Data-JPA学习" class="headerlink" title="Spring Data JPA学习"></a>Spring Data JPA学习</h1><h4 id="一、Spring-Data-JPA的主要类及结构图"><a href="#一、Spring-Data-JPA的主要类及结构图" class="headerlink" title="一、Spring Data JPA的主要类及结构图"></a>一、Spring Data JPA的主要类及结构图</h4><p>七个Repository接口</p><p>Repository (org.springframework.data.repository)</p><p>CrudRepository (org.springframework.data.repository)</p><p>PagingAndSortingRepository (org.springframework.data.repository)</p><p>QueryByExampleExecutor (org.springframework.data.repository.query)</p><p>JpaRepository (org.springframework.data.jpa.repository)</p><p>JpaSpecificationExecutor (org.springframework.data.jpa.repository)</p><p>QueryDslPredicateExecutor (org.springframework.data.querydsl)</p><p>两个实现类</p><p>SimpleJpaRepository (org.springframework.data.jpa.repository.support)</p><p>QueryDslJpaRepository (org.springframework.data.jpa.repository.support)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">    `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">    `name` varchar(50) DEFAULT NULL,</span><br><span class="line">    `email` varchar(200) DEFAULT NULL,</span><br><span class="line">    PRIMARY KEY (`id`)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">curl &#x27;localhost:8080/demo/add?name=First&amp;email=someemailesomeemailprovider.com&#x27;</span><br></pre></td></tr></table></figure><p>JPA的save与delete方法会先做查询,再做保存或删除.详情看如下源码</p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211219150100196.png" alt="image-20211219150100196"></p><p>JPA的查询方法</p><p>根据方法名</p><p>find…By</p><p>read…By</p><p>query…By</p><p>count…By</p><p>get…By</p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211219151809887.png" alt="image-20211219151809887"></p><p>表达式通常是可以连接的运算符的属性遍历。你可以使用组合属性表达式AND和OR。你还可以将运算关键字Between、LessThan、GreaterThan、Like作为属性表达式。</p><p>JpaRepository关键字列表</p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211219152355135.png" alt="image-20211219152355135"></p><p>Spel表达式</p><p>JPA中 的注解</p><p>@Query,使用JPQL语句.要使用原生SQL需要加上nativeQuery&#x3D;true</p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211219202117349.png" alt="image-20211219202117349"></p><p>@Param</p><p>默认情况下，参数是通过顺序绑定在查询语句上的。这使得查询方法对参数位置的重构容易出错。为了解决这个问题，你可以使用@ Param注解指定方法参数的具体名称，通过绑定的参数名字做查询条件。</p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211219202850685.png" alt="image-20211219202850685"></p><h5 id="基本注解"><a href="#基本注解" class="headerlink" title="基本注解"></a>基本注解</h5><ul><li><p>@Entity定义对象将会成为被JPA管理的实体，将映射到指定的数据库表。</p></li><li><p>@Id定义属性为数据库的主键，一个实体里面必须有一个</p></li><li><p>@Transient表示该属性并非一个到数据库表的字段的映射，表示非持久化属性，与@Basic作用相反。JPA映射数据库的时候忽略它。</p></li><li><p>@Column定义该属性对应数据库中的列名。</p></li><li><p>@Column定义该属性对应数据库中的列名。</p></li><li><p>@Enumerated很好用，直接映射enum枚举类型的字段。</p></li></ul><h5 id="关联关系注解"><a href="#关联关系注解" class="headerlink" title="关联关系注解"></a>关联关系注解</h5><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211222155642395.png" alt="image-20211222155642395"></p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211222155654521.png" alt="image-20211222155654521"></p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211222155740670.png" alt="image-20211222155740670"></p><h5 id="内置约束注解"><a href="#内置约束注解" class="headerlink" title="内置约束注解"></a>内置约束注解</h5><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211222160309274.png" alt="image-20211222160309274"></p><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211222160328660.png" alt="image-20211222160328660"></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 筑基期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习</title>
      <link href="/2021/07/01/development/Git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/07/01/development/Git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Git学习"><a href="#Git学习" class="headerlink" title="Git学习"></a>Git学习</h1><p>一、Git的基本操作</p><p>可以理解Git仓库就是管理了一系列提交动作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化仓库,生成后的.git目录只会出现在工作根目录下,一般不要动手修改.git目录</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看工作目标状态</span></span><br><span class="line">git status</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将文件进行版本控制,会进入暂存区</span></span><br><span class="line">git add [文件名]</span><br><span class="line">git add --all</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交到本地仓库首次执行此命令时会出现错误,email,name等信息不存在</span></span><br><span class="line">git commit -m [message]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对上一次的提交进行修改,不会产生新的commit</span></span><br><span class="line">git commit --amend</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看提交记录</span></span><br><span class="line">git log</span><br><span class="line">git log -all</span><br><span class="line">git log -N</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将提交的文件回退至Untracked</span></span><br><span class="line">git reset HEAD a.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将暂存区的文件回退至Untracked</span></span><br><span class="line">git rm --cached a.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建git分支,早建分支,多用分支</span></span><br><span class="line">git branch &lt;name&gt;</span><br><span class="line">git branch --list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换分支,*号表示所在的分支</span></span><br><span class="line">git checkout &lt;name&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将分支与分支合并</span></span><br><span class="line">git merge &lt;name&gt;</span><br><span class="line">git rebase &lt;name&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">reset命令</span></span><br><span class="line">git reset --soft HEAD</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">提交到远程仓库</span></span><br><span class="line">git push --set-upstream https master</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取远程仓库指定分支的代码</span></span><br><span class="line"> git clone -b 远程分支名  仓库地址</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211224142729230.png" alt="image-20211224142729230"></p><p>三、远程仓库的交互和操作</p><p>四、常见的配置和别名alias用法</p><p>Git配置包含三个不同的作用域,为system,global,loacl,存储在不同的位置当中</p><p>system:”&#x2F;etc&#x2F;gitconfig”文件,作用于所有用户的git仓库</p><p>global:”~&#x2F;.gitconfig”文件,作用于当前用户的所有git仓库</p><p>local:”.git&#x2F;config”文件,仅作用于某个git仓库</p><p>如果local、global和system中拥有相同的配置项，则local的配置会优先生效，因为Git配置项的生效优先级采用就近原则，顺序依次为：local&gt;global&gt;system</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git全局配置</span></span><br><span class="line">git clone xxx.git //ssh时</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;email&quot;</span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git局部配置</span></span><br><span class="line">git clone http:xxx.git</span><br><span class="line">git config user.name &quot;username&quot;</span><br><span class="line">git config user.email &quot;email&quot;</span><br><span class="line">git config credential.helper store</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看config配置</span></span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><p>五.git commit message Angular 规范</p><p>IDEA与GIT</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://hiasia:www.123.com@gitee.com/hiasia/hiasia.git</span><br></pre></td></tr></table></figure><p>六.工作中的Git Flow流程<br>在多组员，多项目等环境进行协同工作时，如果没有统一规范、统一流程，则会导致额外的工作量，甚至会做无用功。所以要减少版本冲突，减轻不必要的工作，就需要规范化的工作流程。<br><img src="https://pic.hiasia.fun/i/2023/10/05/t2oml7-0.png"><br>主要分支简述</p><blockquote><p>天蓝色圆点所在的线为我们源码的主线（prod）。</p></blockquote><blockquote><p>天蓝色方形指向的节点就是每一个发布版本的标签（tag）。</p></blockquote><blockquote><p>紫色圆点所在的线为主要分支线（master）。测试分支(test)同主分支</p></blockquote><blockquote><p>橙色圆点所在的线为新功能开发分支线（feature）。</p></blockquote><blockquote><p>绿色圆点所在的线为新版本发布线（release）.(未用到)</p></blockquote><blockquote><p>红色圆点所在的线为发布版本bug修复线（hotfix）。</p></blockquote><p>原先直接在主分支上提交代码.只能靠提交记录寻找版本</p><h3 id="新分支流程-主分支"><a href="#新分支流程-主分支" class="headerlink" title="新分支流程-主分支"></a>新分支流程-主分支</h3><ol><li>prod分支作为发布版本记录,不直接往prod提交代码</li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle的学习</title>
      <link href="/2021/07/01/development/Gradlew%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/07/01/development/Gradlew%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Gradle的学习"><a href="#Gradle的学习" class="headerlink" title="Gradle的学习"></a>Gradle的学习</h1><p>项目构建工具–脚本采用Groovy书写</p><ol><li><p>项目结构</p><ul><li><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211124113140748.png" alt="image-20211124113140748"></li><li>外层setting.gradle为根项目的配置，可以知道需要包含哪些模块</li><li>最外层的build.gralde也是根项目的配置，模块中的build.gradle是子项目的配置</li><li>gradle文件夹下面是版本配置以及gradle所需要的脚本</li><li>最外层的gradlew为linux&#x2F;mac下的脚本，.bat是windwos下面用的脚本</li><li>优先运行setting配置，再运行主项目中的build，其次运行子build</li></ul></li><li><p>gradle中的task</p><ul><li>gradle中所有的构建工作都是有task完成的，他处理类，编译，打包，发布等操作</li><li>可以运行gradlew tasks查看当前项目等task<ul><li>需要jdk版本&gt;&#x3D;1.8</li></ul></li></ul></li><li><p>task的书写</p><ul><li><img src="https://gitee.com/hiasia/mypciture_space/raw/master//img/image-20211124133739954.png" alt="image-20211124133739954"></li></ul></li><li><p>task执行顺序</p><ul><li><p>默认加载顺序自上而下</p></li><li><p>可以自定义执行顺序</p><ul><li><pre><code class="config">hello.dependsOn clear</code></pre></li></ul></li></ul></li><li><p>默认的gradle task</p><ul><li>gradlew clean</li><li>gradlew build</li><li>等</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Gradle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RESTful API接口规范</title>
      <link href="/2020/07/01/javaWeb/RESTful%20API%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83/"/>
      <url>/2020/07/01/javaWeb/RESTful%20API%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p>随着写的项目代码越来越多,感觉优雅的接口命名,可以大幅提高前端与后端的对接效率.从而整理一下使用到的规范</p><h1 id="一-选择HTTP方法"><a href="#一-选择HTTP方法" class="headerlink" title="一.选择HTTP方法"></a>一.选择HTTP方法</h1><ul><li><code>GET</code>: 用于检索资源。</li><li><code>POST</code>: 用于创建新资源。</li><li><code>PUT</code>: 用于更新资源。</li><li><code>DELETE</code>: 用于删除资源。</li></ul><h1 id="二-使用具体的名词表示资源"><a href="#二-使用具体的名词表示资源" class="headerlink" title="二.使用具体的名词表示资源"></a>二.使用具体的名词表示资源</h1><ul><li>使用名词来表示资源，例如 <code>/users</code> 表示用户资源。</li></ul><h1 id="三-使用复数形式的名词"><a href="#三-使用复数形式的名词" class="headerlink" title="三.使用复数形式的名词"></a>三.使用复数形式的名词</h1><ul><li>对资源使用复数形式的名词，例如 &#x2F;users 而不是 &#x2F;user.</li></ul><h1 id="四-使用清晰的URL结构"><a href="#四-使用清晰的URL结构" class="headerlink" title="四.使用清晰的URL结构"></a>四.使用清晰的URL结构</h1><ul><li>使用清晰的URL路径，例如 &#x2F;users&#x2F;{id} 表示获取特定用户.</li></ul><h1 id="五-使用查询参数进行过滤和排序"><a href="#五-使用查询参数进行过滤和排序" class="headerlink" title="五.使用查询参数进行过滤和排序"></a>五.使用查询参数进行过滤和排序</h1><ul><li>使用查询参数如 ?sort&#x3D;field 或 ?filter&#x3D;value 来进行排序和过滤.</li></ul><h1 id="六-使用HTTP状态码来表示操作结果"><a href="#六-使用HTTP状态码来表示操作结果" class="headerlink" title="六.使用HTTP状态码来表示操作结果"></a>六.使用HTTP状态码来表示操作结果</h1><ul><li>使用适当的HTTP状态码来表示操作结果，例如 200 OK、201 Created、204 No Content、400 Bad Request、404 Not Found 等.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 炼气期 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
